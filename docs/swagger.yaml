basePath: /api/v1
definitions:
  discordgo.GuildFeature:
    enum:
    - ANIMATED_BANNER
    - ANIMATED_ICON
    - AUTO_MODERATION
    - BANNER
    - COMMUNITY
    - DISCOVERABLE
    - FEATURABLE
    - INVITE_SPLASH
    - MEMBER_VERIFICATION_GATE_ENABLED
    - MONETIZATION_ENABLED
    - MORE_STICKERS
    - NEWS
    - PARTNERED
    - PREVIEW_ENABLED
    - PRIVATE_THREADS
    - ROLE_ICONS
    - TICKETED_EVENTS_ENABLED
    - VANITY_URL
    - VERIFIED
    - VIP_REGIONS
    - WELCOME_SCREEN_ENABLED
    type: string
    x-enum-varnames:
    - GuildFeatureAnimatedBanner
    - GuildFeatureAnimatedIcon
    - GuildFeatureAutoModeration
    - GuildFeatureBanner
    - GuildFeatureCommunity
    - GuildFeatureDiscoverable
    - GuildFeatureFeaturable
    - GuildFeatureInviteSplash
    - GuildFeatureMemberVerificationGateEnabled
    - GuildFeatureMonetizationEnabled
    - GuildFeatureMoreStickers
    - GuildFeatureNews
    - GuildFeaturePartnered
    - GuildFeaturePreviewEnabled
    - GuildFeaturePrivateThreads
    - GuildFeatureRoleIcons
    - GuildFeatureTicketedEventsEnabled
    - GuildFeatureVanityURL
    - GuildFeatureVerified
    - GuildFeatureVipRegions
    - GuildFeatureWelcomeScreenEnabled
  github_com_defipod_mochi_pkg_model.Activity:
    properties:
      guild_default:
        type: boolean
      id:
        type: integer
      name:
        type: string
      xp:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_model.AirdropCampaign:
    properties:
      created_at:
        type: string
      deadline_at:
        type: string
      detail:
        type: string
      id:
        type: integer
      prev_airdrop_campaign_id:
        type: integer
      profile_campaign_status:
        type: string
      reward_amount:
        type: integer
      reward_token_symbol:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.AirdropStatusCount:
    properties:
      count:
        type: integer
      status:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.AlertFrequency:
    enum:
    - only_once
    - once_a_day
    - always
    type: string
    x-enum-varnames:
    - OnlyOnce
    - OnceADay
    - Always
  github_com_defipod_mochi_pkg_model.AlertType:
    enum:
    - price_reaches
    - price_rises_above
    - price_drops_to
    - change_is_over
    - change_is_under
    type: string
    x-enum-varnames:
    - PriceReaches
    - PriceRisesAbove
    - PriceDropsTo
    - ChangeIsOver
    - ChangeIsUnder
  github_com_defipod_mochi_pkg_model.Chain:
    properties:
      coin_gecko_id:
        type: string
      currency:
        type: string
      id:
        type: integer
      name:
        type: string
      short_name:
        type: string
      type:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.ChainType:
    enum:
    - evm
    - ron
    - sol
    - sui
    - apt
    type: string
    x-enum-varnames:
    - ChainTypeEvm
    - ChainTypeRonin
    - ChainTypeSolana
    - ChainTypeSui
    - ChainTypeAptos
  github_com_defipod_mochi_pkg_model.CoingeckoSupportedTokens:
    properties:
      current_price:
        type: number
      detail_platforms:
        items:
          type: integer
        type: array
      id:
        type: string
      is_native:
        type: boolean
      is_not_supported:
        type: boolean
      is_popular:
        type: boolean
      most_popular:
        type: boolean
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.CommandPermission:
    properties:
      code:
        type: string
      created_at:
        type: string
      description:
        type: string
      discord_permission_flag:
        type: string
      id:
        type: integer
      need_dm:
        type: boolean
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.ConfigXpLevel:
    properties:
      level:
        type: integer
      min_xp:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_model.DaoProposal:
    properties:
      closed_at:
        type: string
      created_at:
        type: string
      creator_id:
        type: string
      description:
        type: string
      discussion_channel_id:
        type: string
      guild_config_dao_proposal_id:
        type: integer
      guild_id:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      voting_channel_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.DaoProposalVoteCount:
    properties:
      choice:
        type: string
      guild_id:
        type: string
      proposal_id:
        type: string
      sum:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_model.DaoProposalVoteOption:
    properties:
      address:
        type: string
      chain_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      proposal_id:
        type: integer
      required_amount:
        type: string
      symbol:
        type: string
      updated_at:
        type: string
      vote_option:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DaoVoteOption'
      vote_option_id:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_model.DaoVote:
    properties:
      choice:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.VoteChoice'
      created_at:
        type: string
      id:
        type: integer
      point:
        type: number
      proposal_id:
        type: integer
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.DaoVoteOption:
    properties:
      created_at:
        type: string
      id:
        type: integer
      type:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ProposalVotingType'
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.DefaultMessageSetting:
    properties:
      action:
        type: string
      enable:
        type: boolean
      message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.DiscordCMD:
    properties:
      application_id:
        type: string
      default_member_permissions:
        type: integer
      description:
        type: string
      description_localizations:
        type: string
      guild_id:
        type: string
      id:
        type: string
      name:
        type: string
      name_localizations:
        type: string
      nsfw:
        type: boolean
      type:
        type: integer
      version:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.DiscordGuild:
    properties:
      active:
        type: boolean
      alias:
        type: string
      available_cmds:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.JSONNullString'
      bot_scopes:
        items:
          type: string
        type: array
      created_at:
        type: string
      global_xp:
        type: boolean
      id:
        type: string
      log_channel:
        type: string
      name:
        type: string
      roles:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildRole'
        type: array
    type: object
  github_com_defipod_mochi_pkg_model.DiscordUserGMStreak:
    properties:
      created_at:
        type: string
      discord_id:
        type: string
      guild_id:
        type: string
      last_streak_date:
        type: string
      streak_count:
        type: integer
      total_count:
        type: integer
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigActivity:
    properties:
      active:
        type: boolean
      activity:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Activity'
      activity_id:
        type: integer
      guild_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigAdminRole:
    properties:
      guild_id:
        type: string
      id:
        type: integer
      role_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigDaoProposal:
    properties:
      address:
        type: string
      authority:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ProposalAuthorityType'
      chain_id:
        type: integer
      created_at:
        type: string
      guideline_channel_id:
        type: string
      guild_id:
        type: string
      id:
        type: integer
      proposal_channel_id:
        type: string
      required_amount:
        type: string
      symbol:
        type: string
      type:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ProposalVotingType'
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigDefaultCollection:
    properties:
      address:
        type: string
      chain_id:
        type: string
      created_at:
        type: string
      guild_id:
        type: string
      symbol:
        type: string
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigDefaultTicker:
    properties:
      default_ticker:
        type: string
      guild_id:
        type: string
      query:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigGmGn:
    properties:
      channel_id:
        type: string
      emoji:
        type: string
      guild_id:
        type: string
      id:
        type: string
      msg:
        type: string
      sticker:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigLevelRole:
    properties:
      guild_id:
        type: string
      level:
        type: integer
      level_config:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ConfigXpLevel'
      role_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigSalesTracker:
    properties:
      chain:
        type: string
      channel_id:
        type: string
      contract_address:
        type: string
      created_at:
        type: string
      guild_id:
        type: string
      id:
        type: string
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigTokenRole:
    properties:
      created_at:
        type: string
      guild_id:
        type: string
      id:
        type: integer
      required_amount:
        type: number
      role_id:
        type: string
      token:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Token'
      token_id:
        type: integer
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigWalletVerificationMessage:
    properties:
      content:
        type: string
      created_at:
        type: string
      discord_message_id:
        type: string
      embedded_message:
        items:
          type: integer
        type: array
      guild_id:
        type: string
      verify_channel_id:
        type: string
      verify_role_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigWelcomeChannel:
    properties:
      channel_id:
        type: string
      guild_id:
        type: string
      id:
        type: string
      welcome_message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildRole:
    properties:
      guild_id:
        type: string
      name:
        type: string
      role_id:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_model.GuildUser:
    properties:
      avatar:
        type: string
      guild_id:
        type: string
      id:
        type: string
      invited_by:
        type: string
      joined_at:
        type: string
      nickname:
        type: string
      roles:
        items:
          type: string
        type: array
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildUserXP:
    properties:
      current_level_role:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigLevelRole'
      guild:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DiscordGuild'
      guild_id:
        type: string
      guild_rank:
        type: integer
      level:
        type: integer
      next_level_role:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigLevelRole'
      nr_of_actions:
        type: integer
      profile_id:
        type: string
      progress:
        type: number
      total_xp:
        type: integer
      user:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.User'
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.JSONNullString:
    properties:
      string:
        type: string
      valid:
        description: Valid is true if String is not NULL
        type: boolean
    type: object
  github_com_defipod_mochi_pkg_model.MoneySource:
    properties:
      platform:
        type: string
      platform_identifier:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.MonikerConfig:
    properties:
      amount:
        type: number
      created_at:
        type: string
      guild_id:
        type: string
      id:
        type: string
      moniker:
        type: string
      plural:
        type: string
      token:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.OffchainTipBotToken'
      token_id:
        type: string
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.NFTCollection:
    properties:
      address:
        type: string
      author:
        type: string
      chain_id:
        type: string
      created_at:
        type: string
      erc_format:
        type: string
      id:
        type: string
      image:
        type: string
      is_verified:
        type: boolean
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.NFTCollectionDetail:
    properties:
      address:
        type: string
      author:
        type: string
      chain:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Chain'
      chain_id:
        type: string
      created_at:
        type: string
      erc_format:
        type: string
      id:
        type: string
      image:
        type: string
      is_verified:
        type: boolean
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.NewListedNFTCollection:
    properties:
      address:
        type: string
      author:
        type: string
      chain:
        type: string
      chain_id:
        type: string
      created_at:
        type: string
      erc_format:
        type: string
      id:
        type: string
      image:
        type: string
      is_verified:
        type: boolean
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.NotificationFlag:
    properties:
      description:
        type: string
      group:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.NotificationGroup'
      key:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.NotificationGroup:
    enum:
    - wallet
    - community
    - app
    type: string
    x-enum-varnames:
    - NotificationGroupWallet
    - NotificationGroupCommunity
    - NotificationGroupApp
  github_com_defipod_mochi_pkg_model.OffchainTipBotToken:
    properties:
      address:
        type: string
      chain:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Chain'
      chain_id:
        type: string
      coin_gecko_id:
        type: string
      created_at:
        type: string
      decimal:
        type: integer
      icon:
        type: string
      id:
        type: string
      is_native:
        type: boolean
      service_fee:
        type: number
      status:
        type: integer
      token_id:
        type: string
      token_name:
        type: string
      token_price:
        type: number
      token_symbol:
        type: string
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.PayToken:
    properties:
      address:
        type: string
      chain:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Chain'
      chain_id:
        type: string
      coin_gecko_id:
        type: string
      decimal:
        type: integer
      icon:
        type: string
      id:
        type: string
      name:
        type: string
      native:
        type: boolean
      price:
        type: number
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.ProductBotCommand:
    properties:
      code:
        type: string
      created_at:
        type: string
      description:
        type: string
      discord_alias:
        type: string
      discord_command:
        type: string
      id:
        type: integer
      scope:
        $ref: '#/definitions/typeset.ProductBotCommandScope'
      telegram_alias:
        type: string
      telegram_command:
        type: string
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.ProductChangelogView:
    properties:
      changelog_name:
        type: string
      created_at:
        type: string
      key:
        type: string
      metadata:
        items:
          type: integer
        type: array
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.ProductChangelogs:
    properties:
      content:
        type: string
      created_at:
        type: string
      file_name:
        type: string
      github_url:
        type: string
      id:
        type: integer
      is_expired:
        type: boolean
      next_version:
        type: string
      previous_version:
        type: string
      product:
        type: string
      seo_description:
        type: string
      thumbnail_url:
        type: string
      title:
        type: string
      updated_at:
        type: string
      version:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.ProductMetadataEmojis:
    properties:
      code:
        type: string
      discord_id:
        type: string
      id:
        type: integer
      telegram_id:
        type: string
      twitter_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.ProfileAirdropCampaign:
    properties:
      airdrop_campaign:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.AirdropCampaign'
      airdrop_campaign_id:
        type: integer
      id:
        type: integer
      is_favorite:
        type: boolean
      profile_id:
        type: string
      status:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.ProposalAuthorityType:
    enum:
    - admin
    - token_holder
    type: string
    x-enum-varnames:
    - Admin
    - TokenHolder
  github_com_defipod_mochi_pkg_model.ProposalVotingType:
    enum:
    - nft_collection
    - crypto_token
    type: string
    x-enum-varnames:
    - NFT
    - CryptoToken
  github_com_defipod_mochi_pkg_model.Quest:
    properties:
      action:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestAction'
      frequency:
        type: integer
      id:
        type: string
      rewards:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestReward'
        type: array
      routine:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestRoutine'
      title:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.QuestAction:
    enum:
    - gm
    - vote
    - trade
    - gift
    - ticker
    - watchlist
    - bonus
    type: string
    x-enum-varnames:
    - GM
    - VOTE
    - TRADE
    - GIFT
    - TICKER
    - WATCHLIST
    - BONUS
  github_com_defipod_mochi_pkg_model.QuestReward:
    properties:
      id:
        type: string
      pass_id:
        type: string
      quest_id:
        type: string
      reward_amount:
        type: integer
      reward_type:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestRewardType'
      reward_type_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.QuestRewardType:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.QuestRoutine:
    enum:
    - daily
    - weekly
    - monthly
    - yearly
    - once
    type: string
    x-enum-varnames:
    - DAILY
    - WEEKLY
    - MONTHLY
    - YEARLY
    - ONCE
  github_com_defipod_mochi_pkg_model.QuestUserList:
    properties:
      action:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestAction'
      current:
        type: integer
      end_time:
        type: string
      id:
        type: string
      is_claimed:
        type: boolean
      is_completed:
        type: boolean
      multiplier:
        type: number
      quest:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Quest'
      quest_id:
        type: string
      routine:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestRoutine'
      start_time:
        type: string
      target:
        type: integer
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.QuestUserReward:
    properties:
      claimed_at:
        type: string
      pass_id:
        type: string
      quest_id:
        type: string
      reward:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestReward'
      reward_amount:
        type: integer
      reward_id:
        type: string
      reward_type_id:
        type: string
      start_time:
        type: string
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.SettingFlags:
    additionalProperties:
      type: boolean
    type: object
  github_com_defipod_mochi_pkg_model.TargetGroup:
    enum:
    - all
    - receivers
    - friends
    type: string
    x-enum-varnames:
    - TargetGroupAll
    - TargetGroupReceivers
    - TargetGroupFriends
  github_com_defipod_mochi_pkg_model.Token:
    properties:
      address:
        type: string
      chain:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Chain'
      chain_id:
        type: integer
      coin_gecko_id:
        type: string
      decimal:
        type: integer
      discord_bot_supported:
        type: boolean
      guild_default:
        type: boolean
      id:
        type: integer
      is_native:
        type: boolean
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.TokenSupportRequestStatus:
    enum:
    - approved
    - rejected
    - pending
    type: string
    x-enum-varnames:
    - TokenSupportApproved
    - TokenSupportRejected
    - TokenSupportPending
  github_com_defipod_mochi_pkg_model.TrackingType:
    enum:
    - follow
    - track
    - copy
    type: string
    x-enum-varnames:
    - TrackingTypeFollow
    - TrackingTypeTrack
    - TrackingTypeCopy
  github_com_defipod_mochi_pkg_model.TxLimitSetting:
    properties:
      action:
        type: string
      max:
        type: number
      min:
        type: number
    type: object
  github_com_defipod_mochi_pkg_model.User:
    properties:
      discriminator:
        type: string
      guild_users:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildUser'
        type: array
      id:
        type: string
      nr_of_join:
        type: integer
      username:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.UserFeedback:
    properties:
      command:
        type: string
      completed_at:
        type: string
      confirmed_at:
        type: string
      created_at:
        type: string
      discord_id:
        type: string
      feedback:
        type: string
      id:
        $ref: '#/definitions/uuid.NullUUID'
      message_id:
        type: string
      profile_id:
        type: string
      status:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.UserNotificationSetting:
    properties:
      enable:
        type: boolean
      flags:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.SettingFlags'
      notification_settings:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.NotificationFlag'
        type: array
      platforms:
        items:
          type: string
        type: array
      profile_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.UserPaymentSetting:
    properties:
      default_message_enable:
        type: boolean
      default_message_settings:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DefaultMessageSetting'
        type: array
      default_money_source:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.MoneySource'
      default_receiver_platform:
        type: string
      prioritized_token:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.PayToken'
        type: array
      prioritized_token_ids:
        items:
          type: string
        type: array
      profile_id:
        type: string
      tx_limit_enable:
        type: boolean
      tx_limit_settings:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.TxLimitSetting'
        type: array
    type: object
  github_com_defipod_mochi_pkg_model.UserPrivacySetting:
    properties:
      profile_id:
        type: string
      show_destination_wallet:
        type: boolean
      tx_target_group:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.TargetGroup'
    type: object
  github_com_defipod_mochi_pkg_model.UserTokenSupportRequest:
    properties:
      channel_id:
        type: string
      coin_gecko_id:
        type: string
      created_at:
        type: string
      decimal:
        type: integer
      guild_id:
        type: string
      icon:
        type: string
      id:
        type: integer
      message_id:
        type: string
      status:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.TokenSupportRequestStatus'
      symbol:
        type: string
      token_address:
        type: string
      token_chain_id:
        type: integer
      token_name:
        type: string
      updated_at:
        type: string
      user_discord_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.UserWalletWatchlist:
    properties:
      copying:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.UserWalletWatchlistItem'
        type: array
      following:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.UserWalletWatchlistItem'
        type: array
      tracking:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.UserWalletWatchlistItem'
        type: array
    type: object
  github_com_defipod_mochi_pkg_model.UserWalletWatchlistItem:
    properties:
      address:
        type: string
      alias:
        type: string
      chain_type:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ChainType'
      created_at:
        type: string
      fetched_data:
        type: boolean
      is_owner:
        type: boolean
      net_worth:
        type: number
      profile_id:
        type: string
      type:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.TrackingType'
    type: object
  github_com_defipod_mochi_pkg_model.Vault:
    properties:
      created_at:
        type: string
      discord_guild:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DiscordGuild'
      guild_id:
        type: string
      id:
        type: integer
      name:
        type: string
      solana_wallet_address:
        type: string
      threshold:
        type: string
      total_amount_evm:
        type: string
      total_amount_solana:
        type: string
      updated_at:
        type: string
      vault_treasurers:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.VaultTreasurer'
        type: array
      wallet_address:
        type: string
      wallet_number:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_model.VaultTreasurer:
    properties:
      created_at:
        type: string
      guild_id:
        type: string
      id:
        type: integer
      role:
        type: string
      updated_at:
        type: string
      user_discord_id:
        type: string
      user_profile_id:
        type: string
      vault:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Vault'
      vault_id:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_model.VoteChoice:
    enum:
    - "Yes"
    - "No"
    - Abstain
    type: string
    x-enum-varnames:
    - "Yes"
    - "No"
    - Abstain
  github_com_defipod_mochi_pkg_request.AddNftWatchlistRequest:
    properties:
      chain:
        type: string
      collection_address:
        type: string
      collection_symbol:
        type: string
      guild_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.AddToWatchlistRequest:
    properties:
      coin_gecko_id:
        type: string
      is_fiat:
        type: boolean
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.AddTokenPriceAlertRequest:
    properties:
      alert_type:
        allOf:
        - $ref: '#/definitions/github_com_defipod_mochi_pkg_model.AlertType'
        enum:
        - price_reaches
        - price_rises_above
        - price_drops_to
        - change_is_over
        - change_is_under
      frequency:
        allOf:
        - $ref: '#/definitions/github_com_defipod_mochi_pkg_model.AlertFrequency'
        enum:
        - only_once
        - once_a_day
        - always
      price_by_percent:
        type: number
      symbol:
        type: string
      user_discord_id:
        type: string
      value:
        type: number
    type: object
  github_com_defipod_mochi_pkg_request.AssignVerifiedRoleRequest:
    properties:
      guild_id:
        type: string
      user_discord_id:
        type: string
    required:
    - guild_id
    - user_discord_id
    type: object
  github_com_defipod_mochi_pkg_request.ClaimQuestsRewardsRequest:
    properties:
      quest_id:
        type: string
      routine:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestRoutine'
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.ConfigDefaultCollection:
    properties:
      address:
        type: string
      chain:
        type: string
      guild_id:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.ConfigDefaultTokenRequest:
    properties:
      guild_id:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.ConfigGroupNFTRoleRequest:
    properties:
      collection_address:
        items:
          type: string
        type: array
      group_name:
        type: string
      guildID:
        type: string
      number_of_tokens:
        type: integer
      role_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.ConfigLevelRoleRequest:
    properties:
      guildID:
        type: string
      level:
        type: integer
      role_id:
        type: string
    required:
    - guildID
    type: object
  github_com_defipod_mochi_pkg_request.CreateAirdropCampaignRequest:
    properties:
      deadline_at:
        type: string
      detail:
        type: string
      id:
        type: integer
      prev_airdrop_campaign_id:
        type: integer
      reward_amount:
        type: integer
      reward_token_symbol:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.CreateDaoProposalRequest:
    properties:
      creator_id:
        type: string
      description:
        type: string
      guild_id:
        type: string
      title:
        type: string
      vote_option:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_request.VoteOptionRequest'
      voting_channel_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.CreateDaoVoteRequest:
    properties:
      choice:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.VoteChoice'
      proposal_id:
        type: integer
      user_id:
        type: string
    required:
    - choice
    - proposal_id
    - user_id
    type: object
  github_com_defipod_mochi_pkg_request.CreateDefaultRoleRequest:
    properties:
      guildID:
        type: string
      role_id:
        type: string
    required:
    - guildID
    type: object
  github_com_defipod_mochi_pkg_request.CreateGuildAdminRoleRequest:
    properties:
      guildID:
        type: string
      role_ids:
        items:
          type: string
        type: array
    type: object
  github_com_defipod_mochi_pkg_request.CreateGuildTokenRole:
    properties:
      address:
        type: string
      amount:
        type: number
      chain:
        type: string
      guildID:
        type: string
      role_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.CreateNFTCollectionRequest:
    properties:
      address:
        type: string
      author:
        type: string
      chain:
        type: string
      chain_id:
        type: string
      channel_id:
        type: string
      guild_id:
        type: string
      message_id:
        type: string
      priority_flag:
        type: boolean
    type: object
  github_com_defipod_mochi_pkg_request.CreateProductChangelogsViewRequest:
    properties:
      changelog_name:
        type: string
      key:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.CreateProfileAirdropCampaignRequest:
    properties:
      airdrop_campaign_id:
        type: integer
      is_favorite:
        type: boolean
      status:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.CreateProposalChannelConfig:
    properties:
      address:
        type: string
      authority:
        allOf:
        - $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ProposalAuthorityType'
        enum:
        - admin
        - token_holder
      chain:
        type: string
      channel_id:
        type: string
      guild_id:
        type: string
      required_amount:
        type: number
      type:
        allOf:
        - $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ProposalVotingType'
        enum:
        - nft_collection
        - crypto_token
    required:
    - authority
    - channel_id
    - guild_id
    type: object
  github_com_defipod_mochi_pkg_request.CreateSalesTrackerConfigRequest:
    properties:
      chain:
        type: string
      channel_id:
        type: string
      contract_address:
        type: string
      guild_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.CreateTipConfigNotify:
    properties:
      channel_id:
        type: string
      guild_id:
        type: string
      token:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.CreateUserRequest:
    properties:
      guild_id:
        type: string
      id:
        type: string
      invited_by:
        type: string
      nickname:
        type: string
      username:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.CreateUserTokenSupportRequest:
    properties:
      channel_id:
        type: string
      guild_id:
        type: string
      message_id:
        type: string
      token_address:
        type: string
      token_chain:
        type: string
      user_discord_id:
        type: string
    required:
    - channel_id
    - guild_id
    - message_id
    - token_address
    - token_chain
    - user_discord_id
    type: object
  github_com_defipod_mochi_pkg_request.DefaultMessageSetting:
    properties:
      action:
        type: string
      enable:
        type: boolean
      message:
        type: string
    required:
    - action
    - enable
    - message
    type: object
  github_com_defipod_mochi_pkg_request.DeleteGuildConfigDaoProposal:
    properties:
      id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.DeleteMonikerConfigRequest:
    properties:
      guild_id:
        type: string
      moniker:
        type: string
    required:
    - guild_id
    - moniker
    type: object
  github_com_defipod_mochi_pkg_request.DeleteWelcomeConfigRequest:
    properties:
      guild_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.EditMessageRepostRequest:
    properties:
      guild_id:
        type: string
      origin_channel_id:
        type: string
      origin_message_id:
        type: string
      repost_channel_id:
        type: string
      repost_message_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.GetTrackingWalletsRequest:
    properties:
      address:
        type: string
      profileID:
        type: string
      withBalance:
        type: boolean
    type: object
  github_com_defipod_mochi_pkg_request.GuildConfigDefaultNftTickerRequest:
    properties:
      chain_id:
        type: integer
      collection_address:
        type: string
      guild_id:
        type: string
      query:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.GuildConfigDefaultTickerRequest:
    properties:
      default_ticker:
        type: string
      guild_id:
        type: string
      query:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.GuildIDRequest:
    properties:
      guild_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.MoneySource:
    properties:
      platform:
        type: string
      platform_identifier:
        type: string
    required:
    - platform
    - platform_identifier
    type: object
  github_com_defipod_mochi_pkg_request.NewGuildConfigWalletVerificationMessageRequest:
    properties:
      content:
        type: string
      created_at:
        type: string
      discord_message_id:
        type: string
      embedded_message:
        items:
          type: integer
        type: array
      guild_id:
        type: string
      verify_channel_id:
        type: string
      verify_role_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.OffchainTransferRequest:
    properties:
      all:
        type: boolean
      amount:
        type: number
      chain_id:
        type: string
      channel_id:
        type: string
      each:
        type: boolean
      guild_id:
        type: string
      image:
        type: string
      message:
        type: string
      platform:
        type: string
      recipients:
        items:
          type: string
        type: array
      sender:
        type: string
      token:
        type: string
      transfer_type:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.OnboardingStartRequest:
    properties:
      platform:
        enum:
        - discord
        - telegram
        type: string
      profile_id:
        type: string
    required:
    - platform
    - profile_id
    type: object
  github_com_defipod_mochi_pkg_request.PaymentSetting:
    properties:
      default_message_enable:
        type: boolean
      default_message_settings:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.DefaultMessageSetting'
        type: array
      default_money_source:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_request.MoneySource'
      default_receiver_platform:
        type: string
      token_priorities:
        items:
          type: string
        type: array
      tx_limit_enable:
        type: boolean
      tx_limit_settings:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.TxLimitSetting'
        type: array
    required:
    - default_message_enable
    - default_message_settings
    - default_money_source
    - default_receiver_platform
    - token_priorities
    - tx_limit_enable
    - tx_limit_settings
    type: object
  github_com_defipod_mochi_pkg_request.PrivacySetting:
    properties:
      show_destination_wallet:
        type: boolean
      tx_target_group:
        type: string
    required:
    - show_destination_wallet
    - tx_target_group
    type: object
  github_com_defipod_mochi_pkg_request.RoleReactionRequest:
    properties:
      guild_id:
        type: string
      message_id:
        type: string
      reaction:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.RoleReactionUpdateRequest:
    properties:
      channel_id:
        type: string
      guildID:
        type: string
      message_id:
        type: string
      reaction:
        type: string
      role_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.SendUserXPRequest:
    properties:
      amount:
        type: integer
      each:
        type: boolean
      guild_id:
        type: string
      recipients:
        items:
          type: string
        type: array
    type: object
  github_com_defipod_mochi_pkg_request.SwapRequest:
    properties:
      aggregator:
        type: string
      chainName:
        type: string
      routeSummary: {}
      swapData: {}
      userDiscordId:
        type: string
    required:
    - chainName
    - userDiscordId
    type: object
  github_com_defipod_mochi_pkg_request.TrackFriendTechKeyRequest:
    properties:
      decrease_alert_at:
        type: integer
      increase_alert_at:
        type: integer
      key_address:
        type: string
      profile_id:
        type: string
    required:
    - key_address
    - profile_id
    type: object
  github_com_defipod_mochi_pkg_request.TrackWalletRequest:
    properties:
      address:
        type: string
      alias:
        type: string
      chain_type:
        type: string
      channel_id:
        type: string
      is_owner:
        type: boolean
      message_id:
        type: string
      type:
        type: string
    required:
    - address
    - chain_type
    - type
    type: object
  github_com_defipod_mochi_pkg_request.TransferV2Request:
    properties:
      all:
        type: boolean
      amount:
        type: number
      chain_id:
        type: string
      channel_avatar:
        type: string
      channel_id:
        type: string
      channel_name:
        type: string
      channel_url:
        type: string
      each:
        type: boolean
      guild_id:
        type: string
      message:
        type: string
      metadata:
        additionalProperties: true
        type: object
      moniker:
        type: string
      original_amount:
        type: number
      original_tx_id:
        type: string
      platform:
        enum:
        - discord
        - telegram
        - web
        type: string
      recipients:
        items:
          type: string
        type: array
      sender:
        type: string
      theme_id:
        type: integer
      token:
        type: string
      transfer_type:
        enum:
        - transfer
        - airdrop
        type: string
    required:
    - amount
    - chain_id
    - platform
    - recipients
    - sender
    - token
    - transfer_type
    type: object
  github_com_defipod_mochi_pkg_request.TxLimitSetting:
    properties:
      action:
        type: string
      max:
        type: number
      min:
        type: number
    required:
    - action
    type: object
  github_com_defipod_mochi_pkg_request.UnlinkBinance:
    properties:
      discord_user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpdateDaoVoteRequest:
    properties:
      choice:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.VoteChoice'
      user_id:
        type: string
    required:
    - choice
    - user_id
    type: object
  github_com_defipod_mochi_pkg_request.UpdateFriendTechKeyTrackRequest:
    properties:
      decrease_alert_at:
        type: integer
      increase_alert_at:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_request.UpdateGeneralSettingsPayloadRequest:
    properties:
      payment:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_request.PaymentSetting'
      privacy:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_request.PrivacySetting'
    required:
    - payment
    - privacy
    type: object
  github_com_defipod_mochi_pkg_request.UpdateGuildRequest:
    properties:
      active:
        type: boolean
      available_cmds:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DiscordCMD'
        type: array
      global_xp:
        type: boolean
      left_at:
        type: string
      log_channel:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpdateNotificationSettingPayloadRequest:
    properties:
      enable:
        type: boolean
      flags:
        additionalProperties:
          type: boolean
        type: object
      platforms:
        items:
          type: string
        type: array
    required:
    - enable
    - flags
    - platforms
    type: object
  github_com_defipod_mochi_pkg_request.UpdateQuestProgressRequest:
    properties:
      action:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestAction'
      guild_id:
        type: string
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpdateTrackingInfoRequest:
    properties:
      alias:
        description: Request body, only update the following fields
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpdateUserFeedbackRequest:
    properties:
      id:
        type: string
      status:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpsertCustomTokenConfigRequest:
    properties:
      active:
        type: boolean
      address:
        type: string
      chain:
        type: string
      chain_id:
        type: integer
      coin_gecko_id:
        type: string
      decimals:
        type: integer
      discord_bot_supported:
        type: boolean
      guild_default:
        type: boolean
      guild_id:
        type: string
      id:
        type: integer
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpsertGmConfigRequest:
    properties:
      channel_id:
        type: string
      emoji:
        type: string
      guild_id:
        type: string
      msg:
        type: string
      sticker:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpsertGuildConfigTipRangeRequest:
    properties:
      guild_id:
        type: string
      max:
        type: number
      min:
        type: number
    type: object
  github_com_defipod_mochi_pkg_request.UpsertGuildDefaultCurrencyRequest:
    properties:
      guild_id:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpsertGuildTokenConfigRequest:
    properties:
      active:
        type: boolean
      guild_id:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpsertMonikerConfigRequest:
    properties:
      amount:
        type: number
      guild_id:
        type: string
      moniker:
        type: string
      plural:
        type: string
      token:
        type: string
    required:
    - amount
    - guild_id
    - moniker
    - token
    type: object
  github_com_defipod_mochi_pkg_request.UpsertUserTag:
    properties:
      guild_id:
        type: string
      is_active:
        type: boolean
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpsertWelcomeConfigRequest:
    properties:
      channel_id:
        type: string
      guild_id:
        type: string
      welcome_message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UserFeedbackRequest:
    properties:
      avatar:
        type: string
      command:
        type: string
      discord_id:
        type: string
      feedback:
        type: string
      message_id:
        type: string
      profile_id:
        type: string
      username:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.VoteOptionRequest:
    properties:
      address:
        type: string
      chain_id:
        type: integer
      id:
        type: integer
      required_amount:
        type: integer
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.AddToWatchlistResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.AddToWatchlistResponseData'
    type: object
  github_com_defipod_mochi_pkg_response.AddToWatchlistResponseData:
    properties:
      base_coin:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetCoinResponse'
      base_suggestions:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.CoingeckoSupportedTokens'
        type: array
      target_coin:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetCoinResponse'
      target_suggestions:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.CoingeckoSupportedTokens'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.AddTokenPriceAlertResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TokenPriceAlertResponseData'
    type: object
  github_com_defipod_mochi_pkg_response.AirdropCampaignResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.AirdropCampaign'
    type: object
  github_com_defipod_mochi_pkg_response.AirdropCampaignStatResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.AirdropStatusCount'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.AirdropCampaignsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.AirdropCampaign'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.AssetPlatformResponseData:
    properties:
      chain_identifier:
        type: integer
      id:
        type: string
      name:
        type: string
      shortname:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.AssetToken:
    properties:
      address:
        type: string
      chain:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.AssetTokenChain'
      decimal:
        type: integer
      icon:
        type: string
      id:
        type: string
      name:
        type: string
      native:
        type: boolean
      pnl:
        type: string
      price:
        type: number
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.AssetTokenChain:
    properties:
      name:
        type: string
      short_name:
        type: string
      type:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.BinanceFutureAccountPositionResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.BinanceFuturePositionInformation'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.BinanceFuturePositionInfo:
    properties:
      entryPrice:
        type: string
      isAutoAddMargin:
        type: string
      isolatedMargin:
        type: string
      isolatedWallet:
        type: string
      leverage:
        type: string
      liquidationPrice:
        type: string
      marginType:
        type: string
      markPrice:
        type: string
      maxNotionalValue:
        type: string
      notional:
        type: string
      positionAmt:
        type: string
      positionSide:
        type: string
      symbol:
        type: string
      unRealizedProfit:
        type: string
      updateTime:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.BinanceFuturePositionInformation:
    properties:
      apiKey:
        type: string
      positions:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.BinanceFuturePositionInfo'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.BinancePositionAmountVos:
    properties:
      amount:
        type: string
      amountInBTC:
        type: string
      amountInUSDT:
        type: string
      asset:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.BinanceStakingProductPosition:
    properties:
      accrualDays:
        type: integer
      amount:
        type: string
      apy:
        type: string
      asset:
        type: string
      canReStake:
        type: boolean
      canRedeemEarly:
        type: boolean
      deliveryDate:
        type: integer
      duration:
        type: integer
      interestEndDate:
        type: integer
      nexInterestPay:
        type: string
      nextInterestPayDate:
        type: integer
      payInterestPeriod:
        type: integer
      positionId:
        type: integer
      projectId:
        type: string
      purchaseTime:
        type: integer
      redeemPeriod:
        type: integer
      rewardAmt:
        type: string
      rewardAsset:
        type: string
      status:
        type: string
      type:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.ChainGasTrackerResponseData:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GasTrackerResponse'
    type: object
  github_com_defipod_mochi_pkg_response.ClaimQuestsRewardsResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ClaimQuestsRewardsResponseData'
    type: object
  github_com_defipod_mochi_pkg_response.ClaimQuestsRewardsResponseData:
    properties:
      rewards:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestUserReward'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.Coin:
    properties:
      coin_id:
        type: integer
      id:
        type: string
      large:
        type: string
      market_cap_rank:
        type: integer
      name:
        type: string
      price_btc:
        type: number
      score:
        type: integer
      slug:
        type: string
      small:
        type: string
      symbol:
        type: string
      thumb:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.CoinImage:
    properties:
      large:
        type: string
      small:
        type: string
      thumb:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.CoinMarketItemData:
    properties:
      current_price:
        type: number
      id:
        type: string
      image:
        type: string
      is_default:
        type: boolean
      is_pair:
        type: boolean
      market_cap:
        type: number
      market_cap_rank:
        type: integer
      name:
        type: string
      price_change_percentage_1h_in_currency:
        type: number
      price_change_percentage_7d_in_currency:
        type: number
      price_change_percentage_24h:
        type: number
      price_change_percentage_24h_in_currency:
        type: number
      sparkline_in_7d:
        properties:
          price:
            items:
              type: number
            type: array
        type: object
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.CoinPlatformDetailData:
    properties:
      contract_address:
        type: string
      decimal_place:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.CoinPriceHistoryResponse:
    properties:
      from:
        type: string
      prices:
        items:
          type: number
        type: array
      times:
        items:
          type: string
        type: array
      timestamps:
        items:
          type: integer
        type: array
      to:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.CollectionSuggestions:
    properties:
      address:
        type: string
      chain:
        type: string
      chain_id:
        type: integer
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.CommandPermissions:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.CommandPermission'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.CompareTokenReponseData:
    properties:
      base_coin:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetCoinResponse'
      base_coin_suggestions:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.CoingeckoSupportedTokens'
        type: array
      from:
        type: string
      ratios:
        items:
          type: number
        type: array
      target_coin:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetCoinResponse'
      target_coin_suggestions:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.CoingeckoSupportedTokens'
        type: array
      times:
        items:
          type: string
        type: array
      to:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.CompareTokenResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CompareTokenReponseData'
    type: object
  github_com_defipod_mochi_pkg_response.ConfigGroupNFTRoleResponse:
    properties:
      group_name:
        type: string
      guild_id:
        type: string
      nft_collection_configs:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTCollectionConfig'
        type: array
      number_of_tokens:
        type: integer
      role_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.ConfigNotifyResponse:
    properties:
      channel_id:
        type: string
      created_at:
        type: string
      guild_id:
        type: string
      id:
        type: string
      token:
        type: string
      total_transaction:
        type: integer
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.CreateDaoProposalResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DaoProposal'
    type: object
  github_com_defipod_mochi_pkg_response.CreateGuildTokenRole:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigTokenRole'
    type: object
  github_com_defipod_mochi_pkg_response.CreateNFTCollectionResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.NFTCollection'
    type: object
  github_com_defipod_mochi_pkg_response.CreateProductChangelogsViewed:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ProductChangelogView'
    type: object
  github_com_defipod_mochi_pkg_response.CreateProposalChannelConfigResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigDaoProposal'
    type: object
  github_com_defipod_mochi_pkg_response.CreateUserTokenSupportRequest:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.UserTokenSupportRequest'
    type: object
  github_com_defipod_mochi_pkg_response.DataFilterConfigByReaction:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.RoleReactionResponse'
      page:
        description: page index
        type: integer
      size:
        description: page size
        type: integer
      total:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.DataListRoleReactionResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ListRoleReactionResponse'
      page:
        description: page index
        type: integer
      size:
        description: page size
        type: integer
      total:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.DefaultRole:
    properties:
      guild_id:
        type: string
      role_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.DefaultRoleResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.DefaultRole'
    type: object
  github_com_defipod_mochi_pkg_response.DexPair:
    properties:
      address:
        type: string
      base_token:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.DexToken'
      chain_id:
        type: string
      created_at:
        type: integer
      dex_id:
        type: string
      fdv:
        type: number
      holders:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.DexTokenHolder'
        type: array
      id:
        type: string
      liquidity_usd:
        type: number
      market_cap_usd:
        type: number
      name:
        type: string
      owner:
        type: string
      price:
        type: number
      price_percent_change_24h:
        type: number
      price_usd:
        type: number
      quote_token:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.DexToken'
      txn_24h_buy:
        type: integer
      txn_24h_sell:
        type: integer
      url:
        additionalProperties:
          type: string
        type: object
      volume_usd_24h:
        type: number
    type: object
  github_com_defipod_mochi_pkg_response.DexToken:
    properties:
      address:
        type: string
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.DexTokenHolder:
    properties:
      address:
        type: string
      alias:
        type: string
      balance:
        type: number
      percent:
        type: number
    type: object
  github_com_defipod_mochi_pkg_response.DiscordGuildResponse:
    properties:
      bot_addable:
        type: boolean
      bot_arrived:
        type: boolean
      features:
        items:
          $ref: '#/definitions/discordgo.GuildFeature'
        type: array
      icon:
        type: string
      id:
        type: string
      name:
        type: string
      owner:
        type: boolean
      permissions:
        example: "0"
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.DiscordGuildRole:
    properties:
      color:
        type: integer
      hoist:
        type: boolean
      icon:
        type: string
      id:
        type: string
      managed:
        type: boolean
      mentionable:
        type: boolean
      name:
        type: string
      permissions:
        type: string
      position:
        type: integer
      unicode_emoji:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.FindTokenByContractAddressResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.Token'
    type: object
  github_com_defipod_mochi_pkg_response.FriendTechKey:
    properties:
      address:
        type: string
      createdAt:
        type: string
      holders:
        type: integer
      id:
        type: integer
      price:
        type: number
      priceChangePercentage:
        type: number
      profileChecked:
        type: boolean
      supply:
        type: integer
      twitterPfpUrl:
        type: string
      twitterUsername:
        type: string
      updatedAt:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.FriendTechKeyWatchlistItemResponse:
    properties:
      created_at:
        type: string
      decrease_alert_at:
        type: integer
      id:
        type: integer
      increase_alert_at:
        type: integer
      key_address:
        type: string
      metadata:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TrackedFriendTechKey'
      profile_id:
        type: string
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.FriendTechKeysResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.FriendTechKey'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GasTrackerResponse:
    properties:
      chain:
        type: string
      est_fast_time:
        type: string
      est_propose_time:
        type: string
      est_safe_time:
        type: string
      fast_gas_price:
        type: string
      propose_gas_price:
        type: string
      safe_gas_price:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GasTrackerResponseData:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GasTrackerResponse'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GeneralSettingData:
    properties:
      payment:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.UserPaymentSetting'
      privacy:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.UserPrivacySetting'
    type: object
  github_com_defipod_mochi_pkg_response.GetAllDaoProposalVotes:
    properties:
      proposal:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetDaoProposalData'
      votes:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DaoVote'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetAllDaoProposals:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DaoProposal'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetCoinResponse:
    properties:
      asset_platform:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.AssetPlatformResponseData'
      asset_platform_id:
        type: string
      block_time_in_minutes:
        type: integer
      categories:
        items:
          type: string
        type: array
      coingecko_id:
        type: string
      coingecko_rank:
        type: integer
      coingecko_score:
        type: number
      community_data: {}
      contract_address:
        type: string
      description:
        additionalProperties:
          type: string
        type: object
      detail_platforms:
        additionalProperties:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CoinPlatformDetailData'
        type: object
      developer_data: {}
      genesis_date: {}
      hashing_algorithm: {}
      id:
        type: string
      image:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CoinImage'
      links: {}
      localization:
        additionalProperties:
          type: string
        type: object
      market_cap_rank:
        type: integer
      market_data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.MarketData'
      name:
        type: string
      platforms: {}
      sentiment_votes_down_percentage:
        type: number
      sentiment_votes_up_percentage:
        type: number
      symbol:
        type: string
      tickers:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TickerData'
        type: array
      watchlist_users:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.GetCoinResponseWrapper:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetCoinResponse'
    type: object
  github_com_defipod_mochi_pkg_response.GetCoinsMarketDataResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CoinMarketItemData'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetCollectionCountResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTCollectionCount'
    type: object
  github_com_defipod_mochi_pkg_response.GetDaoProposalData:
    properties:
      closed_at:
        type: string
      created_at:
        type: string
      creator_id:
        type: string
      description:
        type: string
      discussion_channel_id:
        type: string
      guild_config_dao_proposal_id:
        type: integer
      guild_id:
        type: string
      id:
        type: integer
      points:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DaoProposalVoteCount'
        type: array
      title:
        type: string
      updated_at:
        type: string
      voting_channel_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetDataUserProfileResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetUserProfileResponse'
    type: object
  github_com_defipod_mochi_pkg_response.GetDefaultTokenResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Token'
    type: object
  github_com_defipod_mochi_pkg_response.GetDetailNftCollectionResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.NFTCollectionDetail'
    type: object
  github_com_defipod_mochi_pkg_response.GetFiatHistoricalExchangeRatesResponse:
    properties:
      from:
        type: string
      latest_rate:
        type: number
      rates:
        items:
          type: number
        type: array
      times:
        items:
          type: string
        type: array
      to:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetGlobalProfileInfoResponse:
    properties:
      level:
        type: integer
      rank:
        type: integer
      roles:
        items:
          type: string
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetGmConfigResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigGmGn'
      message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetGuildConfigDaoProposal:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGuildConfigDaoProposalData'
    type: object
  github_com_defipod_mochi_pkg_response.GetGuildConfigDaoProposalData:
    properties:
      address:
        type: string
      authority:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ProposalAuthorityType'
      chain:
        type: string
      chain_id:
        type: integer
      created_at:
        type: string
      guideline_channel_id:
        type: string
      guild_id:
        type: string
      id:
        type: integer
      proposal_channel_id:
        type: string
      required_amount:
        type: string
      symbol:
        type: string
      type:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ProposalVotingType'
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetGuildDefaultNftTickerResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigDefaultCollection'
    type: object
  github_com_defipod_mochi_pkg_response.GetGuildDefaultTickerResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigDefaultTicker'
    type: object
  github_com_defipod_mochi_pkg_response.GetGuildResponse:
    properties:
      active:
        type: boolean
      alias:
        type: string
      available_cmds:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DiscordCMD'
        type: array
      bot_scopes:
        items:
          type: string
        type: array
      global_xp:
        type: boolean
      icon:
        type: string
      id:
        type: string
      log_channel:
        type: string
      log_channel_id:
        type: string
      name:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetGuildTokensResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Token'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetGuildUserResponse:
    properties:
      guild_id:
        type: string
      invited_by:
        type: string
      nickname:
        type: string
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetGuildsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGuildResponse'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetHistoricalMarketChartResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CoinPriceHistoryResponse'
    type: object
  github_com_defipod_mochi_pkg_response.GetInvestListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.InvestItem'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetLevelRoleConfigsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigLevelRole'
        type: array
      page:
        description: page index
        type: integer
      size:
        description: page size
        type: integer
      total:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.GetListAllChainsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Chain'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetListGuildDefaultTickerResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigDefaultTicker'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetNFTActivityData:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerNFTActivityData'
        type: array
      metadata:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_util.Pagination'
    type: object
  github_com_defipod_mochi_pkg_response.GetNFTActivityResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetNFTActivityData'
    type: object
  github_com_defipod_mochi_pkg_response.GetNFTCollectionByAddressChain:
    properties:
      address:
        type: string
      author:
        type: string
      chain_id:
        type: string
      created_at:
        type: string
      description:
        type: string
      discord:
        type: string
      erc_format:
        type: string
      id:
        type: string
      image:
        type: string
      is_verified:
        type: boolean
      marketplaces:
        items:
          type: string
        type: array
      name:
        type: string
      symbol:
        type: string
      twitter:
        type: string
      website:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetNFTCollectionByAddressChainResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetNFTCollectionByAddressChain'
    type: object
  github_com_defipod_mochi_pkg_response.GetNftWatchlist:
    properties:
      floor_price:
        type: number
      id:
        type: string
      image:
        type: string
      is_pair:
        type: boolean
      name:
        type: string
      price_change_percentage_7d_in_currency:
        type: number
      price_change_percentage_24h:
        type: number
      sparkline_in_7d:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.SparkLineIn7d'
      symbol:
        type: string
      token:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerToken'
    type: object
  github_com_defipod_mochi_pkg_response.GetNftWatchlistResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetNftWatchlist'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetOneWalletResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.UserWalletWatchlistItem'
    type: object
  github_com_defipod_mochi_pkg_response.GetProductChangelogsViewed:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ProductChangelogView'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetSalesTrackerConfigResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigSalesTracker'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetSuggestionNFTCollectionsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CollectionSuggestions'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetSupportedChains:
    properties:
      data:
        items:
          type: string
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetSupportedTokenResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Token'
    type: object
  github_com_defipod_mochi_pkg_response.GetSupportedTokensResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Token'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetTopGainerLoser:
    properties:
      top_gainers:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetTopGainerLoserCoin'
        type: array
      top_losers:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetTopGainerLoserCoin'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetTopGainerLoserCoin:
    properties:
      id:
        type: string
      image:
        type: string
      market_cap_rank:
        type: integer
      name:
        type: string
      symbol:
        type: string
      usd:
        type: number
      usd_14d_change:
        type: number
      usd_1h_change:
        type: number
      usd_1y_change:
        type: number
      usd_7d_change:
        type: number
      usd_24h_change:
        type: number
      usd_24h_vol:
        type: number
      usd_30d_change:
        type: number
      usd_60d_change:
        type: number
    type: object
  github_com_defipod_mochi_pkg_response.GetTrackingWalletsResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.UserWalletWatchlist'
    type: object
  github_com_defipod_mochi_pkg_response.GetTrendingSearch:
    properties:
      coins:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetTrendingSearchCoin'
        type: array
      exchanges:
        description: this field coingecko return empty
    type: object
  github_com_defipod_mochi_pkg_response.GetTrendingSearchCoin:
    properties:
      item:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.Coin'
    type: object
  github_com_defipod_mochi_pkg_response.GetUserCurrentGMStreakResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DiscordUserGMStreak'
    type: object
  github_com_defipod_mochi_pkg_response.GetUserProfileResponse:
    properties:
      current_level:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ConfigXpLevel'
      guild_rank:
        type: integer
      guild_xp:
        type: integer
      id:
        type: string
      next_level:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ConfigXpLevel'
      nr_of_actions:
        type: integer
      progress:
        type: number
    type: object
  github_com_defipod_mochi_pkg_response.GetUserQuestListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestUserList'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetUserResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.User'
    type: object
  github_com_defipod_mochi_pkg_response.GetVaultResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Vault'
    type: object
  github_com_defipod_mochi_pkg_response.GetVaultsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Vault'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetVote:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DaoVote'
    type: object
  github_com_defipod_mochi_pkg_response.GetWatchlistResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CoinMarketItemData'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetWelcomeChannelConfigResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigWelcomeChannel'
      message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GuildConfigDefaultCurrencyResponse:
    properties:
      created_at:
        type: string
      guild_id:
        type: string
      tip_bot_token:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.OffchainTipBotToken'
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GuildConfigTipRangeResponse:
    properties:
      created_at:
        type: string
      guild_id:
        type: string
      max:
        type: number
      min:
        type: number
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.IndexerChain:
    properties:
      chain_id:
        type: integer
      is_evm:
        type: boolean
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.IndexerGetNFTTokenDetailResponseWithSuggestions:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerNFTTokenDetailData'
      default_symbol:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CollectionSuggestions'
      suggestions:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CollectionSuggestions'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.IndexerGetNFTTokenTickersResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerNFTTokenTickersData'
    type: object
  github_com_defipod_mochi_pkg_response.IndexerGetNFTTokensResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerNFTTokenDetailData'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.IndexerNFTActivityData:
    properties:
      chain_id:
        type: integer
      contract_address:
        type: string
      created_time:
        type: string
      event_type:
        type: string
      from_address:
        type: string
      id:
        type: integer
      last_update_time:
        type: string
      listing_price:
        type: string
      listing_price_obj:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerPrice'
      listing_status:
        type: string
      listing_type:
        type: string
      payment_token:
        type: integer
      platform_id:
        type: integer
      quantity:
        type: string
      sold_price:
        type: string
      sold_price_obj:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerPrice'
      to_address:
        type: string
      token_id:
        type: string
      transaction_hash:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.IndexerNFTCollectionTickersData:
    properties:
      address:
        type: string
      chain:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerChain'
      collection_image:
        type: string
      floor_price:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerPrice'
      items:
        type: integer
      last_sale_price:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerPrice'
      marketplaces:
        items:
          type: string
        type: array
      name:
        type: string
      owners:
        type: integer
      price_change_1d:
        type: string
      price_change_7d:
        type: string
      price_change_30d:
        type: string
      tickers:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerTickers'
      total_volume:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerPrice'
    type: object
  github_com_defipod_mochi_pkg_response.IndexerNFTCollectionTickersResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerNFTCollectionTickersData'
    type: object
  github_com_defipod_mochi_pkg_response.IndexerNFTTokenAttribute:
    properties:
      collection_address:
        type: string
      count:
        type: integer
      frequency:
        type: string
      rarity:
        type: string
      token_id:
        type: string
      trait_type:
        type: string
      value:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.IndexerNFTTokenDetailData:
    properties:
      amount:
        type: string
      attributes:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerNFTTokenAttribute'
        type: array
      collection_address:
        type: string
      description:
        type: string
      image:
        type: string
      image_cdn:
        type: string
      image_content_type:
        type: string
      marketplace:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NftListingMarketplace'
        type: array
      metadata_id:
        type: string
      name:
        type: string
      owner:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerNftTokenOwner'
      rarity:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerNFTTokenRarity'
      rarity_rank:
        type: integer
      rarity_score:
        type: string
      rarity_tier:
        type: string
      thumbnail_cdn:
        type: string
      token_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.IndexerNFTTokenRarity:
    properties:
      rank:
        type: integer
      rarity:
        type: string
      score:
        type: string
      total:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.IndexerNFTTokenTickersData:
    properties:
      collection_address:
        type: string
      description:
        type: string
      floor_price:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerPrice'
      image:
        type: string
      image_cdn:
        type: string
      last_sale_at:
        type: string
      last_sale_price:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerPrice'
      name:
        type: string
      price_change_30d:
        type: string
      price_change_90d:
        type: string
      price_change_365d:
        type: string
      price_change_percentage_30d:
        type: string
      price_change_percentage_90d:
        type: string
      price_change_percentage_365d:
        type: string
      rarity_rank:
        type: integer
      rarity_score:
        type: string
      rarity_tier:
        type: string
      tickers:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerTickers'
      token_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.IndexerNftTokenOwner:
    properties:
      collection_address:
        type: string
      owner_address:
        type: string
      token_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.IndexerPrice:
    properties:
      amount:
        type: string
      token:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerToken'
    type: object
  github_com_defipod_mochi_pkg_response.IndexerTickers:
    properties:
      prices:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerPrice'
        type: array
      times:
        items:
          type: string
        type: array
      timestamps:
        items:
          type: integer
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.IndexerToken:
    properties:
      address:
        type: string
      decimals:
        type: integer
      is_native:
        type: boolean
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.InvestChain:
    properties:
      id:
        type: integer
      logo:
        type: string
      name:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.InvestItem:
    properties:
      apy:
        type: number
      chain:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.InvestChain'
      platforms:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.InvestPlatforms'
        type: array
      token:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.InvestToken'
      tvl:
        type: number
    type: object
  github_com_defipod_mochi_pkg_response.InvestPlatforms:
    properties:
      apy:
        type: number
      desc:
        type: string
      logo:
        type: string
      name:
        type: string
      reward_apy:
        type: number
      status:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.InvestStatus'
      tvl:
        type: number
      type:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.InvestStatus:
    properties:
      detail:
        type: string
      value:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.InvestToken:
    properties:
      address:
        type: string
      decimals:
        type: integer
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.ListAllCustomTokenResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Token'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.ListAllNFTCollectionsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.NFTCollection'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.ListConfigNotifyResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ConfigNotifyResponse'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.ListEmojisResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ProductMetadataEmojis'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.ListGuildAdminRoles:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigAdminRole'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.ListGuildGroupNFTRolesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ListGuildNFTRoleConfigsResponse'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.ListGuildNFTRoleConfigsResponse:
    properties:
      color:
        type: integer
      group_name:
        type: string
      guild_id:
        type: string
      id:
        type: string
      nft_collection_configs:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTCollectionConfig'
        type: array
      number_of_tokens:
        type: integer
      role_id:
        type: string
      role_name:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.ListGuildTokenRoles:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigTokenRole'
        type: array
      meta:
        additionalProperties: true
        type: object
    type: object
  github_com_defipod_mochi_pkg_response.ListMyGuildsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.DiscordGuildResponse'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.ListRoleReactionResponse:
    properties:
      configs:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.RoleReactionByMessage'
        type: array
      guild_id:
        type: string
      success:
        type: boolean
    type: object
  github_com_defipod_mochi_pkg_response.ListTokenPriceAlertResponse:
    properties:
      alert_type:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.AlertType'
      created_at:
        type: string
      currency:
        type: string
      frequency:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.AlertFrequency'
      price:
        type: number
      snoozed_to:
        type: string
      symbol:
        type: string
      updated_at:
        type: string
      user_discord_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.MarketData:
    properties:
      ath:
        additionalProperties:
          type: number
        type: object
      ath_change_percentage:
        additionalProperties:
          type: number
        type: object
      ath_date: {}
      atl:
        additionalProperties:
          type: number
        type: object
      circulating_supply:
        type: number
      current_price:
        additionalProperties:
          type: number
        type: object
      fdv_to_tvl_ratio: {}
      fully_diluted_valuation:
        additionalProperties:
          type: number
        type: object
      high_24h:
        additionalProperties:
          type: number
        type: object
      low_24h:
        additionalProperties:
          type: number
        type: object
      market_cap:
        additionalProperties:
          type: number
        type: object
      market_cap_change_24h_in_currency:
        additionalProperties:
          type: number
        type: object
      market_cap_change_percentage_24h_in_currency:
        additionalProperties:
          type: number
        type: object
      market_cap_rank:
        type: integer
      max_supply:
        type: number
      mcap_to_tvl_ratio: {}
      price_change_24h:
        type: number
      price_change_24h_in_currency:
        additionalProperties:
          type: number
        type: object
      price_change_percentage_7d_in_currency:
        additionalProperties:
          type: number
        type: object
      price_change_percentage_14d_in_currency:
        additionalProperties:
          type: number
        type: object
      price_change_percentage_1h_in_currency:
        additionalProperties:
          type: number
        type: object
      price_change_percentage_1y:
        type: number
      price_change_percentage_1y_in_currency:
        additionalProperties:
          type: number
        type: object
      price_change_percentage_7d:
        type: number
      price_change_percentage_14d:
        type: number
      price_change_percentage_1h:
        type: number
      price_change_percentage_24h:
        type: number
      price_change_percentage_24h_in_currency:
        additionalProperties:
          type: number
        type: object
      price_change_percentage_30d:
        type: number
      price_change_percentage_30d_in_currency:
        additionalProperties:
          type: number
        type: object
      price_change_percentage_60d:
        type: number
      price_change_percentage_60d_in_currency:
        additionalProperties:
          type: number
        type: object
      price_change_percentage_200d:
        type: number
      price_change_percentage_200d_in_currency:
        additionalProperties:
          type: number
        type: object
      roi: {}
      total_market_cap:
        additionalProperties:
          type: number
        type: object
      total_supply:
        type: number
      total_value_locked: {}
      total_volume:
        additionalProperties:
          type: number
        type: object
    type: object
  github_com_defipod_mochi_pkg_response.MonikerConfigData:
    properties:
      moniker:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.MonikerConfig'
      value:
        type: number
    type: object
  github_com_defipod_mochi_pkg_response.MonikerConfigResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.MonikerConfigData'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.NFTChainCollectionCount:
    properties:
      chain:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Chain'
      count:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.NFTCollectionConfig:
    properties:
      address:
        type: string
      author:
        type: string
      chain_id:
        type: string
      chain_name:
        type: string
      collection_id:
        type: string
      created_at:
        type: string
      erc_format:
        type: string
      explorer_url:
        type: string
      id:
        type: string
      image:
        type: string
      is_verified:
        type: boolean
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.NFTCollectionCount:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTChainCollectionCount'
        type: array
      total:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.NFTCollectionsData:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.NFTCollection'
        type: array
      metadata:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_util.Pagination'
    type: object
  github_com_defipod_mochi_pkg_response.NFTCollectionsResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTCollectionsData'
    type: object
  github_com_defipod_mochi_pkg_response.NFTNewListed:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.NewListedNFTCollection'
        type: array
      metadata:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_util.Pagination'
    type: object
  github_com_defipod_mochi_pkg_response.NFTNewListedResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTNewListed'
    type: object
  github_com_defipod_mochi_pkg_response.NFTTradingVolume:
    properties:
      collection_address:
        type: string
      collection_chain_id:
        type: number
      collection_name:
        type: string
      collection_symbol:
        type: string
      token:
        type: string
      trading_volume:
        type: number
    type: object
  github_com_defipod_mochi_pkg_response.NFTTradingVolumeResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTTradingVolume'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.NewGuildConfigWalletVerificationMessageResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigWalletVerificationMessage'
      status:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.NewGuildGroupNFTRoleResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ConfigGroupNFTRoleResponse'
      message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.NftListingMarketplace:
    properties:
      contract_address:
        type: string
      floor_price:
        type: string
      item_url:
        type: string
      listing_price:
        type: string
      listing_status:
        type: string
      payment_token:
        type: string
      payment_token_decimals:
        type: string
      platform_id:
        type: integer
      platform_name:
        type: string
      token_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.NftMetadataAttrIcon:
    properties:
      discord_icon:
        type: string
      id:
        type: integer
      trait_type:
        type: string
      unicode_icon:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.NftMetadataAttrIconResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NftMetadataAttrIcon'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.NftSales:
    properties:
      buyer:
        type: string
      nft_collection_address:
        type: string
      nft_name:
        type: string
      nft_price:
        type: number
      nft_price_token:
        type: string
      nft_status:
        type: string
      platform:
        type: string
      seller:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.NftSalesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NftSales'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.NftWatchlistSuggest:
    properties:
      default_symbol:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CollectionSuggestions'
      suggestions:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CollectionSuggestions'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.NftWatchlistSuggestResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NftWatchlistSuggest'
    type: object
  github_com_defipod_mochi_pkg_response.OffchainTipBotTransferToken:
    properties:
      amount_each:
        type: number
      id:
        type: string
      total_amount:
        type: number
      tx_id:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.OffchainTipBotTransferTokenResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.OffchainTipBotTransferToken'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.OnboardingStartData:
    properties:
      reward:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.OnboardingStartReward'
      user_already_started:
        type: boolean
    type: object
  github_com_defipod_mochi_pkg_response.OnboardingStartResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.OnboardingStartData'
    type: object
  github_com_defipod_mochi_pkg_response.OnboardingStartReward:
    properties:
      amount:
        type: string
      token:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.OnchainInvestData:
    properties:
      tx_object:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TxObject'
    type: object
  github_com_defipod_mochi_pkg_response.OnchainInvestDataResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.OnchainInvestData'
    type: object
  github_com_defipod_mochi_pkg_response.PaginationResponse:
    properties:
      page:
        description: page index
        type: integer
      size:
        description: page size
        type: integer
      total:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.ProductBotCommand:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ProductBotCommand'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.ProductChangelogs:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ProductChangelogs'
        type: array
      pagination:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.PaginationResponse'
    type: object
  github_com_defipod_mochi_pkg_response.ProfileAirdropCampaignResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ProfileAirdropCampaign'
    type: object
  github_com_defipod_mochi_pkg_response.ProfileAirdropCampaignsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ProfileAirdropCampaign'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.ProfileApiKeyResponse:
    properties:
      api_key:
        type: string
      created_at:
        type: string
      profile_id:
        type: string
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.ResponseDataMessage:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
    type: object
  github_com_defipod_mochi_pkg_response.ResponseMessage:
    properties:
      message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.ResponseStatus:
    properties:
      status:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.ResponseSucess:
    properties:
      success:
        type: boolean
    type: object
  github_com_defipod_mochi_pkg_response.Role:
    properties:
      id:
        type: string
      reaction:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.RoleReactionByMessage:
    properties:
      channel_id:
        type: string
      message_id:
        type: string
      roles:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.Role'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.RoleReactionConfigResponse:
    properties:
      channel_id:
        type: string
      guild_id:
        type: string
      message_id:
        type: string
      roles:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.Role'
        type: array
      success:
        type: boolean
    type: object
  github_com_defipod_mochi_pkg_response.RoleReactionResponse:
    properties:
      channel_id:
        type: string
      guild_id:
        type: string
      message_id:
        type: string
      role:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.Role'
    type: object
  github_com_defipod_mochi_pkg_response.RouteToken:
    properties:
      address:
        type: string
      chain_id:
        type: integer
      chain_name:
        type: string
      coingecko_id:
        type: string
      created_at:
        type: string
      decimals:
        type: integer
      id:
        type: integer
      logo_uri:
        type: string
      name:
        type: string
      symbol:
        type: string
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.SearchCoinResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.CoingeckoSupportedTokens'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.SearchDexPairResponse:
    properties:
      pairs:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.DexPair'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.SparkLineIn7d:
    properties:
      price:
        items:
          type: number
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.SwapRoute:
    properties:
      aggregator:
        type: string
      routeSummary: {}
      routerAddress:
        type: string
      swapData: {}
      tokenIn:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.RouteToken'
      tokenOut:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.RouteToken'
    type: object
  github_com_defipod_mochi_pkg_response.SwapRouteResponse:
    properties:
      chainName:
        type: string
      code:
        type: integer
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.SwapRoute'
      message:
        type: string
      provider:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.SwapRouteResponseData:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.SwapRouteResponse'
    type: object
  github_com_defipod_mochi_pkg_response.TickerData:
    properties:
      base:
        type: string
      coin_id:
        type: string
      last:
        type: number
      target:
        type: string
      target_coin_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.ToggleActivityConfigResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigActivity'
      message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.Token:
    properties:
      decimal:
        type: integer
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.TokenHolderStatus:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TokenHolderStatusData'
    type: object
  github_com_defipod_mochi_pkg_response.TokenHolderStatusData:
    properties:
      guild_config:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigDaoProposal'
      is_qualified:
        type: boolean
      is_wallet_connected:
        type: boolean
      user_holding_amount:
        type: string
      vote_config:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DaoProposalVoteOption'
    type: object
  github_com_defipod_mochi_pkg_response.TokenInfoKeyValue:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.TokenInfoResponse:
    properties:
      asset_platform:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.AssetPlatformResponseData'
      coingecko_id:
        type: string
      communities:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TokenInfoKeyValue'
        type: array
      contracts:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TokenInfoKeyValue'
        type: array
      description_lines:
        items:
          type: string
        type: array
      explorers:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TokenInfoKeyValue'
        type: array
      id:
        type: string
      image:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CoinImage'
      market_data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.MarketData'
      name:
        type: string
      tags:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TokenInfoKeyValue'
        type: array
      wallets:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TokenInfoKeyValue'
        type: array
      websites:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TokenInfoKeyValue'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.TokenPriceAlertResponseData:
    properties:
      alert_type:
        type: string
      currency:
        type: string
      frequency:
        type: string
      price_by_percent:
        type: number
      snoozed_to:
        type: string
      symbol:
        type: string
      user_discord_id:
        type: string
      value:
        type: number
    type: object
  github_com_defipod_mochi_pkg_response.TopUser:
    properties:
      author:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildUserXP'
      leaderboard:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildUserXP'
        type: array
      metadata:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.PaginationResponse'
    type: object
  github_com_defipod_mochi_pkg_response.TrackFriendTechKeyResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.FriendTechKeyWatchlistItemResponse'
    type: object
  github_com_defipod_mochi_pkg_response.TrackedFriendTechKey:
    properties:
      address:
        type: string
      created_at:
        type: string
      holders:
        type: integer
      id:
        type: integer
      price:
        type: number
      price_change_percentage:
        type: number
      profile_checked:
        type: boolean
      supply:
        type: integer
      twitter_pfp_url:
        type: string
      twitter_username:
        type: string
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.TransferTokenV2Data:
    properties:
      amount_each:
        type: number
      external_id:
        type: string
      id:
        type: string
      total_amount:
        type: number
      tx_id:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.TransferTokenV2Response:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TransferTokenV2Data'
    type: object
  github_com_defipod_mochi_pkg_response.TxObject:
    properties:
      data:
        type: string
      from:
        type: string
      gas_limit:
        type: string
      gas_price:
        type: string
      nonce:
        type: string
      to:
        type: string
      value:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.UnlinkBinance:
    properties:
      message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.UpdateUserFeedbackResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.UserFeedback'
    type: object
  github_com_defipod_mochi_pkg_response.UpdateVote:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DaoVote'
    type: object
  github_com_defipod_mochi_pkg_response.User:
    properties:
      discriminator:
        type: string
      guild_users:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGuildUserResponse'
        type: array
      id:
        type: string
      nr_of_join:
        type: integer
      username:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.UserBalanceCex:
    properties:
      binance:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.WalletAssetData'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.UserBalanceOnchain:
    properties:
      evm:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.WalletAssetData'
        type: array
      ron:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.WalletAssetData'
        type: array
      sol:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.WalletAssetData'
        type: array
      sui:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.WalletAssetData'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.UserBalanceResponse:
    properties:
      cex:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.UserBalanceCex'
      lastest_snapshot_bals:
        type: string
      offchain:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.WalletAssetData'
        type: array
      onchain:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.UserBalanceOnchain'
      pnl:
        type: string
      summarize:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.WalletAssetData'
        type: array
      totalUsdAmount:
        type: number
    type: object
  github_com_defipod_mochi_pkg_response.UserFeedbackResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.UserFeedback'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.UserGeneralSettingResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GeneralSettingData'
    type: object
  github_com_defipod_mochi_pkg_response.UserNotificationSettingResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.UserNotificationSetting'
    type: object
  github_com_defipod_mochi_pkg_response.WalletAssetData:
    properties:
      amount:
        type: string
      asset_balance:
        type: number
      chain_id:
        type: integer
      contract_name:
        type: string
      contract_symbol:
        type: string
      detail_lending:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.BinancePositionAmountVos'
      detail_staking:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.BinanceStakingProductPosition'
      token:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.AssetToken'
      usd_balance:
        type: number
    type: object
  github_com_defipod_mochi_pkg_util.Pagination:
    properties:
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  typeset.ProductBotCommandScope:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - PRODUCT_BOT_COMMAND_SCOPE_PUBLIC
    - PRODUCT_BOT_COMMAND_SCOPE_PRIVATE_ONLY
    - PRODUCT_BOT_COMMAND_SCOPE_PUBLIC_ONLY
  uuid.NullUUID:
    properties:
      uuid:
        type: string
      valid:
        description: Valid is true if UUID is not NULL
        type: boolean
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a swagger for mochi api.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger API
  version: "1.0"
paths:
  /api-key/binance:
    post:
      consumes:
      - application/json
      description: Integrate binance key
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ProfileApiKeyResponse'
      summary: Integrate binance key
      tags:
      - ApiKey
  /api-key/me:
    post:
      consumes:
      - application/json
      description: Create apiKey
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ProfileApiKeyResponse'
      summary: Create apiKey
      tags:
      - ApiKey
  /api-key/unlink-binance:
    post:
      consumes:
      - application/json
      description: Unlink binance
      parameters:
      - description: Unlink Binance request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UnlinkBinance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.UnlinkBinance'
      summary: Unlink binance
      tags:
      - ApiKey
  /community/feedback:
    get:
      consumes:
      - application/json
      description: Get users' feedbacks
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: size
        in: query
        name: size
        type: string
      - description: profile id
        in: query
        name: profile_id
        type: string
      - description: none, completed, confirmed
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.UserFeedbackResponse'
      summary: Get users' feedbacks
      tags:
      - Community
    post:
      consumes:
      - application/json
      description: Post users' feedbacks
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UserFeedbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Post users' feedbacks
      tags:
      - Community
    put:
      consumes:
      - application/json
      description: Update users' feedbacks
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpdateUserFeedbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.UpdateUserFeedbackResponse'
      summary: Update users' feedbacks
      tags:
      - Community
  /community/invites/:
    get:
      consumes:
      - application/json
      description: Get invites
      parameters:
      - description: Member ID
        in: query
        name: member_id
        required: true
        type: string
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get invites
      tags:
      - Community
  /community/quests:
    get:
      consumes:
      - application/json
      description: Get user quest list
      parameters:
      - in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetUserQuestListResponse'
      summary: Get user quest list
      tags:
      - Community
  /community/quests/claim:
    post:
      consumes:
      - application/json
      description: Claim user quests' rewards
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.ClaimQuestsRewardsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ClaimQuestsRewardsResponse'
      summary: Claim user quests' rewards
      tags:
      - Community
  /community/quests/progress:
    post:
      consumes:
      - application/json
      description: Update user's quest progress
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpdateQuestProgressRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Update user's quest progress
      tags:
      - Community
  /community/repost-reactions/message-repost:
    put:
      consumes:
      - application/json
      description: edit message repost
      parameters:
      - description: edit message repost request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.EditMessageRepostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: edit message repost
      tags:
      - Community
  /community/tagme:
    get:
      consumes:
      - application/json
      description: Get tagme
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      - description: Guild ID
        in: query
        name: guild_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Get tagme
      tags:
      - Community
    post:
      consumes:
      - application/json
      description: Upsert user tag
      parameters:
      - description: Upsert user tag request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertUserTag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Upsert user tag
      tags:
      - Community
  /config-channels/{guild_id}/proposal:
    delete:
      consumes:
      - application/json
      description: Delete dao proposal config
      parameters:
      - description: Delete dao proposal channel config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.DeleteGuildConfigDaoProposal'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Delete dao proposal channel config
      tags:
      - ConfigChannel
    get:
      consumes:
      - application/json
      description: Get dao proposal channel config
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGuildConfigDaoProposal'
      summary: Get dao proposal channel config
      tags:
      - ConfigChannel
    post:
      consumes:
      - application/json
      description: Create proposal channel config for dao voting
      parameters:
      - description: Create proposal channel config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateProposalChannelConfig'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CreateProposalChannelConfigResponse'
      summary: Create proposal channel config
      tags:
      - ConfigChannel
  /config-channels/gm:
    get:
      consumes:
      - application/json
      description: Get GM config
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGmConfigResponse'
      summary: Get GM config
      tags:
      - ConfigChannel
    post:
      consumes:
      - application/json
      description: Update or insert GM config
      parameters:
      - description: Upsert GM Config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertGmConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Update or insert GM config
      tags:
      - ConfigChannel
  /config-channels/tip-notify:
    get:
      consumes:
      - application/json
      description: API get list config notify channel for token
      parameters:
      - description: guild id
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ListConfigNotifyResponse'
      summary: OffChain Tip Bot - Config notify
      tags:
      - ConfigChannel
    post:
      consumes:
      - application/json
      description: API config notify channel for token
      parameters:
      - description: config notify request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateTipConfigNotify'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: OffChain Tip Bot - Config notify
      tags:
      - ConfigChannel
  /config-channels/tip-notify/{id}:
    delete:
      consumes:
      - application/json
      description: API delete config notify channel for token
      parameters:
      - description: id of config notify
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: OffChain Tip Bot - Config notify
      tags:
      - ConfigChannel
  /config-channels/welcome:
    delete:
      consumes:
      - application/json
      description: Delete welcome channel config
      parameters:
      - description: Delete welcome channel config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.DeleteWelcomeConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Delete welcome channel config
      tags:
      - ConfigChannel
    get:
      consumes:
      - application/json
      description: Get welcome channel config
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetWelcomeChannelConfigResponse'
      summary: Get welcome channel config
      tags:
      - ConfigChannel
    post:
      consumes:
      - application/json
      description: Update or insert welcome channel config
      parameters:
      - description: Upsert welcome channel config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertWelcomeConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetWelcomeChannelConfigResponse'
      summary: Update or insert welcome channel config
      tags:
      - ConfigChannel
  /config-defi/custom-tokens:
    post:
      consumes:
      - application/json
      description: Guild custom token config
      parameters:
      - description: Custom guild custom token config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertCustomTokenConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Guild custom token config
      tags:
      - ConfigDefi
  /config-defi/default-currency:
    delete:
      consumes:
      - application/json
      description: Delete default currency
      parameters:
      - description: Delete default currency config
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.GuildIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Delete default currency
      tags:
      - ConfigDefi
    get:
      consumes:
      - application/json
      description: Get default currency by guild id
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GuildConfigDefaultCurrencyResponse'
      summary: Get default currency by guild id
      tags:
      - ConfigDefi
    post:
      consumes:
      - application/json
      description: Upsert default currency
      parameters:
      - description: Upsert default currency config
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertGuildDefaultCurrencyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Upsert default currency
      tags:
      - ConfigDefi
  /config-defi/default-symbol:
    post:
      consumes:
      - application/json
      description: Create default collection symbol
      parameters:
      - description: Config Default Collection Symbol request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.ConfigDefaultCollection'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Create default collection symbol
      tags:
      - ConfigDefi
  /config-defi/default-ticker:
    get:
      consumes:
      - application/json
      description: Get guild default ticker
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      - description: Guild ticker query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGuildDefaultTickerResponse'
      summary: Get guild default ticker
      tags:
      - ConfigDefi
    post:
      consumes:
      - application/json
      description: Set guild default ticker
      parameters:
      - description: Set guild default ticker request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.GuildConfigDefaultTickerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Set guild default ticker
      tags:
      - ConfigDefi
  /config-defi/default-ticker/{guild_id}:
    get:
      consumes:
      - application/json
      description: Get list default ticker of a guild.
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetListGuildDefaultTickerResponse'
      summary: Get list default ticker of a guild.
      tags:
      - ConfigDefi
  /config-defi/monikers:
    delete:
      consumes:
      - application/json
      description: Delete moniker config
      parameters:
      - description: Delete moinker config
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.DeleteMonikerConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Delete moniker config
      tags:
      - ConfigDefi
    post:
      consumes:
      - application/json
      description: Upsert moniker config
      parameters:
      - description: Upsert moniker config
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertMonikerConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Upsert moniker config
      tags:
      - ConfigDefi
  /config-defi/monikers/{guild_id}:
    get:
      consumes:
      - application/json
      description: Get moniker configs
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.MonikerConfigResponse'
      summary: Get moniker configs
      tags:
      - ConfigDefi
  /config-defi/monikers/default:
    get:
      consumes:
      - application/json
      description: Get default moniker
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.MonikerConfigResponse'
      summary: Get default moniker
      tags:
      - ConfigDefi
  /config-defi/tip-range:
    post:
      consumes:
      - application/json
      description: Upsert config tip range
      parameters:
      - description: Upsert config tip range
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertGuildConfigTipRangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GuildConfigTipRangeResponse'
      summary: Upsert config tip range
      tags:
      - ConfigDefi
  /config-defi/tip-range/{guild_id}:
    delete:
      consumes:
      - application/json
      description: Remove config tip range
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Remove config tip range
      tags:
      - ConfigDefi
    get:
      consumes:
      - application/json
      description: Get config tip range by guild id
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GuildConfigTipRangeResponse'
      summary: Get config tip range by guild id
      tags:
      - ConfigDefi
  /config-defi/tokens:
    get:
      consumes:
      - application/json
      description: Get guild tokens
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGuildTokensResponse'
      summary: Get guild tokens
      tags:
      - ConfigDefi
    post:
      consumes:
      - application/json
      description: Update or insert guild token config
      parameters:
      - description: Upsert Guild Token Config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertGuildTokenConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Update or insert guild token config
      tags:
      - ConfigDefi
  /config-defi/tokens/default:
    delete:
      consumes:
      - application/json
      description: Remove Default token
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Remove Default token
      tags:
      - ConfigDefi
    get:
      consumes:
      - application/json
      description: Get Default token
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetDefaultTokenResponse'
      summary: Get Default token
      tags:
      - ConfigDefi
    post:
      consumes:
      - application/json
      description: Config Default token
      parameters:
      - description: Config default token request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.ConfigDefaultTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Config Default token
      tags:
      - ConfigDefi
  /config-roles/reaction-roles/filter:
    post:
      consumes:
      - application/json
      description: Filter config by reaction
      parameters:
      - description: Filter config by reaction request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.RoleReactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.DataFilterConfigByReaction'
      summary: Filter config by reaction
      tags:
      - ConfigRole
  /config/command-permissions:
    get:
      consumes:
      - application/json
      description: Get list command permissions
      parameters:
      - in: query
        name: code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CommandPermissions'
      summary: Get list command permissions
      tags:
      - Tono
  /config/install-url:
    get:
      consumes:
      - application/json
      description: Get bot install url
      produces:
      - application/json
      responses:
        "302":
          description: Found
      summary: Get bot install url
      tags:
      - Command Permission
  /config/role/{guild_id}/admin:
    get:
      consumes:
      - application/json
      description: Get list admin role config of guild
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ListGuildAdminRoles'
      summary: Get list admin role config of guild
      tags:
      - ConfigRole
    post:
      consumes:
      - application/json
      description: Create guild admin role config
      parameters:
      - description: Create guild admin role config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateGuildAdminRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Create guild admin role config
      tags:
      - ConfigRole
  /config/role/{guild_id}/admin/{id}:
    delete:
      consumes:
      - application/json
      description: Remove guild admin role config
      parameters:
      - description: Config ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Remove guild admin role config
      tags:
      - ConfigRole
  /config/role/{guild_id}/default:
    delete:
      consumes:
      - application/json
      description: Delete default role
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseSucess'
      summary: Delete default role
      tags:
      - ConfigRole
    get:
      consumes:
      - application/json
      description: Get default roles by guild id
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.DefaultRoleResponse'
      summary: Get default roles by guild id
      tags:
      - ConfigRole
    post:
      consumes:
      - application/json
      description: Create default role
      parameters:
      - description: Create default role request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateDefaultRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.DefaultRoleResponse'
      summary: Create default role
      tags:
      - ConfigRole
  /config/role/{guild_id}/level:
    delete:
      consumes:
      - application/json
      description: Remove level role config
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Remove level role config
      tags:
      - ConfigRole
    get:
      consumes:
      - application/json
      description: Get level role config
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetLevelRoleConfigsResponse'
      summary: Get level role config
      tags:
      - ConfigRole
    post:
      consumes:
      - application/json
      description: Config level role
      parameters:
      - description: Config level role request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.ConfigLevelRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Config Level role
      tags:
      - ConfigRole
  /config/role/{guild_id}/nft:
    delete:
      consumes:
      - application/json
      description: Remove guild nft role
      parameters:
      - description: 32951e68-9959-4e1d-88ca-22b442e19efe|45d06941-468b-4e5e-8b8f-d20c77c87805
        in: query
        name: config_ids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Remove guild nft role
      tags:
      - ConfigRole
    get:
      consumes:
      - application/json
      description: List guild nft roles
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ListGuildGroupNFTRolesResponse'
      summary: List guild nft roles
      tags:
      - ConfigRole
    post:
      consumes:
      - application/json
      description: New guild nft role
      parameters:
      - description: New NFT role request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.ConfigGroupNFTRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NewGuildGroupNFTRoleResponse'
      summary: New guild nft role
      tags:
      - ConfigRole
  /config/role/{guild_id}/nft/group:
    delete:
      consumes:
      - application/json
      description: Remove guild group nft role
      parameters:
      - description: Group config ID
        in: query
        name: group_config_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Remove guild group nft role
      tags:
      - ConfigRole
  /config/role/{guild_id}/reaction:
    delete:
      consumes:
      - application/json
      description: Remove reaction role config
      parameters:
      - description: Remove reaction role config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.RoleReactionUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseSucess'
      summary: Remove reaction role config
      tags:
      - ConfigRole
    get:
      consumes:
      - application/json
      description: Get all role reaction configs
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.DataListRoleReactionResponse'
      summary: Get all role reaction configs
      tags:
      - ConfigRole
    post:
      consumes:
      - application/json
      description: Add reaction role config
      parameters:
      - description: Add reaction role config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.RoleReactionUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.RoleReactionConfigResponse'
      summary: Add reaction role config
      tags:
      - ConfigRole
  /config/role/{guild_id}/token:
    get:
      consumes:
      - application/json
      description: Get list token role config of guild
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ListGuildTokenRoles'
      summary: Get list token role config of guild
      tags:
      - ConfigRole
    post:
      consumes:
      - application/json
      description: Create guild token role config
      parameters:
      - description: Create guild token role config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateGuildTokenRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CreateGuildTokenRole'
      summary: Create guild token role config
      tags:
      - ConfigRole
  /config/role/{guild_id}/token/{id}:
    delete:
      consumes:
      - application/json
      description: Remove guild token role config
      parameters:
      - description: Config ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Remove guild token role config
      tags:
      - ConfigRole
  /configs/nft-roles/group:
    delete:
      consumes:
      - application/json
      description: Remove guild group nft role
      parameters:
      - description: Group config ID
        in: query
        name: group_config_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Remove guild group nft role
      tags:
      - Config
  /configs/sales-tracker:
    get:
      consumes:
      - application/json
      description: Get sales tracker config
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetSalesTrackerConfigResponse'
      summary: Get sales tracker config
      tags:
      - Config
    post:
      consumes:
      - application/json
      description: Create sales tracker config
      parameters:
      - description: Create sales tracker config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateSalesTrackerConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Create sales tracker config
      tags:
      - Config
  /dao-voting/proposals:
    delete:
      consumes:
      - application/json
      description: Detele DAO proposal and then remove its discussion channel.
      parameters:
      - description: Proposal ID
        in: path
        name: proposal_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Delete DAO Proposal
      tags:
      - DAO Proposal
    get:
      consumes:
      - application/json
      description: Get dao proposals
      parameters:
      - description: Discord ID
        in: query
        name: user_discord_id
        required: true
        type: string
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetAllDaoProposals'
      summary: Get dao proposals
      tags:
      - DAO-Voting
    post:
      consumes:
      - application/json
      description: Create dao proposal and then create a discussion channel for users
        to discuss about the proposal.
      parameters:
      - description: Create dao proposal request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateDaoProposalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CreateDaoProposalResponse'
      summary: Dao Proposal
      tags:
      - DAO Proposal
  /dao-voting/proposals/vote:
    post:
      consumes:
      - application/json
      description: Create dao vote
      parameters:
      - description: Create dao vote request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateDaoVoteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Create dao vote
      tags:
      - Dao-voting
  /dao-voting/proposals/votes/{vote_id}:
    put:
      consumes:
      - application/json
      description: Update dao vote
      parameters:
      - description: DAO Vote ID
        in: path
        name: vote_id
        required: true
        type: string
      - description: Update dao vote request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpdateDaoVoteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.UpdateVote'
      summary: Update dao vote
      tags:
      - Dao-voting
  /dao-voting/token-holder/status:
    get:
      consumes:
      - application/json
      description: Check token holder connect wallet yet? And have enough amount based
        on criteria (has 10 icy, 3 neko, havent connected walelt, …)
      parameters:
      - description: Discord ID
        in: query
        name: user-discord-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TokenHolderStatus'
      summary: Get status of token holder for creating proposal and voting
      tags:
      - DAO-Voting
  /dao-voting/user-votes:
    get:
      consumes:
      - application/json
      description: Get dao votes
      parameters:
      - description: Discord ID
        in: query
        name: user_discord_id
        required: true
        type: string
      - description: Proposal ID
        in: query
        name: proposal-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetAllDaoProposalVotes'
      summary: Get dao votes
      tags:
      - DAO-Voting
  /dao-voting/votes:
    get:
      consumes:
      - application/json
      description: Get dao proposal vote of user
      parameters:
      - description: Proposal ID
        in: query
        name: proposal_id
        required: true
        type: string
      - description: Discord ID
        in: query
        name: user_discord_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetVote'
      summary: Get dao proposal vote of user
      tags:
      - DAO-Voting
  /data/configs/activities/{activity}:
    post:
      consumes:
      - application/json
      description: Toggle activity config
      parameters:
      - description: Activity name
        in: path
        name: activity
        required: true
        type: string
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ToggleActivityConfigResponse'
      summary: Toggle activity config
      tags:
      - Data
  /defi/chains:
    get:
      consumes:
      - application/json
      description: List All Chain
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetListAllChainsResponse'
      summary: List All Chain
      tags:
      - Defi
  /defi/coins:
    get:
      consumes:
      - application/json
      description: Search coin
      parameters:
      - description: coin query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.SearchCoinResponse'
      summary: Search coin
      tags:
      - Defi
  /defi/coins/{id}:
    get:
      consumes:
      - application/json
      description: Get coin
      parameters:
      - description: Coin ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetCoinResponseWrapper'
      summary: Get coin
      tags:
      - Defi
  /defi/coins/binance/{symbol}:
    get:
      consumes:
      - application/json
      description: Get coin data from Binance Exchange
      parameters:
      - description: Coin ID
        in: path
        name: symbol
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetCoinResponseWrapper'
      summary: Get coin data from Binance Exchange
      tags:
      - Defi
  /defi/coins/compare:
    get:
      consumes:
      - application/json
      description: Compare token
      parameters:
      - description: base token
        in: query
        name: base
        required: true
        type: string
      - description: target token
        in: query
        name: target
        required: true
        type: string
      - description: compare interval
        in: query
        name: interval
        required: true
        type: string
      - description: Guild ID
        in: query
        name: guild_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CompareTokenResponse'
      summary: Compare token
      tags:
      - Defi
  /defi/custom-tokens:
    get:
      consumes:
      - application/json
      description: Find token by contract address
      parameters:
      - description: Chain ID
        in: query
        name: chain_id
        required: true
        type: string
      - description: Contract address
        in: query
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.FindTokenByContractAddressResponse'
      summary: Find token by contract address
      tags:
      - Defi
  /defi/gas-tracker:
    get:
      consumes:
      - application/json
      description: Get gas tracker of all chain
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GasTrackerResponseData'
      summary: Get gas tracker of all chain
      tags:
      - Defi
  /defi/gas-tracker/{chain}:
    get:
      consumes:
      - application/json
      description: Get gas tracker of one chain
      parameters:
      - description: chain
        in: path
        name: chain
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ChainGasTrackerResponseData'
      summary: Get gas tracker of one chain
      tags:
      - Defi
  /defi/keys:
    get:
      consumes:
      - application/json
      description: Search coin
      parameters:
      - description: coin query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.FriendTechKeysResponse'
      summary: Search coin
      tags:
      - Defi
  /defi/market-chart:
    get:
      consumes:
      - application/json
      description: Get historical market chart
      parameters:
      - description: Coin ID
        in: query
        name: coin_id
        required: true
        type: string
      - description: Day
        in: query
        name: day
        required: true
        type: integer
      - default: usd
        description: Currency
        in: query
        name: currency
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetHistoricalMarketChartResponse'
      summary: Get historical market chart
      tags:
      - Defi
  /defi/market-data:
    get:
      consumes:
      - application/json
      description: Get coins market data of top coins
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: page_size
        in: query
        name: page_size
        type: string
      - description: 'accepted values: price_change_percentage_7d_asc, price_change_percentage_7d_desc,
          price_change_percentage_1h_asc, price_change_percentage_1h_desc, price_change_percentage_24h_asc,
          price_change_percentage_24h_desc'
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetCoinsMarketDataResponse'
      summary: Get coins market data of top coins
      tags:
      - Defi
  /defi/price-alert:
    delete:
      consumes:
      - application/json
      description: Remove from user's price alerts
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Remove from user's price alerts
      tags:
      - Defi
    get:
      consumes:
      - application/json
      description: Get user's price alerts
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      - in: query
        name: user_discord_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ListTokenPriceAlertResponse'
      summary: Get user's price alerts
      tags:
      - Defi
    post:
      consumes:
      - application/json
      description: Add to user's price alert
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.AddTokenPriceAlertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.AddTokenPriceAlertResponse'
      summary: Add to user's price alert
      tags:
      - Defi
  /defi/token:
    get:
      consumes:
      - application/json
      description: Get supported token by address and chain id
      parameters:
      - description: token address
        in: query
        name: address
        required: true
        type: string
      - description: token chain
        in: query
        name: chain
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetSupportedTokenResponse'
      summary: Get supported token by address and chain id
      tags:
      - Defi
  /defi/token-support:
    get:
      consumes:
      - application/json
      description: Get tokens requested by user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetSupportedTokensResponse'
      summary: Get tokens requested by user
      tags:
      - Defi
    post:
      consumes:
      - application/json
      description: Request support token
      parameters:
      - description: Create user token support request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateUserTokenSupportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CreateUserTokenSupportRequest'
      summary: Request support token
      tags:
      - Defi
  /defi/token-support/{id}/approve:
    put:
      consumes:
      - application/json
      description: Approve support token request
      parameters:
      - description: Support Token Request ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CreateUserTokenSupportRequest'
      summary: Approve support token request
      tags:
      - Defi
  /defi/token-support/{id}/reject:
    put:
      consumes:
      - application/json
      description: Reject support token request
      parameters:
      - description: Support Token Request ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CreateUserTokenSupportRequest'
      summary: Reject support token request
      tags:
      - Defi
  /defi/tokens:
    get:
      consumes:
      - application/json
      description: Get supported tokens
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetSupportedTokensResponse'
      summary: Get supported tokens
      tags:
      - Defi
  /defi/tokens/info/{id}:
    get:
      consumes:
      - application/json
      description: Get token info
      parameters:
      - description: token query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TokenInfoResponse'
      summary: Get token info
      tags:
      - Defi
      - Public
  /defi/top-gainer-loser:
    get:
      consumes:
      - application/json
      description: Get top 300 gainer and loser
      parameters:
      - description: 'default: 24h, accepted value: 1h, 24h, 7d, 14d, 30d, 60d, 1y'
        in: query
        name: duration
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetTopGainerLoser'
      summary: Get top 300 gainer and loser
      tags:
      - Defi
  /defi/tracking-keys:
    get:
      consumes:
      - application/json
      description: Get user's friend tech key watchlist
      parameters:
      - description: profile_id
        in: query
        name: profile_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TrackFriendTechKeyResponse'
      summary: Get user's friend tech key watchlist
      tags:
      - Defi
    post:
      consumes:
      - application/json
      description: Track a specific friend tech key by adding to user's watchlist
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.TrackFriendTechKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TrackFriendTechKeyResponse'
      summary: Track a specific friend tech key by adding to user's watchlist
      tags:
      - Defi
  /defi/tracking-keys/{id}:
    delete:
      consumes:
      - application/json
      description: Untrack a specific friend tech key by removing from user's watchlist
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Untrack a specific friend tech key by removing from user's watchlist
      tags:
      - Defi
    put:
      consumes:
      - application/json
      description: Update friend tech key track config
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpdateFriendTechKeyTrackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TrackFriendTechKeyResponse'
      summary: Update friend tech key track config
      tags:
      - Defi
  /defi/trending:
    get:
      consumes:
      - application/json
      description: Get trending search of coins
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetTrendingSearch'
      summary: Get trending search of coins
      tags:
      - Defi
  /dexes/search:
    get:
      consumes:
      - application/json
      description: Search dex pair
      parameters:
      - description: dex query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.SearchDexPairResponse'
      summary: Search dex pair
      tags:
      - Dex
  /earns/airdrop-campaigns:
    get:
      consumes:
      - application/json
      description: Get Airdrop Campaign List
      parameters:
      - description: status
        in: query
        name: status
        type: string
      - description: keyword
        in: query
        name: keyword
        type: string
      - description: profile id
        in: query
        name: profile_id
        type: string
      - description: page
        in: query
        name: page
        type: string
      - description: size
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.AirdropCampaignsResponse'
      summary: Get Airdrop Campaign List
      tags:
      - Airdrop-campaigns
    post:
      consumes:
      - application/json
      description: Create airdrop campaign
      parameters:
      - description: Create airdrop campaign request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateAirdropCampaignRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.AirdropCampaignResponse'
      summary: Create airdrop campaign
      tags:
      - Airdrop-campaigns
  /earns/airdrop-campaigns/{id}:
    get:
      consumes:
      - application/json
      description: Get Airdrop Campaign By Id
      parameters:
      - description: airdrop campaign id
        in: path
        name: id
        required: true
        type: string
      - description: profile id
        in: query
        name: profile_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.AirdropCampaignResponse'
      summary: Get Airdrop Campaign By Id
      tags:
      - Airdrop-campaigns
  /earns/airdrop-campaigns/stats:
    get:
      consumes:
      - application/json
      description: Get Airdrop Campaign List
      parameters:
      - description: profile_id
        in: query
        name: profile_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.AirdropCampaignStatResponse'
      summary: Get Airdrop Campaign List
      tags:
      - Airdrop-campaigns
  /emojis:
    get:
      consumes:
      - application/json
      description: list emojis
      parameters:
      - description: codes
        in: query
        name: codes
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ListEmojisResponse'
      summary: list emojis
      tags:
      - Emojis
  /fiat/historical-exchange-rates:
    get:
      consumes:
      - application/json
      description: Remove from user's watchlist
      parameters:
      - in: query
        name: base
        required: true
        type: string
      - in: query
        maximum: 365
        minimum: 7
        name: days
        type: integer
      - in: query
        name: target
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetFiatHistoricalExchangeRatesResponse'
      summary: Get historical market chart
      tags:
      - Fiat
  /guilds:
    get:
      consumes:
      - application/json
      description: Get guilds
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGuildsResponse'
      summary: Get guilds
      tags:
      - Guild
  /guilds/{guild_id}:
    get:
      consumes:
      - application/json
      description: Get guild
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGuildResponse'
      summary: Get guild
      tags:
      - Guild
    put:
      consumes:
      - application/json
      description: Update guild
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      - description: Update guild request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpdateGuildRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Update guild
      tags:
      - Guild
  /guilds/{guild_id}/custom-tokens:
    get:
      consumes:
      - application/json
      description: List all guild custom token
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ListAllCustomTokenResponse'
      summary: List all guild custom token
      tags:
      - Guild
  /guilds/{guild_id}/roles:
    get:
      consumes:
      - application/json
      description: Update guild
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_defipod_mochi_pkg_response.DiscordGuildRole'
            type: array
      summary: Update guild
      tags:
      - Guild
  /guilds/user-managed:
    get:
      consumes:
      - application/json
      description: Get my guild list
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ListMyGuildsResponse'
      summary: Get my guilds list
      tags:
      - Guild
  /invests:
    get:
      consumes:
      - application/json
      description: Get invest list
      parameters:
      - description: the filterd chain ids, split by comma
        in: query
        name: chainIds
        type: string
      - description: the filterd platforms (aave_v2, aave_v3), split by comma
        in: query
        name: platforms
        type: string
      - description: the filterd types (stake, lend), split by comma
        in: query
        name: types
        type: string
      - description: the filtered token address
        in: query
        name: address
        type: string
      - description: the filtered status (active, inactive)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetInvestListResponse'
      summary: Get invest list
      tags:
      - Invest
  /nfts:
    get:
      consumes:
      - application/json
      description: List all nft collections
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ListAllNFTCollectionsResponse'
      summary: List all nft collections
      tags:
      - NFT
  /nfts/{symbol}/{id}:
    get:
      consumes:
      - application/json
      description: Get NFT Detail
      parameters:
      - description: Symbol
        in: path
        name: symbol
        required: true
        type: string
      - description: Token ID
        in: path
        name: id
        required: true
        type: string
      - description: Guild ID
        in: query
        name: guild_id
        type: string
      - description: Query by using Collection Address
        in: query
        name: query_address
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerGetNFTTokenDetailResponseWithSuggestions'
      summary: Get NFT Detail
      tags:
      - NFT
  /nfts/{symbol}/{id}/activity:
    get:
      consumes:
      - application/json
      description: Get NFT Activity
      parameters:
      - description: Collection address | Symbol
        in: path
        name: symbol
        required: true
        type: string
      - description: Token ID
        in: path
        name: id
        required: true
        type: string
      - description: Page
        in: query
        name: page
        type: string
      - description: Size
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetNFTActivityResponse'
      summary: Get NFT Activity
      tags:
      - NFT
  /nfts/collections:
    get:
      consumes:
      - application/json
      description: Get NFT trading volume
      parameters:
      - default: 0
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTCollectionsResponse'
      summary: Get NFT trading volume
      tags:
      - NFT
    post:
      consumes:
      - application/json
      description: Create NFT Collection
      parameters:
      - description: Create nft collection request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateNFTCollectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CreateNFTCollectionResponse'
      summary: Create NFT Collection
      tags:
      - NFT
  /nfts/collections/{address}:
    patch:
      consumes:
      - application/json
      description: Update NFT Collection
      parameters:
      - description: Collection Address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Update NFT Collection
      tags:
      - NFT
  /nfts/collections/{symbol}:
    get:
      consumes:
      - application/json
      description: Get NFT Tokens
      parameters:
      - description: Symbol
        in: path
        name: symbol
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerGetNFTTokensResponse'
      summary: Get NFT Tokens
      tags:
      - NFT
  /nfts/collections/{symbol}/detail:
    get:
      consumes:
      - application/json
      description: Get detail nft collection
      parameters:
      - description: Symbol
        in: path
        name: symbol
        required: true
        type: string
      - description: Query by collection address
        in: query
        name: query_address
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetDetailNftCollectionResponse'
      summary: Get detail nft collection
      tags:
      - NFT
  /nfts/collections/address/{address}:
    get:
      consumes:
      - application/json
      description: Get NFT collection by address chain
      parameters:
      - description: Collection Address
        in: path
        name: address
        required: true
        type: string
      - description: Chain
        in: query
        name: chain
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetNFTCollectionByAddressChainResponse'
      summary: Get NFT collection by address chain
      tags:
      - NFT
  /nfts/collections/stats:
    get:
      consumes:
      - application/json
      description: Get collection count
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetCollectionCountResponse'
      summary: Get collection count
      tags:
      - NFT
  /nfts/collections/suggestion:
    get:
      consumes:
      - application/json
      description: Get guild suggest nft collections
      parameters:
      - description: symbol collection query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetSuggestionNFTCollectionsResponse'
      summary: Get guild suggest nft collections
      tags:
      - NFT
  /nfts/collections/tickers:
    get:
      consumes:
      - application/json
      description: Get NFT collection tickers
      parameters:
      - description: CollectionAddress
        in: query
        name: collection_address
        required: true
        type: string
      - description: from
        in: query
        name: from
        required: true
        type: string
      - description: to
        in: query
        name: to
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerNFTCollectionTickersResponse'
      summary: Get NFT collection tickers
      tags:
      - NFT
  /nfts/default-nft-ticker:
    get:
      consumes:
      - application/json
      description: Get guild default nft ticker
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      - description: Guild ticker query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGuildDefaultNftTickerResponse'
      summary: Get guild default nft ticker
      tags:
      - NFT
    post:
      consumes:
      - application/json
      description: Set guild default nft ticker
      parameters:
      - description: Set guild default ticker request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.GuildConfigDefaultNftTickerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseDataMessage'
      summary: Set guild default nft ticker
      tags:
      - NFT
  /nfts/icons:
    get:
      consumes:
      - application/json
      description: Get NFT metadata attribute icon
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NftMetadataAttrIconResponse'
      summary: Get NFT metadata attribute icon
      tags:
      - NFT
  /nfts/new-listed:
    get:
      consumes:
      - application/json
      description: Get new listed nft collection
      parameters:
      - default: 0
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Size
        in: query
        name: size
        type: integer
      - default: 7
        description: Interval
        in: query
        name: interval
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTNewListedResponse'
      summary: Get new listed nft collection
      tags:
      - NFT
  /nfts/sales:
    get:
      consumes:
      - application/json
      description: Get NFT sales
      parameters:
      - description: Collection address
        in: query
        name: collection-address
        required: true
        type: string
      - description: Platform
        in: query
        name: platform
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NftSalesResponse'
      summary: Get NFT sales
      tags:
      - NFT
  /nfts/supported-chains:
    post:
      consumes:
      - application/json
      description: Get supported chains
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetSupportedChains'
      summary: Get supported chains
      tags:
      - NFT
  /nfts/tickers:
    get:
      consumes:
      - application/json
      description: Get NFT token tickers
      parameters:
      - description: CollectionAddress
        in: query
        name: collection_address
        required: true
        type: string
      - description: Token ID
        in: query
        name: token_id
        required: true
        type: string
      - description: from
        in: query
        name: from
        required: true
        type: string
      - description: to
        in: query
        name: to
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerGetNFTTokenTickersResponse'
      summary: Get NFT token tickers
      tags:
      - NFT
  /nfts/trading-volume:
    get:
      consumes:
      - application/json
      description: Get NFT trading volume
      parameters:
      - description: Symbol
        in: path
        name: symbol
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTTradingVolumeResponse'
      summary: Get NFT trading volume
      tags:
      - NFT
  /onboarding/start:
    post:
      consumes:
      - application/json
      description: User did start onboarding
      parameters:
      - description: onboarding start request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.OnboardingStartRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.OnboardingStartResponse'
      summary: User did start onboarding
      tags:
      - Onboarding
  /onchain/invest-stake-data:
    get:
      consumes:
      - application/json
      description: Get onchain invest stake data
      parameters:
      - description: chain id
        in: query
        name: chainID
        required: true
        type: integer
      - description: the earning platform (aave_v2, aave_v3)
        in: query
        name: platform
        required: true
        type: string
      - description: the earning type (stake, lend)
        in: query
        name: type
        required: true
        type: string
      - description: token address want to invest
        in: query
        name: tokenAddress
        required: true
        type: string
      - description: the user address
        in: query
        name: userAddress
        required: true
        type: string
      - description: the token amount want to invest (in wei)
        in: query
        name: tokenAmount
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.OnchainInvestDataResponse'
      summary: Get onchain invest stake data
      tags:
      - Invest
  /onchain/invest-unstake-data:
    get:
      consumes:
      - application/json
      description: Get onchain invest unstake data
      parameters:
      - description: chain id
        in: query
        name: chainID
        required: true
        type: integer
      - description: the earning platform (aave_v2, aave_v3)
        in: query
        name: platform
        required: true
        type: string
      - description: the earning type (stake, lend)
        in: query
        name: type
        required: true
        type: string
      - description: token address want to invest
        in: query
        name: tokenAddress
        required: true
        type: string
      - description: the user address
        in: query
        name: userAddress
        required: true
        type: string
      - description: the token amount want to invest (in wei)
        in: query
        name: tokenAmount
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.OnchainInvestDataResponse'
      summary: Get onchain invest unstake data
      tags:
      - Invest
  /product-metadata/changelogs:
    get:
      consumes:
      - application/json
      description: Get product changelogs
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: product
        type: string
      - in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ProductChangelogs'
      summary: Get product changelogs
      tags:
      - ProductMetadata
  /product-metadata/changelogs/{version}:
    get:
      consumes:
      - application/json
      description: Get product changelog by version
      parameters:
      - description: changelog version
        in: path
        name: version
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ProductChangelogs'
      summary: Get product changelog by version
      tags:
      - ProductMetadata
  /product-metadata/changelogs/latest:
    get:
      consumes:
      - application/json
      description: Get product changelog latest
      parameters:
      - description: changelog version
        in: path
        name: version
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ProductChangelogs'
      summary: Get product changelog latest
      tags:
      - ProductMetadata
  /product-metadata/changelogs/view:
    get:
      consumes:
      - application/json
      description: Get product changelogs viewed
      parameters:
      - in: query
        name: changelogName
        type: string
      - in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetProductChangelogsViewed'
      summary: Get product changelogs viewed
      tags:
      - ProductMetadata
    post:
      consumes:
      - application/json
      description: Created product changelogs viewed
      parameters:
      - description: create product changelogs viewed request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateProductChangelogsViewRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CreateProductChangelogsViewed'
      summary: Created product changelogs viewed
      tags:
      - ProductMetadata
  /product-metadata/commands:
    get:
      consumes:
      - application/json
      description: Get product bot commands
      parameters:
      - in: query
        name: code
        type: string
      - in: query
        name: scope
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ProductBotCommand'
      summary: Get product bot commands
      tags:
      - ProductMetadata
  /profiles/{profile_id}/global-info:
    get:
      consumes:
      - application/json
      description: Get profile's global info
      parameters:
      - description: profile ID
        in: path
        name: profile_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGlobalProfileInfoResponse'
      summary: Get profile's global info
      tags:
      - Profile
  /profiles/{profile_id}/settings/general:
    get:
      consumes:
      - application/json
      description: get profile's general settings
      operationId: getUserGeneralSettings
      parameters:
      - description: profile ID
        in: path
        name: profile_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.UserGeneralSettingResponse'
        "400":
          description: bad request
        "401":
          description: unauthorized
        "404":
          description: not found
        "500":
          description: internal server error
      security:
      - BearerAuth: []
      summary: get profile's general settings
      tags:
      - Settings
    put:
      consumes:
      - application/json
      description: update profile's general settings
      operationId: updateUserGeneralSettings
      parameters:
      - description: profile ID
        in: path
        name: profile_id
        required: true
        type: string
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpdateGeneralSettingsPayloadRequest'
      produces:
      - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.UserGeneralSettingResponse'
        "400":
          description: bad request
        "401":
          description: unauthorized
        "404":
          description: not found
        "500":
          description: internal server error
      security:
      - BearerAuth: []
      summary: update profile's general settings
      tags:
      - Settings
  /profiles/{profile_id}/settings/notifications:
    get:
      consumes:
      - application/json
      description: get profile's notification settings
      operationId: getUserNotificationSettings
      parameters:
      - description: profile ID
        in: path
        name: profile_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.UserNotificationSettingResponse'
        "400":
          description: bad request
        "401":
          description: unauthorized
        "404":
          description: not found
        "500":
          description: internal server error
      security:
      - BearerAuth: []
      summary: get profile's notification settings
      tags:
      - Settings
    put:
      consumes:
      - application/json
      description: update profile's notification settings
      operationId: updateUserNotificationSettings
      parameters:
      - description: profile ID
        in: path
        name: profile_id
        required: true
        type: string
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpdateNotificationSettingPayloadRequest'
      produces:
      - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.UserNotificationSettingResponse'
        "400":
          description: bad request
        "401":
          description: unauthorized
        "404":
          description: not found
        "500":
          description: internal server error
      security:
      - BearerAuth: []
      summary: update profile's notification settings
      tags:
      - Settings
  /swap:
    post:
      consumes:
      - application/json
      description: Execute swap token
      parameters:
      - description: swap request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.SwapRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Execute swap token
      tags:
      - Swap
  /swap/route:
    get:
      consumes:
      - application/json
      description: Get swap route for token pairs
      parameters:
      - description: from token symbol
        in: query
        name: from
        required: true
        type: string
      - description: to token symbol
        in: query
        name: to
        required: true
        type: string
      - description: from amount value
        in: query
        name: amount
        required: true
        type: string
      - description: profile ID
        in: query
        name: profileId
        required: true
        type: string
      - description: address
        in: query
        name: address
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.SwapRouteResponseData'
      summary: Get swap route for token pairs
      tags:
      - Swap
  /tip/transfer:
    post:
      consumes:
      - application/json
      description: API transfer token for tip, airdrop, ...
      parameters:
      - description: Transfer token request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.OffchainTransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.OffchainTipBotTransferTokenResponse'
      summary: OffChain Tip Bot - Transfer token
      tags:
      - Tip
  /tip/transfer-v2:
    post:
      consumes:
      - application/json
      description: API transfer token for tip, airdrop, ...
      operationId: transferV2
      parameters:
      - description: Transfer token request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.TransferV2Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TransferTokenV2Response'
      summary: OffChain Tip Bot - Transfer token v2
      tags:
      - Tip
  /users:
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: Create user request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Create User
      tags:
      - User
  /users/:id/wallets:
    get:
      consumes:
      - application/json
      description: Get user's wallets
      parameters:
      - description: guild ID
        in: query
        name: guild_id
        required: true
        type: string
      - description: req
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.GetTrackingWalletsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetTrackingWalletsResponse'
      summary: Get user's wallets
      tags:
      - Wallet
  /users/:id/wallets/:query:
    get:
      consumes:
      - application/json
      description: Find one user's trackng wallet
      parameters:
      - description: user Id
        in: path
        name: id
        required: true
        type: string
      - description: alias or address query
        in: path
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetOneWalletResponse'
      summary: Find one user's trackng wallet
      tags:
      - Wallet
  /users/{id}/cexs/binance/positions:
    get:
      consumes:
      - application/json
      description: Get user's future account balance
      parameters:
      - description: profile ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.BinanceFutureAccountPositionResponse'
      summary: Get user's future account balance
      tags:
      - Binance
  /users/{id}/earns/airdrop-campaigns:
    get:
      consumes:
      - application/json
      description: Get user earn list
      parameters:
      - description: profile id
        in: path
        name: id
        required: true
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: is_favorite
        in: query
        name: is_favorite
        type: boolean
      - description: page
        in: query
        name: page
        type: string
      - description: size
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ProfileAirdropCampaignsResponse'
      summary: Get user earn list
      tags:
      - Airdrop-campaigns
    post:
      consumes:
      - application/json
      description: Create profile airdrop campaign
      parameters:
      - description: profile id
        in: path
        name: id
        required: true
        type: string
      - description: Create profile airdrop campaign request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateProfileAirdropCampaignRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ProfileAirdropCampaignResponse'
      summary: Create profile airdrop campaign
      tags:
      - Airdrop-campaigns
  /users/{id}/earns/airdrop-campaigns/{airdrop_campaign_id}:
    delete:
      consumes:
      - application/json
      description: Delete profile airdrop campaign
      parameters:
      - description: profile id
        in: path
        name: id
        required: true
        type: string
      - description: airdrop campaign id
        in: path
        name: airdrop_campaign_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Delete profile airdrop campaign
      tags:
      - Airdrop-campaigns
  /users/{id}/watchlists/nfts:
    get:
      consumes:
      - application/json
      description: Get user's nft watchlist
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: profileID
        type: string
      - in: query
        name: size
        type: integer
      - description: profile ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetNftWatchlistResponse'
      summary: Get user's nft watchlist
      tags:
      - WatchList
  /users/{id}/watchlists/nfts/track:
    post:
      consumes:
      - application/json
      description: Add to user's nft watchlist
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.AddNftWatchlistRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NftWatchlistSuggestResponse'
      summary: Add to user's nft watchlist
      tags:
      - WatchList
  /users/{id}/watchlists/nfts/untrack:
    post:
      consumes:
      - application/json
      description: Remove from user's nft watchlist
      parameters:
      - in: query
        name: profileID
        type: string
      - in: query
        name: symbol
        required: true
        type: string
      - description: profile ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Remove from user's nft watchlist
      tags:
      - WatchList
  /users/{id}/watchlists/tokens:
    get:
      consumes:
      - application/json
      description: Get user's watchlist
      parameters:
      - in: query
        name: coin_gecko_id
        type: string
      - in: query
        name: profileID
        type: string
      - description: profile ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetWatchlistResponse'
      summary: Get user's watchlist
      tags:
      - WatchList
  /users/{id}/watchlists/tokens/track:
    post:
      consumes:
      - application/json
      description: Add to user's watchlist
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.AddToWatchlistRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.AddToWatchlistResponse'
      summary: Add to user's watchlist
      tags:
      - WatchList
  /users/{id}/watchlists/tokens/untrack:
    post:
      consumes:
      - application/json
      description: Remove from user's watchlist
      parameters:
      - in: query
        name: symbol
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Remove from user's watchlist
      tags:
      - WatchList
  /users/{id}/watchlists/wallets:
    get:
      consumes:
      - application/json
      description: Get user's tracking wallets
      parameters:
      - description: profile ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetTrackingWalletsResponse'
      summary: Get user's tracking wallets
      tags:
      - WatchList
  /users/{id}/watchlists/wallets/{address}:
    put:
      consumes:
      - application/json
      description: Update tracked wallet's info
      parameters:
      - description: user Id
        in: path
        name: id
        required: true
        type: string
      - description: address or current alias of tracked wallet
        in: path
        name: address
        required: true
        type: string
      - description: req
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpdateTrackingInfoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetOneWalletResponse'
      summary: Update tracked wallet's info
      tags:
      - WatchList
  /users/{id}/watchlists/wallets/track:
    post:
      consumes:
      - application/json
      description: Track new wallet
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: string
      - description: req
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.TrackWalletRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Track new wallet
      tags:
      - WatchList
  /users/{id}/watchlists/wallets/untrack:
    post:
      consumes:
      - application/json
      description: Untrack a wallet
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: string
      - in: query
        name: address
        type: string
      - in: query
        name: alias
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Untrack a wallet
      tags:
      - WatchList
  /users/{profile_id}/balances:
    get:
      consumes:
      - application/json
      description: Get user's balances
      parameters:
      - description: profile ID
        in: path
        name: profile_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.UserBalanceResponse'
      summary: Get user's balances
      tags:
      - User
  /users/{user_id}:
    get:
      consumes:
      - application/json
      description: Get user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetUserResponse'
      summary: Get user
      tags:
      - User
  /users/gmstreak:
    get:
      consumes:
      - application/json
      description: Get user current GM streak
      parameters:
      - description: Discord ID
        in: query
        name: discord_id
        required: true
        type: string
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetUserCurrentGMStreakResponse'
      summary: Get user current GM streak
      tags:
      - User
  /users/profiles/:
    get:
      consumes:
      - application/json
      description: Get user profile
      parameters:
      - in: query
        name: guildID
        required: true
        type: string
      - in: query
        name: profileID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetDataUserProfileResponse'
      summary: Get user profile
      tags:
      - User
  /users/top:
    get:
      consumes:
      - application/json
      description: Get top users
      parameters:
      - in: query
        name: guildID
        required: true
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: profileID
        required: true
        type: string
      - in: query
        name: query
        type: string
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TopUser'
      summary: Get top users
      tags:
      - User
  /users/xp:
    post:
      consumes:
      - application/json
      description: Send User XP
      parameters:
      - description: Send user XP request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.SendUserXPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Send User XP
      tags:
      - User
  /vault:
    get:
      consumes:
      - application/json
      description: Get vault
      parameters:
      - default: "false"
        in: query
        name: no_fetch_amount
        type: string
      - in: query
        name: vault_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetVaultResponse'
      summary: Get vault
      tags:
      - Vault
  /verify/assign-role:
    post:
      consumes:
      - application/json
      description: Assign verified role if user has verified wallet address
      parameters:
      - description: Assign verified role request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.AssignVerifiedRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseStatus'
      summary: Assign verified role if user has verified wallet address
      tags:
      - Verification
  /verify/config:
    delete:
      consumes:
      - application/json
      description: Delete guild config wallet verification message
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseStatus'
      summary: Delete guild config wallet verification message
      tags:
      - Verification
    post:
      consumes:
      - application/json
      description: Config wallet verification message
      parameters:
      - description: New guild config wallet verification message request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.NewGuildConfigWalletVerificationMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NewGuildConfigWalletVerificationMessageResponse'
      summary: Config wallet verification message
      tags:
      - Verification
    put:
      consumes:
      - application/json
      description: Update guild config wallet verification message
      parameters:
      - description: Update guild config wallet verification message request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.NewGuildConfigWalletVerificationMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NewGuildConfigWalletVerificationMessageResponse'
      summary: Update guild config wallet verification message
      tags:
      - Verification
  /verify/config/{guild_id}:
    get:
      consumes:
      - application/json
      description: Get guild config wallet verification message
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NewGuildConfigWalletVerificationMessageResponse'
      summary: Get guild config wallet verification message
      tags:
      - Verification
  /watchlists/wallets:
    get:
      consumes:
      - application/json
      description: Get tracking wallets
      parameters:
      - description: address
        in: query
        name: address
        type: string
      - description: with balance
        in: query
        name: with_balance
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetTrackingWalletsResponse'
      summary: Get tracking wallets
      tags:
      - WatchList
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
