basePath: /api/v1
definitions:
  big.Float:
    type: object
  discordgo.GuildFeature:
    enum:
    - ANIMATED_BANNER
    - ANIMATED_ICON
    - AUTO_MODERATION
    - BANNER
    - COMMUNITY
    - DISCOVERABLE
    - FEATURABLE
    - INVITE_SPLASH
    - MEMBER_VERIFICATION_GATE_ENABLED
    - MONETIZATION_ENABLED
    - MORE_STICKERS
    - NEWS
    - PARTNERED
    - PREVIEW_ENABLED
    - PRIVATE_THREADS
    - ROLE_ICONS
    - TICKETED_EVENTS_ENABLED
    - VANITY_URL
    - VERIFIED
    - VIP_REGIONS
    - WELCOME_SCREEN_ENABLED
    type: string
    x-enum-varnames:
    - GuildFeatureAnimatedBanner
    - GuildFeatureAnimatedIcon
    - GuildFeatureAutoModeration
    - GuildFeatureBanner
    - GuildFeatureCommunity
    - GuildFeatureDiscoverable
    - GuildFeatureFeaturable
    - GuildFeatureInviteSplash
    - GuildFeatureMemberVerificationGateEnabled
    - GuildFeatureMonetizationEnabled
    - GuildFeatureMoreStickers
    - GuildFeatureNews
    - GuildFeaturePartnered
    - GuildFeaturePreviewEnabled
    - GuildFeaturePrivateThreads
    - GuildFeatureRoleIcons
    - GuildFeatureTicketedEventsEnabled
    - GuildFeatureVanityURL
    - GuildFeatureVerified
    - GuildFeatureVipRegions
    - GuildFeatureWelcomeScreenEnabled
  discordgo.User:
    properties:
      accent_color:
        description: User's banner color, encoded as an integer representation of
          hexadecimal color code
        type: integer
      avatar:
        description: |-
          The hash of the user's avatar. Use Session.UserAvatar
          to retrieve the avatar itself.
        type: string
      banner:
        description: The hash of the user's banner image.
        type: string
      bot:
        description: Whether the user is a bot.
        type: boolean
      discriminator:
        description: The discriminator of the user (4 numbers after name).
        type: string
      email:
        description: |-
          The email of the user. This is only present when
          the application possesses the email scope for the user.
        type: string
      flags:
        description: |-
          The flags on a user's account.
          Only available when the request is authorized via a Bearer token.
        type: integer
      id:
        description: The ID of the user.
        type: string
      locale:
        description: The user's chosen language option.
        type: string
      mfa_enabled:
        description: Whether the user has multi-factor authentication enabled.
        type: boolean
      premium_type:
        description: |-
          The type of Nitro subscription on a user's account.
          Only available when the request is authorized via a Bearer token.
        type: integer
      public_flags:
        allOf:
        - $ref: '#/definitions/discordgo.UserFlags'
        description: |-
          The public flags on a user's account.
          This is a combination of bit masks; the presence of a certain flag can
          be checked by performing a bitwise AND between this int and the flag.
      system:
        description: Whether the user is an Official Discord System user (part of
          the urgent message system).
        type: boolean
      token:
        description: |-
          The token of the user. This is only present for
          the user represented by the current session.
        type: string
      username:
        description: The user's username.
        type: string
      verified:
        description: Whether the user's email is verified.
        type: boolean
    type: object
  discordgo.UserFlags:
    enum:
    - 1
    - 2
    - 4
    - 8
    - 64
    - 128
    - 256
    - 512
    - 1024
    - 4096
    - 16384
    - 65536
    - 131072
    - 262144
    type: integer
    x-enum-varnames:
    - UserFlagDiscordEmployee
    - UserFlagDiscordPartner
    - UserFlagHypeSquadEvents
    - UserFlagBugHunterLevel1
    - UserFlagHouseBravery
    - UserFlagHouseBrilliance
    - UserFlagHouseBalance
    - UserFlagEarlySupporter
    - UserFlagTeamUser
    - UserFlagSystem
    - UserFlagBugHunterLevel2
    - UserFlagVerifiedBot
    - UserFlagVerifiedBotDeveloper
    - UserFlagDiscordCertifiedModerator
  github_com_defipod_mochi_pkg_entities.LoginResponse:
    properties:
      access_token:
        type: string
      expires_at:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_model.Activity:
    properties:
      guild_default:
        type: boolean
      id:
        type: integer
      name:
        type: string
      xp:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_model.Chain:
    properties:
      coin_gecko_id:
        type: string
      currency:
        type: string
      id:
        type: integer
      name:
        type: string
      short_name:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.CoingeckoSupportedTokens:
    properties:
      id:
        type: string
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.ConfigXpLevel:
    properties:
      level:
        type: integer
      min_xp:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_model.DiscordGuild:
    properties:
      active:
        type: boolean
      alias:
        type: string
      bot_scopes:
        items:
          type: string
        type: array
      created_at:
        type: string
      global_xp:
        type: boolean
      id:
        type: string
      log_channel:
        type: string
      name:
        type: string
      roles:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildRole'
        type: array
    type: object
  github_com_defipod_mochi_pkg_model.DiscordGuildStat:
    properties:
      created_at:
        type: string
      guild_id:
        type: string
      id:
        type: string
      nr_of_animated_emojis:
        type: integer
      nr_of_announcement_channels:
        type: integer
      nr_of_bots:
        type: integer
      nr_of_categories:
        type: integer
      nr_of_channels:
        type: integer
      nr_of_custom_stickers:
        type: integer
      nr_of_emojis:
        type: integer
      nr_of_members:
        type: integer
      nr_of_roles:
        type: integer
      nr_of_server_stickers:
        type: integer
      nr_of_stage_channels:
        type: integer
      nr_of_static_emojis:
        type: integer
      nr_of_stickers:
        type: integer
      nr_of_text_channels:
        type: integer
      nr_of_users:
        type: integer
      nr_of_voice_channels:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_model.DiscordUserDevice:
    properties:
      created_at:
        type: string
      id:
        type: string
      ios_noti_token:
        type: string
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.DiscordUserGMStreak:
    properties:
      created_at:
        type: string
      discord_id:
        type: string
      guild_id:
        type: string
      last_streak_date:
        type: string
      streak_count:
        type: integer
      total_count:
        type: integer
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.DiscordUserTokenAlert:
    properties:
      created_at:
        type: string
      device:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DiscordUserDevice'
      device_id:
        type: string
      discord_id:
        type: string
      id:
        type: string
      is_enable:
        type: boolean
      price_set:
        type: number
      symbol:
        type: string
      token_id:
        type: string
      trend:
        type: string
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.DiscordUserUpvoteStreak:
    properties:
      created_at:
        type: string
      discord_id:
        type: string
      last_streak_date:
        type: string
      streak_count:
        type: integer
      total_count:
        type: integer
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigActivity:
    properties:
      active:
        type: boolean
      activity:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Activity'
      activity_id:
        type: integer
      guild_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigDefaultCollection:
    properties:
      address:
        type: string
      chain_id:
        type: string
      created_at:
        type: string
      guild_id:
        type: string
      symbol:
        type: string
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigDefaultTicker:
    properties:
      default_ticker:
        type: string
      guild_id:
        type: string
      query:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigGmGn:
    properties:
      channel_id:
        type: string
      emoji:
        type: string
      guild_id:
        type: string
      id:
        type: string
      msg:
        type: string
      sticker:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigInviteTracker:
    properties:
      channel_id:
        type: string
      guild_id:
        type: string
      id:
        type: string
      webhook_url:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.JSONNullString'
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigLevelRole:
    properties:
      guild_id:
        type: string
      level:
        type: integer
      level_config:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ConfigXpLevel'
      role_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigRepostReaction:
    properties:
      emoji:
        type: string
      emoji_start:
        type: string
      emoji_stop:
        type: string
      guild_id:
        type: string
      id:
        type: string
      quantity:
        type: integer
      reaction_type:
        type: string
      repost_channel_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigSalesTracker:
    properties:
      channel_id:
        type: string
      guild_id:
        type: string
      id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigTwitterBlacklist:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      guild_id:
        type: string
      twitter_id:
        type: string
      twitter_username:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigTwitterFeed:
    properties:
      guild_id:
        type: string
      twitter_access_token:
        type: string
      twitter_access_token_secret:
        type: string
      twitter_consumer_key:
        type: string
      twitter_consumer_secret:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigVoteChannel:
    properties:
      channel_id:
        type: string
      guild_id:
        type: string
      id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigWalletVerificationMessage:
    properties:
      content:
        type: string
      created_at:
        type: string
      discord_message_id:
        type: string
      embedded_message:
        items:
          type: integer
        type: array
      guild_id:
        type: string
      verify_channel_id:
        type: string
      verify_role_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildConfigWelcomeChannel:
    properties:
      channel_id:
        type: string
      guild_id:
        type: string
      id:
        type: string
      welcome_message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.GuildRole:
    properties:
      guild_id:
        type: string
      name:
        type: string
      role_id:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_model.JSONNullString:
    properties:
      string:
        type: string
      valid:
        description: Valid is true if String is not NULL
        type: boolean
    type: object
  github_com_defipod_mochi_pkg_model.MonikerConfig:
    properties:
      amount:
        type: number
      created_at:
        type: string
      guild_id:
        type: string
      id:
        type: string
      moniker:
        type: string
      plural:
        type: string
      token:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.OffchainTipBotToken'
      token_id:
        type: string
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.NFTCollection:
    properties:
      address:
        type: string
      author:
        type: string
      chain_id:
        type: string
      created_at:
        type: string
      erc_format:
        type: string
      id:
        type: string
      image:
        type: string
      is_verified:
        type: boolean
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.NFTCollectionDetail:
    properties:
      address:
        type: string
      author:
        type: string
      chain:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Chain'
      chain_id:
        type: string
      created_at:
        type: string
      erc_format:
        type: string
      id:
        type: string
      image:
        type: string
      is_verified:
        type: boolean
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.NewListedNFTCollection:
    properties:
      address:
        type: string
      author:
        type: string
      chain:
        type: string
      chain_id:
        type: string
      created_at:
        type: string
      erc_format:
        type: string
      id:
        type: string
      image:
        type: string
      is_verified:
        type: boolean
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.OffchainTipBotAssignContract:
    properties:
      chain_id:
        type: string
      contract:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.OffchainTipBotContract'
      contract_id:
        type: string
      expired_time:
        type: string
      id:
        type: string
      status:
        type: integer
      token_id:
        type: string
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.OffchainTipBotContract:
    properties:
      assign_status:
        type: integer
      centralize_wallet:
        type: string
      chain_id:
        type: string
      contract_address:
        type: string
      created_at:
        type: string
      id:
        type: string
      status:
        type: integer
      sweeped_time:
        type: string
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.OffchainTipBotToken:
    properties:
      coin_gecko_id:
        type: string
      created_at:
        type: string
      icon:
        type: string
      id:
        type: string
      service_fee:
        type: number
      status:
        type: integer
      token_id:
        type: string
      token_name:
        type: string
      token_symbol:
        type: string
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.OffchainTipBotTransferHistory:
    properties:
      action:
        type: string
      amount:
        type: number
      created_at:
        type: string
      fee_amount:
        type: number
      guild_id:
        type: string
      id:
        type: string
      log_id:
        type: string
      receiver_id:
        type: string
      sender_id:
        type: string
      service_fee:
        type: number
      status:
        type: string
      token:
        type: string
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.Quest:
    properties:
      action:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestAction'
      frequency:
        type: integer
      id:
        type: string
      rewards:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestReward'
        type: array
      routine:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestRoutine'
      title:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.QuestAction:
    enum:
    - gm
    - vote
    - trade
    - gift
    - ticker
    - watchlist
    - bonus
    type: string
    x-enum-varnames:
    - GM
    - VOTE
    - TRADE
    - GIFT
    - TICKER
    - WATCHLIST
    - BONUS
  github_com_defipod_mochi_pkg_model.QuestReward:
    properties:
      id:
        type: string
      pass_id:
        type: string
      quest:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Quest'
      quest_id:
        type: string
      reward_amount:
        type: integer
      reward_type:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestRewardType'
      reward_type_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.QuestRewardType:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.QuestRoutine:
    enum:
    - daily
    - weekly
    - monthly
    - yearly
    - once
    type: string
    x-enum-varnames:
    - DAILY
    - WEEKLY
    - MONTHLY
    - YEARLY
    - ONCE
  github_com_defipod_mochi_pkg_model.QuestUserList:
    properties:
      action:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestAction'
      current:
        type: integer
      end_time:
        type: string
      id:
        type: string
      is_claimed:
        type: boolean
      is_completed:
        type: boolean
      multiplier:
        type: number
      quest:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Quest'
      quest_id:
        type: string
      routine:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestRoutine'
      start_time:
        type: string
      target:
        type: integer
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.QuestUserReward:
    properties:
      claimed_at:
        type: string
      pass_id:
        type: string
      quest_id:
        type: string
      reward:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestReward'
      reward_amount:
        type: integer
      reward_id:
        type: string
      reward_type_id:
        type: string
      start_time:
        type: string
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.Token:
    properties:
      address:
        type: string
      chain:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Chain'
      chain_id:
        type: integer
      coin_gecko_id:
        type: string
      decimal:
        type: integer
      discord_bot_supported:
        type: boolean
      guild_default:
        type: boolean
      id:
        type: integer
      is_native:
        type: boolean
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.TradeItem:
    properties:
      id:
        type: string
      is_from:
        type: boolean
      token_address:
        type: string
      token_ids:
        items:
          type: string
        type: array
      trade_offer_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.TradeOffer:
    properties:
      created_at:
        type: string
      have_items:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.TradeItem'
        type: array
      id:
        type: string
      owner_address:
        type: string
      updated_at:
        type: string
      want_items:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.TradeItem'
        type: array
    type: object
  github_com_defipod_mochi_pkg_model.TwitterPostStreak:
    properties:
      created_at:
        type: string
      guild_id:
        type: string
      last_streak_date:
        type: string
      streak_count:
        type: integer
      total_count:
        type: integer
      twitter_handle:
        type: string
      twitter_id:
        type: string
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.UpvoteStreakTier:
    properties:
      id:
        type: integer
      streak_required:
        type: integer
      vote_interval:
        type: integer
      xp_per_interval:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_model.UserFactionXpsMapping:
    properties:
      academy_xp:
        type: integer
      imperial_xp:
        type: integer
      merchant_xp:
        type: integer
      rebellio_xp:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_model.UserFeedback:
    properties:
      command:
        type: string
      completed_at:
        type: string
      confirmed_at:
        type: string
      created_at:
        type: string
      discord_id:
        type: string
      feedback:
        type: string
      id:
        $ref: '#/definitions/uuid.NullUUID'
      message_id:
        type: string
      status:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.UserTelegramDiscordAssociation:
    properties:
      discord_id:
        type: string
      telegram_username:
        type: string
    type: object
  github_com_defipod_mochi_pkg_model.UserWallet:
    properties:
      address:
        type: string
      chain_type:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.JSONNullString'
      created_at:
        type: string
      guild_id:
        type: string
      user_discord_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.AddNftWatchlistRequest:
    properties:
      chain:
        type: string
      collection_address:
        type: string
      collection_symbol:
        type: string
      guild_id:
        type: string
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.AddToTwitterBlackListRequest:
    properties:
      created_by:
        type: string
      guild_id:
        type: string
      twitter_id:
        type: string
      twitter_username:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.AddToWatchlistRequest:
    properties:
      coin_gecko_id:
        type: string
      is_fiat:
        type: boolean
      symbol:
        type: string
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.BalcklistChannelRepostConfigRequest:
    properties:
      channel_id:
        type: string
      guild_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.ClaimQuestsRewardsRequest:
    properties:
      quest_id:
        type: string
      routine:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestRoutine'
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.ConfigDefaultCollection:
    properties:
      address:
        type: string
      chain:
        type: string
      guild_id:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.ConfigDefaultTokenRequest:
    properties:
      guild_id:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.ConfigGroupNFTRoleRequest:
    properties:
      collection_address:
        items:
          type: string
        type: array
      group_name:
        type: string
      guild_id:
        type: string
      number_of_tokens:
        type: integer
      role_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.ConfigLevelRoleRequest:
    properties:
      guild_id:
        type: string
      level:
        type: integer
      role_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.ConfigRepostReactionStartStop:
    properties:
      emoji_start:
        type: string
      emoji_stop:
        type: string
      guild_id:
        type: string
      repost_channel_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.ConfigRepostRequest:
    properties:
      emoji:
        type: string
      guild_id:
        type: string
      quantity:
        type: integer
      repost_channel_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.ConfigureInviteRequest:
    properties:
      guild_id:
        type: string
      log_channel:
        type: string
      webhook_url:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.CreateAssignContract:
    properties:
      token_symbol:
        type: string
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.CreateDefaultRoleRequest:
    properties:
      guild_id:
        type: string
      role_id:
        type: string
    required:
    - guild_id
    - role_id
    type: object
  github_com_defipod_mochi_pkg_request.CreateGuildRequest:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.CreateNFTCollectionRequest:
    properties:
      address:
        type: string
      author:
        type: string
      chain:
        type: string
      chain_id:
        type: string
      channel_id:
        type: string
      guild_id:
        type: string
      message_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.CreateTipConfigNotify:
    properties:
      channel_id:
        type: string
      guild_id:
        type: string
      token:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.CreateTradeOfferRequest:
    properties:
      have_items:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.TradeOfferItem'
        type: array
      owner_address:
        type: string
      want_items:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.TradeOfferItem'
        type: array
    required:
    - owner_address
    type: object
  github_com_defipod_mochi_pkg_request.CreateUserRequest:
    properties:
      guild_id:
        type: string
      id:
        type: string
      invited_by:
        type: string
      nickname:
        type: string
      username:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.DeleteDiscordUserAlertRequest:
    properties:
      id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.DeleteJoinLeaveChannelConfigRequest:
    properties:
      guild_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.DeleteMonikerConfigRequest:
    properties:
      guild_id:
        type: string
      moniker:
        type: string
    required:
    - guild_id
    - moniker
    type: object
  github_com_defipod_mochi_pkg_request.DeleteUserDeviceRequest:
    properties:
      device_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.DeleteVoteChannelConfigRequest:
    properties:
      guild_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.DeleteWelcomeConfigRequest:
    properties:
      guild_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.EditMessageRepostRequest:
    properties:
      guild_id:
        type: string
      origin_channel_id:
        type: string
      origin_message_id:
        type: string
      repost_channel_id:
        type: string
      repost_message_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.GenerateVerificationRequest:
    properties:
      guild_id:
        type: string
      is_reverify:
        type: boolean
      user_discord_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.GuildConfigDefaultNftTickerRequest:
    properties:
      chain_id:
        type: integer
      collection_address:
        type: string
      guild_id:
        type: string
      query:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.GuildConfigDefaultTickerRequest:
    properties:
      default_ticker:
        type: string
      guild_id:
        type: string
      query:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.GuildIDRequest:
    properties:
      guild_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.LinkUserTelegramWithDiscordRequest:
    properties:
      discord_id:
        type: string
      telegram_username:
        type: string
    required:
    - discord_id
    - telegram_username
    type: object
  github_com_defipod_mochi_pkg_request.LoginRequest:
    properties:
      access_token:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.NewGuildConfigWalletVerificationMessageRequest:
    properties:
      content:
        type: string
      created_at:
        type: string
      discord_message_id:
        type: string
      embedded_message:
        items:
          type: integer
        type: array
      guild_id:
        type: string
      verify_channel_id:
        type: string
      verify_role_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.OffchainTransferRequest:
    properties:
      all:
        type: boolean
      amount:
        type: number
      channel_id:
        type: string
      duration:
        type: integer
      each:
        type: boolean
      full_command:
        type: string
      guild_id:
        type: string
      image:
        type: string
      message:
        type: string
      platform:
        type: string
      recipients:
        items:
          type: string
        type: array
      sender:
        type: string
      token:
        type: string
      transfer_type:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.OffchainWithdrawRequest:
    properties:
      all:
        type: boolean
      amount:
        type: number
      channel_id:
        type: string
      duration:
        type: integer
      each:
        type: boolean
      full_command:
        type: string
      guild_id:
        type: string
      recipient:
        type: string
      recipient_address:
        type: string
      token:
        type: string
      transfer_type:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.RoleReactionRequest:
    properties:
      guild_id:
        type: string
      message_id:
        type: string
      reaction:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.RoleReactionUpdateRequest:
    properties:
      channel_id:
        type: string
      guild_id:
        type: string
      message_id:
        type: string
      reaction:
        type: string
      role_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.SetUpvoteMessageCacheRequest:
    properties:
      channel_id:
        type: string
      guild_id:
        type: string
      message_id:
        type: string
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.TradeOfferItem:
    properties:
      token_address:
        type: string
      token_ids:
        items:
          type: string
        type: array
    required:
    - token_address
    - token_ids
    type: object
  github_com_defipod_mochi_pkg_request.TwitterHashtag:
    properties:
      channel_id:
        type: string
      from_twitter:
        items:
          type: string
        type: array
      guild_id:
        type: string
      hashtag:
        items:
          type: string
        type: array
      rule_id:
        type: string
      twitter_username:
        items:
          type: string
        type: array
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.TwitterPost:
    properties:
      content:
        type: string
      guild_id:
        type: string
      tweet_id:
        type: string
      twitter_handle:
        type: string
      twitter_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpdateGuildRequest:
    properties:
      active:
        type: boolean
      global_xp:
        type: boolean
      left_at:
        type: string
      log_channel:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpdateQuestProgressRequest:
    properties:
      action:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestAction'
      guild_id:
        type: string
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpdateUserFeedbackRequest:
    properties:
      id:
        type: string
      status:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpsertCustomTokenConfigRequest:
    properties:
      active:
        type: boolean
      address:
        type: string
      chain:
        type: string
      chain_id:
        type: integer
      coin_gecko_id:
        type: string
      decimals:
        type: integer
      discord_bot_supported:
        type: boolean
      guild_default:
        type: boolean
      guild_id:
        type: string
      id:
        type: integer
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpsertDiscordUserAlertRequest:
    properties:
      device_id:
        type: string
      discord_id:
        type: string
      id:
        type: string
      is_enable:
        type: boolean
      price_set:
        type: number
      symbol:
        type: string
      token_id:
        type: string
      trend:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpsertGmConfigRequest:
    properties:
      channel_id:
        type: string
      emoji:
        type: string
      guild_id:
        type: string
      msg:
        type: string
      sticker:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpsertGuildDefaultCurrencyRequest:
    properties:
      Symbol:
        type: string
      guild_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpsertGuildPruneExcludeRequest:
    properties:
      guild_id:
        type: string
      role_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpsertGuildTokenConfigRequest:
    properties:
      active:
        type: boolean
      guild_id:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpsertJoinLeaveChannelConfigRequest:
    properties:
      channel_id:
        type: string
      guild_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpsertMonikerConfigRequest:
    properties:
      amount:
        type: number
      guild_id:
        type: string
      moniker:
        type: string
      plural:
        type: string
      token:
        type: string
    required:
    - amount
    - guild_id
    - moniker
    - token
    type: object
  github_com_defipod_mochi_pkg_request.UpsertUserDeviceRequest:
    properties:
      device_id:
        type: string
      ios_noti_token:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpsertVoteChannelConfigRequest:
    properties:
      channel_id:
        type: string
      guild_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UpsertWelcomeConfigRequest:
    properties:
      channel_id:
        type: string
      guild_id:
        type: string
      welcome_message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.UserFeedbackRequest:
    properties:
      avatar:
        type: string
      command:
        type: string
      discord_id:
        type: string
      feedback:
        type: string
      message_id:
        type: string
      username:
        type: string
    type: object
  github_com_defipod_mochi_pkg_request.VerifyWalletAddressRequest:
    properties:
      code:
        type: string
      signature:
        type: string
      wallet_address:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.AddToWatchlistResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.AddToWatchlistResponseData'
    type: object
  github_com_defipod_mochi_pkg_response.AddToWatchlistResponseData:
    properties:
      base_suggestions:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.CoingeckoSupportedTokens'
        type: array
      target_suggestions:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.CoingeckoSupportedTokens'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.AllTipBotTokensResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.OffchainTipBotToken'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.ClaimQuestsRewardsResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ClaimQuestsRewardsResponseData'
    type: object
  github_com_defipod_mochi_pkg_response.ClaimQuestsRewardsResponseData:
    properties:
      rewards:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestUserReward'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.CoinDescription:
    properties:
      en:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.CoinImage:
    properties:
      large:
        type: string
      small:
        type: string
      thumb:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.CoinMarketItemData:
    properties:
      current_price:
        type: number
      id:
        type: string
      image:
        type: string
      is_default:
        type: boolean
      is_pair:
        type: boolean
      name:
        type: string
      price_change_percentage_7d_in_currency:
        type: number
      price_change_percentage_24h:
        type: number
      sparkline_in_7d:
        properties:
          price:
            items:
              type: number
            type: array
        type: object
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.CoinPriceHistoryResponse:
    properties:
      from:
        type: string
      prices:
        items:
          type: number
        type: array
      times:
        items:
          type: string
        type: array
      timestamps:
        items:
          type: integer
        type: array
      to:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.CollectionSuggestions:
    properties:
      address:
        type: string
      chain:
        type: string
      chain_id:
        type: integer
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.CompareTokenReponseData:
    properties:
      base_coin:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetCoinResponse'
      base_coin_suggestions:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.CoingeckoSupportedTokens'
        type: array
      from:
        type: string
      ratios:
        items:
          type: number
        type: array
      target_coin:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetCoinResponse'
      target_coin_suggestions:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.CoingeckoSupportedTokens'
        type: array
      times:
        items:
          type: string
        type: array
      to:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.CompareTokenResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CompareTokenReponseData'
    type: object
  github_com_defipod_mochi_pkg_response.ConfigGroupNFTRoleResponse:
    properties:
      group_name:
        type: string
      guild_id:
        type: string
      nft_collection_configs:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTCollectionConfig'
        type: array
      number_of_tokens:
        type: integer
      role_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.ConfigNotifyResponse:
    properties:
      channel_id:
        type: string
      created_at:
        type: string
      guild_id:
        type: string
      id:
        type: string
      token:
        type: string
      total_transaction:
        type: integer
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.ConfigureInvitesResponse:
    properties:
      data:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.CreateNFTCollectionResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.NFTCollection'
    type: object
  github_com_defipod_mochi_pkg_response.CreateTradeOfferResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.TradeOffer'
    type: object
  github_com_defipod_mochi_pkg_response.CurrentUserUpvoteStreakResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetUserCurrentUpvoteStreakResponse'
    type: object
  github_com_defipod_mochi_pkg_response.DataFilterConfigByReaction:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.RoleReactionResponse'
      page:
        description: page index
        type: integer
      size:
        description: page size
        type: integer
      total:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.DataListRoleReactionResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ListRoleReactionResponse'
      page:
        description: page index
        type: integer
      size:
        description: page size
        type: integer
      total:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.DataMetric:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.Metric'
    type: object
  github_com_defipod_mochi_pkg_response.DefaultRole:
    properties:
      guild_id:
        type: string
      role_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.DefaultRoleResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.DefaultRole'
    type: object
  github_com_defipod_mochi_pkg_response.DiscordGuildResponse:
    properties:
      bot_addable:
        type: boolean
      bot_arrived:
        type: boolean
      features:
        items:
          $ref: '#/definitions/discordgo.GuildFeature'
        type: array
      icon:
        type: string
      id:
        type: string
      name:
        type: string
      owner:
        type: boolean
      permissions:
        example: "0"
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.DiscordUserTokenAlertResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DiscordUserTokenAlert'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GenerateVerificationResponse:
    properties:
      code:
        type: string
      status:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetAllNFTSalesTrackerResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTSalesTrackerResponse'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetAllTwitterConfigResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigTwitterFeed'
        type: array
      message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetAllTwitterHashtagConfigResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TwitterHashtag'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetAssignedContract:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.OffchainTipBotAssignContract'
    type: object
  github_com_defipod_mochi_pkg_response.GetCoinResponse:
    properties:
      asset_platform_id:
        type: string
      description:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CoinDescription'
      id:
        type: string
      image:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CoinImage'
      market_cap_rank:
        type: integer
      market_data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.MarketData'
      name:
        type: string
      symbol:
        type: string
      tickers:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TickerData'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetCoinResponseWrapper:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetCoinResponse'
    type: object
  github_com_defipod_mochi_pkg_response.GetCollectionCountResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTCollectionCount'
    type: object
  github_com_defipod_mochi_pkg_response.GetDataUserProfileResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetUserProfileResponse'
    type: object
  github_com_defipod_mochi_pkg_response.GetDefaultTokenResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Token'
    type: object
  github_com_defipod_mochi_pkg_response.GetDetailNftCollectionResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.NFTCollectionDetail'
    type: object
  github_com_defipod_mochi_pkg_response.GetFiatHistoricalExchangeRatesResponse:
    properties:
      from:
        type: string
      latest_rate:
        type: number
      rates:
        items:
          type: number
        type: array
      times:
        items:
          type: string
        type: array
      to:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetGmConfigResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigGmGn'
      message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetGuildDefaultNftTickerResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigDefaultCollection'
    type: object
  github_com_defipod_mochi_pkg_response.GetGuildDefaultTickerResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigDefaultTicker'
    type: object
  github_com_defipod_mochi_pkg_response.GetGuildPruneExcludeResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GuildPruneExcludeList'
      message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetGuildResponse:
    properties:
      active:
        type: boolean
      alias:
        type: string
      bot_scopes:
        items:
          type: string
        type: array
      global_xp:
        type: boolean
      id:
        type: string
      log_channel:
        type: string
      log_channel_id:
        type: string
      name:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetGuildTokensResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Token'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetGuildUserResponse:
    properties:
      guild_id:
        type: string
      invited_by:
        type: string
      nickname:
        type: string
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetGuildsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGuildResponse'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetHistoricalMarketChartResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CoinPriceHistoryResponse'
    type: object
  github_com_defipod_mochi_pkg_response.GetInviteTrackerConfigResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigInviteTracker'
      message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetInvitesLeaderboardResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.UserInvitesAggregation'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetInvitesResponse:
    properties:
      data:
        items:
          type: string
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetLevelRoleConfigsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigLevelRole'
        type: array
      page:
        description: page index
        type: integer
      size:
        description: page size
        type: integer
      total:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.GetLinkedTelegramResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.UserTelegramDiscordAssociation'
    type: object
  github_com_defipod_mochi_pkg_response.GetListAllChainsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Chain'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetMyInfoResponse:
    properties:
      data:
        $ref: '#/definitions/discordgo.User'
    type: object
  github_com_defipod_mochi_pkg_response.GetNFTActivityData:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerNFTActivityData'
        type: array
      metadata:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_util.Pagination'
    type: object
  github_com_defipod_mochi_pkg_response.GetNFTActivityResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetNFTActivityData'
    type: object
  github_com_defipod_mochi_pkg_response.GetNFTCollectionByAddressChain:
    properties:
      address:
        type: string
      author:
        type: string
      chain_id:
        type: string
      created_at:
        type: string
      description:
        type: string
      discord:
        type: string
      erc_format:
        type: string
      id:
        type: string
      image:
        type: string
      is_verified:
        type: boolean
      marketplaces:
        items:
          type: string
        type: array
      name:
        type: string
      symbol:
        type: string
      twitter:
        type: string
      website:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetNFTCollectionByAddressChainResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetNFTCollectionByAddressChain'
    type: object
  github_com_defipod_mochi_pkg_response.GetNftWatchlist:
    properties:
      floor_price:
        type: number
      id:
        type: string
      image:
        type: string
      is_pair:
        type: boolean
      name:
        type: string
      price_change_percentage_7d_in_currency:
        type: number
      price_change_percentage_24h:
        type: number
      sparkline_in_7d:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.SparkLineIn7d'
      symbol:
        type: string
      token:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerToken'
    type: object
  github_com_defipod_mochi_pkg_response.GetNftWatchlistResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetNftWatchlist'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetRepostReactionConfigsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigRepostReaction'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetSalesTrackerConfigResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigSalesTracker'
    type: object
  github_com_defipod_mochi_pkg_response.GetSuggestionNFTCollectionsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CollectionSuggestions'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetSupportedChains:
    properties:
      data:
        items:
          type: string
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetSupportedTokensResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Token'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetTradeOfferResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.TradeOffer'
    type: object
  github_com_defipod_mochi_pkg_response.GetTwitterBlackListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigTwitterBlacklist'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetTwitterHashtagConfigResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TwitterHashtag'
    type: object
  github_com_defipod_mochi_pkg_response.GetTwitterLeaderboardResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetTwitterLeaderboardResponseData'
    type: object
  github_com_defipod_mochi_pkg_response.GetTwitterLeaderboardResponseData:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.TwitterPostStreak'
        type: array
      metadata:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.PaginationResponse'
    type: object
  github_com_defipod_mochi_pkg_response.GetUpvoteTiersConfig:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.UpvoteStreakTier'
        type: array
      message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetUserBalances:
    properties:
      balances:
        type: number
      balances_in_usd:
        type: number
      id:
        type: string
      name:
        type: string
      rate_in_usd:
        type: number
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetUserBalancesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetUserBalances'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetUserCurrentGMStreakResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DiscordUserGMStreak'
    type: object
  github_com_defipod_mochi_pkg_response.GetUserCurrentUpvoteStreakResponse:
    properties:
      discord_id:
        type: string
      last_streak_time:
        type: string
      minutes_until_reset:
        type: number
      minutes_until_reset_discordbotlist:
        type: number
      minutes_until_reset_topgg:
        type: number
      streak_count:
        type: integer
      total_count:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.GetUserProfileResponse:
    properties:
      about_me:
        type: string
      current_level:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ConfigXpLevel'
      guild:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DiscordGuild'
      guild_rank:
        type: integer
      guild_xp:
        type: integer
      id:
        type: string
      next_level:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.ConfigXpLevel'
      nr_of_actions:
        type: integer
      progress:
        type: number
      user_faction_xps:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.UserFactionXpsMapping'
      user_wallet:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.UserWallet'
    type: object
  github_com_defipod_mochi_pkg_response.GetUserQuestListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.QuestUserList'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetUserResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.User'
    type: object
  github_com_defipod_mochi_pkg_response.GetUserUpvoteLeaderboardResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DiscordUserUpvoteStreak'
        type: array
      message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetUserWalletByGuildIDAddressResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.UserWallet'
    type: object
  github_com_defipod_mochi_pkg_response.GetVoteChannelConfigResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigVoteChannel'
      message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GetWatchlistResponse:
    properties:
      data:
        description: Pagination *PaginationResponse  `json:"pagination"`
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CoinMarketItemData'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.GetWelcomeChannelConfigResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigWelcomeChannel'
      message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GuildConfigDefaultCurrencyResponse:
    properties:
      created_at:
        type: string
      guild_id:
        type: string
      tip_bot_token:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.OffchainTipBotToken'
      updated_at:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.GuildPruneExcludeList:
    properties:
      guild_id:
        type: string
      roles:
        items:
          type: string
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.IndexerChain:
    properties:
      chain_id:
        type: integer
      is_evm:
        type: boolean
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.IndexerGetNFTTokenDetailResponseWithSuggestions:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerNFTTokenDetailData'
      default_symbol:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CollectionSuggestions'
      suggestions:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CollectionSuggestions'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.IndexerGetNFTTokenTickersResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerNFTTokenTickersData'
    type: object
  github_com_defipod_mochi_pkg_response.IndexerGetNFTTokensResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerNFTTokenDetailData'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.IndexerNFTActivityData:
    properties:
      chain_id:
        type: integer
      contract_address:
        type: string
      created_time:
        type: string
      event_type:
        type: string
      from_address:
        type: string
      id:
        type: integer
      last_update_time:
        type: string
      listing_price:
        type: string
      listing_price_obj:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerPrice'
      listing_status:
        type: string
      listing_type:
        type: string
      payment_token:
        type: integer
      platform_id:
        type: integer
      quantity:
        type: string
      sold_price:
        type: string
      sold_price_obj:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerPrice'
      to_address:
        type: string
      token_id:
        type: string
      transaction_hash:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.IndexerNFTCollectionTickersData:
    properties:
      address:
        type: string
      chain:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerChain'
      collection_image:
        type: string
      floor_price:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerPrice'
      items:
        type: integer
      last_sale_price:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerPrice'
      marketplaces:
        items:
          type: string
        type: array
      name:
        type: string
      owners:
        type: integer
      price_change_1d:
        type: string
      price_change_7d:
        type: string
      price_change_30d:
        type: string
      tickers:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerTickers'
      total_volume:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerPrice'
    type: object
  github_com_defipod_mochi_pkg_response.IndexerNFTCollectionTickersResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerNFTCollectionTickersData'
    type: object
  github_com_defipod_mochi_pkg_response.IndexerNFTTokenAttribute:
    properties:
      collection_address:
        type: string
      count:
        type: integer
      frequency:
        type: string
      rarity:
        type: string
      token_id:
        type: string
      trait_type:
        type: string
      value:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.IndexerNFTTokenDetailData:
    properties:
      amount:
        type: string
      attributes:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerNFTTokenAttribute'
        type: array
      collection_address:
        type: string
      description:
        type: string
      image:
        type: string
      image_cdn:
        type: string
      image_content_type:
        type: string
      marketplace:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NftListingMarketplace'
        type: array
      metadata_id:
        type: string
      name:
        type: string
      owner:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerNftTokenOwner'
      rarity:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerNFTTokenRarity'
      rarity_rank:
        type: integer
      rarity_score:
        type: string
      rarity_tier:
        type: string
      thumbnail_cdn:
        type: string
      token_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.IndexerNFTTokenRarity:
    properties:
      rank:
        type: integer
      rarity:
        type: string
      score:
        type: string
      total:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.IndexerNFTTokenTickersData:
    properties:
      collection_address:
        type: string
      description:
        type: string
      floor_price:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerPrice'
      image:
        type: string
      image_cdn:
        type: string
      last_sale_price:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerPrice'
      name:
        type: string
      price_change_1d:
        type: string
      price_change_7d:
        type: string
      price_change_30d:
        type: string
      rarity_rank:
        type: integer
      rarity_score:
        type: string
      rarity_tier:
        type: string
      tickers:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerTickers'
      token_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.IndexerNftTokenOwner:
    properties:
      collection_address:
        type: string
      owner_address:
        type: string
      token_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.IndexerPrice:
    properties:
      amount:
        type: string
      token:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerToken'
    type: object
  github_com_defipod_mochi_pkg_response.IndexerTickers:
    properties:
      prices:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerPrice'
        type: array
      times:
        items:
          type: string
        type: array
      timestamps:
        items:
          type: integer
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.IndexerToken:
    properties:
      address:
        type: string
      decimals:
        type: integer
      is_native:
        type: boolean
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.InvitesAggregationResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.UserInvitesAggregation'
    type: object
  github_com_defipod_mochi_pkg_response.LinkUserTelegramWithDiscordResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.LinkUserTelegramWithDiscordResponseData'
    type: object
  github_com_defipod_mochi_pkg_response.LinkUserTelegramWithDiscordResponseData:
    properties:
      discord_id:
        type: string
      discord_username:
        type: string
      telegram_username:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.ListAllCustomTokenResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Token'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.ListAllNFTCollectionsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.NFTCollection'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.ListConfigNotifyResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ConfigNotifyResponse'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.ListGuildGroupNFTRolesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ListGuildNFTRoleConfigsResponse'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.ListGuildNFTRoleConfigsResponse:
    properties:
      color:
        type: integer
      group_name:
        type: string
      guild_id:
        type: string
      id:
        type: string
      nft_collection_configs:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTCollectionConfig'
        type: array
      number_of_tokens:
        type: integer
      role_id:
        type: string
      role_name:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.ListMyGuildsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.DiscordGuildResponse'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.ListRoleReactionResponse:
    properties:
      configs:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.RoleReactionByMessage'
        type: array
      guild_id:
        type: string
      success:
        type: boolean
    type: object
  github_com_defipod_mochi_pkg_response.LogoutResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.MarketData:
    properties:
      current_price:
        additionalProperties:
          type: number
        type: object
      market_cap:
        additionalProperties:
          type: number
        type: object
      price_change_percentage_1h_in_currency:
        additionalProperties:
          type: number
        type: object
      price_change_percentage_7d_in_currency:
        additionalProperties:
          type: number
        type: object
      price_change_percentage_24h_in_currency:
        additionalProperties:
          type: number
        type: object
    type: object
  github_com_defipod_mochi_pkg_response.Metric:
    properties:
      nft_collections:
        type: integer
      server_active_users:
        type: integer
      server_command_usage:
        type: integer
      server_token:
        items:
          type: string
        type: array
      server_token_supported:
        type: integer
      server_verified_wallets:
        type: integer
      total_active_users:
        type: integer
      total_command_usage:
        type: integer
      total_servers:
        type: integer
      total_token:
        items:
          type: string
        type: array
      total_token_supported:
        type: integer
      total_verified_wallets:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.MonikerConfigData:
    properties:
      moniker:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.MonikerConfig'
      value:
        type: number
    type: object
  github_com_defipod_mochi_pkg_response.MonikerConfigResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.MonikerConfigData'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.NFTChainCollectionCount:
    properties:
      chain:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.Chain'
      count:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.NFTCollectionConfig:
    properties:
      address:
        type: string
      author:
        type: string
      chain_id:
        type: string
      chain_name:
        type: string
      collection_id:
        type: string
      created_at:
        type: string
      erc_format:
        type: string
      explorer_url:
        type: string
      id:
        type: string
      image:
        type: string
      is_verified:
        type: boolean
      name:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.NFTCollectionCount:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTChainCollectionCount'
        type: array
      total:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.NFTCollectionsData:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.NFTCollection'
        type: array
      metadata:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_util.Pagination'
    type: object
  github_com_defipod_mochi_pkg_response.NFTCollectionsResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTCollectionsData'
    type: object
  github_com_defipod_mochi_pkg_response.NFTNewListed:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.NewListedNFTCollection'
        type: array
      metadata:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_util.Pagination'
    type: object
  github_com_defipod_mochi_pkg_response.NFTNewListedResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTNewListed'
    type: object
  github_com_defipod_mochi_pkg_response.NFTSalesTrackerResponse:
    properties:
      channel_id:
        type: string
      contract_address:
        type: string
      guild_id:
        type: string
      platform:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.NFTTradingVolume:
    properties:
      collection_address:
        type: string
      collection_chain_id:
        type: number
      collection_name:
        type: string
      collection_symbol:
        type: string
      token:
        type: string
      trading_volume:
        type: number
    type: object
  github_com_defipod_mochi_pkg_response.NFTTradingVolumeResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTTradingVolume'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.NewGuildConfigWalletVerificationMessageResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigWalletVerificationMessage'
      status:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.NewGuildGroupNFTRoleResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ConfigGroupNFTRoleResponse'
      message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.NftListingMarketplace:
    properties:
      contract_address:
        type: string
      floor_price:
        type: string
      item_url:
        type: string
      listing_price:
        type: string
      listing_status:
        type: string
      payment_token:
        type: string
      payment_token_decimals:
        type: string
      platform_id:
        type: integer
      platform_name:
        type: string
      token_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.NftMetadataAttrIcon:
    properties:
      discord_icon:
        type: string
      id:
        type: integer
      trait_type:
        type: string
      unicode_icon:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.NftMetadataAttrIconResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NftMetadataAttrIcon'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.NftSales:
    properties:
      buyer:
        type: string
      nft_collection_address:
        type: string
      nft_name:
        type: string
      nft_price:
        type: number
      nft_price_token:
        type: string
      nft_status:
        type: string
      platform:
        type: string
      seller:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.NftSalesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NftSales'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.NftWatchlistSuggest:
    properties:
      default_symbol:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CollectionSuggestions'
      suggestions:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CollectionSuggestions'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.NftWatchlistSuggestResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NftWatchlistSuggest'
    type: object
  github_com_defipod_mochi_pkg_response.OffchainTipBotTransferToken:
    properties:
      amount:
        type: number
      amount_in_usd:
        type: number
      recipient_id:
        type: string
      sender_id:
        type: string
      symbol:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.OffchainTipBotTransferTokenResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.OffchainTipBotTransferToken'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.OffchainTipBotWithdraw:
    properties:
      amount:
        type: number
      symbol:
        type: string
      to_address:
        type: string
      transaction_fee:
        type: number
      tx_hash:
        type: string
      tx_url:
        type: string
      user_discord_id:
        type: string
      withdraw_amount:
        $ref: '#/definitions/big.Float'
    type: object
  github_com_defipod_mochi_pkg_response.OffchainTipBotWithdrawResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.OffchainTipBotWithdraw'
    type: object
  github_com_defipod_mochi_pkg_response.PaginationResponse:
    properties:
      page:
        description: page index
        type: integer
      size:
        description: page size
        type: integer
      total:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.ResponseDataMessage:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
    type: object
  github_com_defipod_mochi_pkg_response.ResponseMessage:
    properties:
      message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.ResponseStatus:
    properties:
      status:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.ResponseSucess:
    properties:
      success:
        type: boolean
    type: object
  github_com_defipod_mochi_pkg_response.Role:
    properties:
      id:
        type: string
      reaction:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.RoleReactionByMessage:
    properties:
      channel_id:
        type: string
      message_id:
        type: string
      roles:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.Role'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.RoleReactionConfigResponse:
    properties:
      channel_id:
        type: string
      guild_id:
        type: string
      message_id:
        type: string
      roles:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.Role'
        type: array
      success:
        type: boolean
    type: object
  github_com_defipod_mochi_pkg_response.RoleReactionResponse:
    properties:
      channel_id:
        type: string
      guild_id:
        type: string
      message_id:
        type: string
      role:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_response.Role'
    type: object
  github_com_defipod_mochi_pkg_response.SearchCoinResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.CoingeckoSupportedTokens'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.SparkLineIn7d:
    properties:
      price:
        items:
          type: number
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.TickerData:
    properties:
      base:
        type: string
      coin_id:
        type: string
      last:
        type: number
      target:
        type: string
      target_coin_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.ToggleActivityConfigResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigActivity'
      message:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.TransactionsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.OffchainTipBotTransferHistory'
        type: array
    type: object
  github_com_defipod_mochi_pkg_response.TwitterHashtag:
    properties:
      channel_id:
        type: string
      created_at:
        type: string
      from_twitter:
        items:
          type: string
        type: array
      guild_id:
        type: string
      hashtag:
        items:
          type: string
        type: array
      rule_id:
        type: string
      twitter_username:
        items:
          type: string
        type: array
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.UpdateUserFeedbackResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_defipod_mochi_pkg_model.UserFeedback'
    type: object
  github_com_defipod_mochi_pkg_response.User:
    properties:
      guild_users:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGuildUserResponse'
        type: array
      id:
        type: string
      in_discord_wallet_address:
        type: string
      in_discord_wallet_number:
        type: integer
      nr_of_join:
        type: integer
      username:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.UserDeviceResponse:
    properties:
      device_id:
        type: string
      ios_noti_token:
        type: string
    type: object
  github_com_defipod_mochi_pkg_response.UserFeedbackResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.UserFeedback'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.UserInvitesAggregation:
    properties:
      fake:
        type: integer
      inviter_id:
        type: string
      left:
        type: integer
      regular:
        type: integer
    type: object
  github_com_defipod_mochi_pkg_response.UserTransactionResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.OffchainTipBotTransferHistory'
        type: array
    type: object
  github_com_defipod_mochi_pkg_util.Pagination:
    properties:
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  uuid.NullUUID:
    properties:
      uuid:
        type: string
      valid:
        description: Valid is true if UUID is not NULL
        type: boolean
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a swagger for mochi api.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Login request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_entities.LoginResponse'
      summary: Login
      tags:
      - Auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.LogoutResponse'
      summary: Logout
      tags:
      - Auth
  /cache/upvote:
    post:
      consumes:
      - application/json
      description: Set or overwrite an upvote message cache
      parameters:
      - description: Set upvote message cache request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.SetUpvoteMessageCacheRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Set or overwrite an upvote message cache
      tags:
      - Cache
  /community/feedback:
    get:
      consumes:
      - application/json
      description: Get users' feedbacks
      parameters:
      - description: filter by
        in: query
        name: filter
        type: string
      - description: filtered value
        in: query
        name: value
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.UserFeedbackResponse'
      summary: Get users' feedbacks
      tags:
      - Community
    post:
      consumes:
      - application/json
      description: Post users' feedbacks
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UserFeedbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Post users' feedbacks
      tags:
      - Community
    put:
      consumes:
      - application/json
      description: Update users' feedbacks
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpdateUserFeedbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.UpdateUserFeedbackResponse'
      summary: Update users' feedbacks
      tags:
      - Community
  /community/invites/:
    get:
      consumes:
      - application/json
      description: Get invites
      parameters:
      - description: Member ID
        in: query
        name: member_id
        required: true
        type: string
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetInvitesResponse'
      summary: Get invites
      tags:
      - Community
  /community/invites/aggregation:
    get:
      consumes:
      - application/json
      description: Invites Aggregation
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      - description: Inviter ID
        in: query
        name: inviter
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.InvitesAggregationResponse'
      summary: Invites Aggregation
      tags:
      - Community
  /community/invites/config:
    get:
      consumes:
      - application/json
      description: Get invites tracker config
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetInviteTrackerConfigResponse'
      summary: Get invites tracker config
      tags:
      - Community
    post:
      consumes:
      - application/json
      description: Configure invites
      parameters:
      - description: Configure Invites request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.ConfigureInviteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ConfigureInvitesResponse'
      summary: Configure invites
      tags:
      - Community
  /community/invites/leaderboard/{id}:
    get:
      consumes:
      - application/json
      description: Get invites leaderboard
      parameters:
      - description: Guild ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetInvitesLeaderboardResponse'
      summary: Get invites leaderboard
      tags:
      - Community
  /community/quests:
    get:
      consumes:
      - application/json
      description: Get user quest list
      parameters:
      - in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetUserQuestListResponse'
      summary: Get user quest list
      tags:
      - Community
  /community/quests/claim:
    post:
      consumes:
      - application/json
      description: Claim user quests' rewards
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.ClaimQuestsRewardsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ClaimQuestsRewardsResponse'
      summary: Claim user quests' rewards
      tags:
      - Community
  /community/quests/progress:
    post:
      consumes:
      - application/json
      description: Update user's quest progress
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpdateQuestProgressRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Update user's quest progress
      tags:
      - Community
  /community/repost-reactions:
    delete:
      consumes:
      - application/json
      description: Remove Respost reaction config
      parameters:
      - description: Remove repost reaction config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.ConfigRepostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Remove Respost reaction config
      tags:
      - Community
    post:
      consumes:
      - application/json
      description: Config Respost reaction
      parameters:
      - description: Config repost reaction request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.ConfigRepostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Config Respost reaction
      tags:
      - Community
  /community/repost-reactions/{guild_id}:
    get:
      consumes:
      - application/json
      description: Get Respost reaction configs
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetRepostReactionConfigsResponse'
      summary: Get Respost reaction configs
      tags:
      - Community
  /community/repost-reactions/blacklist-channel:
    delete:
      consumes:
      - application/json
      description: Delete blacklist channel repost config
      parameters:
      - description: Delete blacklist channel repost config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.BalcklistChannelRepostConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Delete blacklist channel repost config
      tags:
      - Community
    get:
      consumes:
      - application/json
      description: Get guild blacklist channel repost config
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Get guild blacklist channel repost config
      tags:
      - Community
    post:
      consumes:
      - application/json
      description: Create blacklist channel repost config
      parameters:
      - description: Upsert join-leave channel config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.BalcklistChannelRepostConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Create blacklist channel repost config
      tags:
      - Community
  /community/repost-reactions/conversation:
    post:
      consumes:
      - application/json
      description: Config Respost reaction with start stop
      parameters:
      - description: Config repost reaction start stop request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.ConfigRepostReactionStartStop'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Config Respost reaction with start stop
      tags:
      - Community
  /community/repost-reactions/message-repost:
    put:
      consumes:
      - application/json
      description: edit message repost
      parameters:
      - description: edit message repost request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.EditMessageRepostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: edit message repost
      tags:
      - Community
  /community/twitter:
    post:
      consumes:
      - application/json
      description: Create twitter post
      parameters:
      - description: Create twitter post request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.TwitterPost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Create twitter post
      tags:
      - Community
  /community/twitter/top:
    get:
      consumes:
      - application/json
      description: Create twitter post
      parameters:
      - in: query
        name: guild_id
        required: true
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetTwitterLeaderboardResponse'
      summary: Create twitter post
      tags:
      - Community
  /config-channels/gm:
    get:
      consumes:
      - application/json
      description: Get GM config
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGmConfigResponse'
      summary: Get GM config
      tags:
      - ConfigChannel
    post:
      consumes:
      - application/json
      description: Update or insert GM config
      parameters:
      - description: Upsert GM Config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertGmConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Update or insert GM config
      tags:
      - ConfigChannel
  /config-channels/join-leave:
    delete:
      consumes:
      - application/json
      description: Delete join-leave channel config
      parameters:
      - description: Delete join-leave channel config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.DeleteJoinLeaveChannelConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Delete join-leave channel config
      tags:
      - ConfigChannel
    get:
      consumes:
      - application/json
      description: Get join-leave channel config
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetVoteChannelConfigResponse'
      summary: Get join-leave channel config
      tags:
      - ConfigChannel
    post:
      consumes:
      - application/json
      description: Update or insert join-leave channel config
      parameters:
      - description: Upsert join-leave channel config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertJoinLeaveChannelConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetVoteChannelConfigResponse'
      summary: Update or insert join-leave channel config
      tags:
      - ConfigChannel
  /config-channels/tip-notify:
    get:
      consumes:
      - application/json
      description: API get list config notify channel for token
      parameters:
      - description: guild id
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ListConfigNotifyResponse'
      summary: OffChain Tip Bot - Config notify
      tags:
      - ConfigChannel
    post:
      consumes:
      - application/json
      description: API config notify channel for token
      parameters:
      - description: config notify request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateTipConfigNotify'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: OffChain Tip Bot - Config notify
      tags:
      - ConfigChannel
  /config-channels/tip-notify/{id}:
    delete:
      consumes:
      - application/json
      description: API delete config notify channel for token
      parameters:
      - description: id of config notify
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: OffChain Tip Bot - Config notify
      tags:
      - ConfigChannel
  /config-channels/upvote:
    delete:
      consumes:
      - application/json
      description: Delete vote channel config
      parameters:
      - description: Delete vote channel config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.DeleteVoteChannelConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Delete vote channel config
      tags:
      - ConfigChannel
    get:
      consumes:
      - application/json
      description: Get vote channel config
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetVoteChannelConfigResponse'
      summary: Get vote channel config
      tags:
      - ConfigChannel
    post:
      consumes:
      - application/json
      description: Update or insert vote channel config
      parameters:
      - description: Upsert vote channel config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertVoteChannelConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetVoteChannelConfigResponse'
      summary: Update or insert vote channel config
      tags:
      - ConfigChannel
  /config-channels/welcome:
    delete:
      consumes:
      - application/json
      description: Delete welcome channel config
      parameters:
      - description: Delete welcome channel config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.DeleteWelcomeConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Delete welcome channel config
      tags:
      - ConfigChannel
    get:
      consumes:
      - application/json
      description: Get welcome channel config
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetWelcomeChannelConfigResponse'
      summary: Get welcome channel config
      tags:
      - ConfigChannel
    post:
      consumes:
      - application/json
      description: Update or insert welcome channel config
      parameters:
      - description: Upsert welcome channel config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertWelcomeConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetWelcomeChannelConfigResponse'
      summary: Update or insert welcome channel config
      tags:
      - ConfigChannel
  /config-community/telegram:
    get:
      consumes:
      - application/json
      description: Get telegram account linked with discord ID
      parameters:
      - description: request
        in: query
        name: telegram_username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetLinkedTelegramResponse'
      summary: Get telegram account linked with discord ID
      tags:
      - ConfigCommunity
    post:
      consumes:
      - application/json
      description: Link user's telegram with discord account
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.LinkUserTelegramWithDiscordRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.LinkUserTelegramWithDiscordResponse'
      summary: Link user's telegram with discord account
      tags:
      - ConfigCommunity
  /config-community/twitter:
    post:
      consumes:
      - application/json
      description: Create twitter config
      parameters:
      - description: Create Twitter config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_model.GuildConfigTwitterFeed'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Create twitter config
      tags:
      - ConfigCommunity
  /config-community/twitter/blacklist:
    delete:
      consumes:
      - application/json
      description: Delete an user from twitter watching blacklist
      parameters:
      - in: query
        name: guild_id
        required: true
        type: string
      - in: query
        name: twitter_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Delete an user from twitter watching blacklist
      tags:
      - ConfigCommunity
    get:
      consumes:
      - application/json
      description: get twitter blacklist
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetTwitterBlackListResponse'
      summary: Get twitter blacklist
      tags:
      - ConfigCommunity
    post:
      consumes:
      - application/json
      description: Add an user to twitter watching blacklist
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.AddToTwitterBlackListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Add an user to twitter watching blacklist
      tags:
      - ConfigCommunity
  /config-community/twitter/hashtag:
    get:
      consumes:
      - application/json
      description: get all twitter hashtag config
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetAllTwitterHashtagConfigResponse'
      summary: Get all twitter hashtag config
      tags:
      - ConfigCommunity
    post:
      consumes:
      - application/json
      description: Create twitter hashtag config
      parameters:
      - description: Create twitter hashtag config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.TwitterHashtag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Create twitter hashtag config
      tags:
      - ConfigCommunity
  /config-community/twitter/hashtag/{guild_id}:
    delete:
      consumes:
      - application/json
      description: Delete twitter hashtag config
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Delete twitter hashtag config
      tags:
      - ConfigCommunity
    get:
      consumes:
      - application/json
      description: get twitter hashtag config
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetTwitterHashtagConfigResponse'
      summary: Get twitter hashtag config
      tags:
      - ConfigCommunity
  /config-defi/custom-tokens:
    post:
      consumes:
      - application/json
      description: Guild custom token config
      parameters:
      - description: Custom guild custom token config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertCustomTokenConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Guild custom token config
      tags:
      - ConfigDefi
  /config-defi/default-currency:
    delete:
      consumes:
      - application/json
      description: Delete default currency
      parameters:
      - description: Delete default currency config
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.GuildIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Delete default currency
      tags:
      - ConfigDefi
    get:
      consumes:
      - application/json
      description: Get default currency by guild id
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GuildConfigDefaultCurrencyResponse'
      summary: Get default currency by guild id
      tags:
      - ConfigDefi
    post:
      consumes:
      - application/json
      description: Upsert default currency
      parameters:
      - description: Upsert default currency config
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertGuildDefaultCurrencyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Upsert default currency
      tags:
      - ConfigDefi
  /config-defi/default-symbol:
    post:
      consumes:
      - application/json
      description: Create default collection symbol
      parameters:
      - description: Config Default Collection Symbol request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.ConfigDefaultCollection'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Create default collection symbol
      tags:
      - ConfigDefi
  /config-defi/default-ticker:
    get:
      consumes:
      - application/json
      description: Get guild default ticker
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      - description: Guild ticker query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGuildDefaultTickerResponse'
      summary: Get guild default ticker
      tags:
      - ConfigDefi
    post:
      consumes:
      - application/json
      description: Set guild default ticker
      parameters:
      - description: Set guild default ticker request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.GuildConfigDefaultTickerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Set guild default ticker
      tags:
      - ConfigDefi
  /config-defi/monikers:
    delete:
      consumes:
      - application/json
      description: Delete moniker config
      parameters:
      - description: Delete moinker config
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.DeleteMonikerConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Delete moniker config
      tags:
      - ConfigDefi
    post:
      consumes:
      - application/json
      description: Upsert moniker config
      parameters:
      - description: Upsert moniker config
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertMonikerConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Upsert moniker config
      tags:
      - ConfigDefi
  /config-defi/monikers/{guild_id}:
    get:
      consumes:
      - application/json
      description: Get moniker configs
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.MonikerConfigResponse'
      summary: Get moniker configs
      tags:
      - ConfigDefi
  /config-defi/monikers/default:
    get:
      consumes:
      - application/json
      description: Get default moniker
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.MonikerConfigResponse'
      summary: Get default moniker
      tags:
      - ConfigDefi
  /config-defi/tokens:
    get:
      consumes:
      - application/json
      description: Get guild tokens
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGuildTokensResponse'
      summary: Get guild tokens
      tags:
      - ConfigDefi
    post:
      consumes:
      - application/json
      description: Update or insert guild token config
      parameters:
      - description: Upsert Guild Token Config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertGuildTokenConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Update or insert guild token config
      tags:
      - ConfigDefi
  /config-defi/tokens/default:
    delete:
      consumes:
      - application/json
      description: Remove Default token
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Remove Default token
      tags:
      - ConfigDefi
    get:
      consumes:
      - application/json
      description: Get Default token
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetDefaultTokenResponse'
      summary: Get Default token
      tags:
      - ConfigDefi
    post:
      consumes:
      - application/json
      description: Config Default token
      parameters:
      - description: Config default token request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.ConfigDefaultTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Config Default token
      tags:
      - ConfigDefi
  /config-roles/default-roles:
    delete:
      consumes:
      - application/json
      description: Delete default role
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseSucess'
      summary: Delete default role
      tags:
      - ConfigRole
    get:
      consumes:
      - application/json
      description: Get default roles by guild id
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.DefaultRoleResponse'
      summary: Get default roles by guild id
      tags:
      - ConfigRole
    post:
      consumes:
      - application/json
      description: Create default role
      parameters:
      - description: Create default role request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateDefaultRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.DefaultRoleResponse'
      summary: Create default role
      tags:
      - ConfigRole
  /config-roles/level-roles:
    post:
      consumes:
      - application/json
      description: Config level role
      parameters:
      - description: Config level role request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.ConfigLevelRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Config Level role
      tags:
      - ConfigRole
  /config-roles/level-roles/{guild_id}:
    delete:
      consumes:
      - application/json
      description: Remove level role config
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Remove level role config
      tags:
      - ConfigRole
    get:
      consumes:
      - application/json
      description: Get level role config
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetLevelRoleConfigsResponse'
      summary: Get level role config
      tags:
      - ConfigRole
  /config-roles/nft-roles:
    delete:
      consumes:
      - application/json
      description: Remove guild nft role
      parameters:
      - description: 32951e68-9959-4e1d-88ca-22b442e19efe|45d06941-468b-4e5e-8b8f-d20c77c87805
        in: query
        name: config_ids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Remove guild nft role
      tags:
      - ConfigRole
    get:
      consumes:
      - application/json
      description: List guild nft roles
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ListGuildGroupNFTRolesResponse'
      summary: List guild nft roles
      tags:
      - ConfigRole
    post:
      consumes:
      - application/json
      description: New guild nft role
      parameters:
      - description: New NFT role request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.ConfigGroupNFTRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NewGuildGroupNFTRoleResponse'
      summary: New guild nft role
      tags:
      - ConfigRole
  /config-roles/nft-roles/group:
    delete:
      consumes:
      - application/json
      description: Remove guild group nft role
      parameters:
      - description: Group config ID
        in: query
        name: group_config_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Remove guild group nft role
      tags:
      - ConfigRole
  /config-roles/reaction-roles:
    delete:
      consumes:
      - application/json
      description: Remove reaction role config
      parameters:
      - description: Remove reaction role config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.RoleReactionUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseSucess'
      summary: Remove reaction role config
      tags:
      - ConfigRole
    get:
      consumes:
      - application/json
      description: Get all role reaction configs
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.DataListRoleReactionResponse'
      summary: Get all role reaction configs
      tags:
      - ConfigRole
    post:
      consumes:
      - application/json
      description: Add reaction role config
      parameters:
      - description: Add reaction role config request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.RoleReactionUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.RoleReactionConfigResponse'
      summary: Add reaction role config
      tags:
      - ConfigRole
  /config-roles/reaction-roles/filter:
    post:
      consumes:
      - application/json
      description: Filter config by reaction
      parameters:
      - description: Filter config by reaction request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.RoleReactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.DataFilterConfigByReaction'
      summary: Filter config by reaction
      tags:
      - ConfigRole
  /configs/nft-roles/group:
    delete:
      consumes:
      - application/json
      description: Remove guild group nft role
      parameters:
      - description: Group config ID
        in: query
        name: group_config_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Remove guild group nft role
      tags:
      - Config
  /configs/sales-tracker:
    get:
      consumes:
      - application/json
      description: Get sales tracker config
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetSalesTrackerConfigResponse'
      summary: Get sales tracker config
      tags:
      - Config
  /configs/twitter:
    get:
      consumes:
      - application/json
      description: Get all twitter config
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetAllTwitterConfigResponse'
      summary: Get all twitter config
      tags:
      - Config
  /configs/upvote-tiers:
    get:
      consumes:
      - application/json
      description: Get all upvote tiers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetUpvoteTiersConfig'
      summary: Get all upvote tiers
      tags:
      - Config
  /configs/whitelist-prune:
    delete:
      consumes:
      - application/json
      description: Delete prune exclude config
      parameters:
      - description: Upsert prune exlude request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertGuildPruneExcludeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Delete prune exclude config
      tags:
      - Config
    get:
      consumes:
      - application/json
      description: Get prune exclusion config
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGuildPruneExcludeResponse'
      summary: Get prune exclusion config
      tags:
      - Config
    post:
      consumes:
      - application/json
      description: Upsert prune exclude config
      parameters:
      - description: Upsert prune exlude request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertGuildPruneExcludeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Upsert prune exclude config
      tags:
      - Config
  /data/configs/activities/{activity}:
    post:
      consumes:
      - application/json
      description: Toggle activity config
      parameters:
      - description: Activity name
        in: path
        name: activity
        required: true
        type: string
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ToggleActivityConfigResponse'
      summary: Toggle activity config
      tags:
      - Data
  /data/metrics:
    get:
      consumes:
      - application/json
      description: API to get stats of collections, users, servers, ...
      parameters:
      - description: total_servers | active_users | nft_collections | verified_wallets
          | supported_tokens | command_usage
        in: query
        name: q
        required: true
        type: string
      - description: case active_users
        in: query
        name: guild_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.DataMetric'
      summary: Metric
      tags:
      - Data
  /defi/chains:
    get:
      consumes:
      - application/json
      description: List All Chain
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetListAllChainsResponse'
      summary: List All Chain
      tags:
      - Defi
  /defi/coins:
    get:
      consumes:
      - application/json
      description: Search coin
      parameters:
      - description: coin query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.SearchCoinResponse'
      summary: Search coin
      tags:
      - Defi
  /defi/coins/{id}:
    get:
      consumes:
      - application/json
      description: Get coin
      parameters:
      - description: Coin ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetCoinResponseWrapper'
      summary: Get coin
      tags:
      - Defi
  /defi/coins/compare:
    get:
      consumes:
      - application/json
      description: Compare token
      parameters:
      - description: base token
        in: query
        name: base
        required: true
        type: string
      - description: target token
        in: query
        name: target
        required: true
        type: string
      - description: compare interval
        in: query
        name: interval
        required: true
        type: string
      - description: Guild ID
        in: query
        name: guild_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CompareTokenResponse'
      summary: Compare token
      tags:
      - Defi
  /defi/market-chart:
    get:
      consumes:
      - application/json
      description: Get historical market chart
      parameters:
      - description: Coin ID
        in: path
        name: coin_id
        required: true
        type: string
      - description: Day
        in: path
        name: day
        required: true
        type: integer
      - default: usd
        description: Currency
        in: path
        name: currency
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetHistoricalMarketChartResponse'
      summary: Get historical market chart
      tags:
      - Defi
  /defi/tokens:
    get:
      consumes:
      - application/json
      description: Get supported tokens
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetSupportedTokensResponse'
      summary: Get supported tokens
      tags:
      - Defi
  /defi/watchlist:
    delete:
      consumes:
      - application/json
      description: Remove from user's watchlist
      parameters:
      - in: query
        name: symbol
        required: true
        type: string
      - in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Remove from user's watchlist
      tags:
      - Defi
    get:
      consumes:
      - application/json
      description: Get user's watchlist
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      - in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetWatchlistResponse'
      summary: Get user's watchlist
      tags:
      - Defi
    post:
      consumes:
      - application/json
      description: Add to user's watchlist
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.AddToWatchlistRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.AddToWatchlistResponse'
      summary: Add to user's watchlist
      tags:
      - Defi
  /fiat/historical-exchange-rates:
    get:
      consumes:
      - application/json
      description: Remove from user's watchlist
      parameters:
      - in: query
        name: base
        required: true
        type: string
      - in: query
        maximum: 365
        minimum: 7
        name: days
        type: integer
      - in: query
        name: target
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetFiatHistoricalExchangeRatesResponse'
      summary: Get historical market chart
      tags:
      - Fiat
  /guilds:
    get:
      consumes:
      - application/json
      description: Get guilds
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGuildsResponse'
      summary: Get guilds
      tags:
      - Guild
    post:
      consumes:
      - application/json
      description: Create guild
      parameters:
      - description: Create Guild request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateGuildRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateGuildRequest'
      summary: Create guild
      tags:
      - Guild
  /guilds/{guild_id}:
    get:
      consumes:
      - application/json
      description: Get guild
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGuildResponse'
      summary: Get guild
      tags:
      - Guild
    put:
      consumes:
      - application/json
      description: Update guild
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      - description: Update guild request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpdateGuildRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Update guild
      tags:
      - Guild
  /guilds/{guild_id}/channels:
    post:
      consumes:
      - application/json
      description: Create guild channel
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      - description: Guild ID
        in: query
        name: count_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Create guild channel
      tags:
      - Guild
  /guilds/{guild_id}/custom-tokens:
    get:
      consumes:
      - application/json
      description: List all guild custom token
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ListAllCustomTokenResponse'
      summary: List all guild custom token
      tags:
      - Guild
  /guilds/{guild_id}/stats:
    get:
      consumes:
      - application/json
      description: Get guild stats
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_model.DiscordGuildStat'
      summary: Get guild stats
      tags:
      - Guild
  /guilds/user-managed:
    get:
      consumes:
      - application/json
      description: Get my guild list
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ListMyGuildsResponse'
      summary: Get my guilds list
      tags:
      - Guild
  /nfts:
    get:
      consumes:
      - application/json
      description: List all nft collections
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ListAllNFTCollectionsResponse'
      summary: List all nft collections
      tags:
      - NFT
  /nfts/{symbol}/{id}:
    get:
      consumes:
      - application/json
      description: Get NFT Detail
      parameters:
      - description: Symbol
        in: path
        name: symbol
        required: true
        type: string
      - description: Token ID
        in: path
        name: id
        required: true
        type: string
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      - description: Query by using Collection Address
        in: query
        name: query_address
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerGetNFTTokenDetailResponseWithSuggestions'
      summary: Get NFT Detail
      tags:
      - NFT
  /nfts/{symbol}/{id}/activity:
    get:
      consumes:
      - application/json
      description: Get NFT Activity
      parameters:
      - description: Collection address | Symbol
        in: path
        name: symbol
        required: true
        type: string
      - description: Token ID
        in: path
        name: id
        required: true
        type: string
      - description: Page
        in: query
        name: page
        type: string
      - description: Size
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetNFTActivityResponse'
      summary: Get NFT Activity
      tags:
      - NFT
  /nfts/collections:
    get:
      consumes:
      - application/json
      description: Get NFT trading volume
      parameters:
      - default: 0
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTCollectionsResponse'
      summary: Get NFT trading volume
      tags:
      - NFT
    post:
      consumes:
      - application/json
      description: Create NFT Collection
      parameters:
      - description: Create nft collection request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateNFTCollectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CreateNFTCollectionResponse'
      summary: Create NFT Collection
      tags:
      - NFT
  /nfts/collections/{address}:
    patch:
      consumes:
      - application/json
      description: Update NFT Collection
      parameters:
      - description: Collection Address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Update NFT Collection
      tags:
      - NFT
  /nfts/collections/{symbol}:
    get:
      consumes:
      - application/json
      description: Get NFT Tokens
      parameters:
      - description: Symbol
        in: path
        name: symbol
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerGetNFTTokensResponse'
      summary: Get NFT Tokens
      tags:
      - NFT
  /nfts/collections/{symbol}/detail:
    get:
      consumes:
      - application/json
      description: Get detail nft collection
      parameters:
      - description: Symbol
        in: path
        name: symbol
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetDetailNftCollectionResponse'
      summary: Get detail nft collection
      tags:
      - NFT
  /nfts/collections/address/{address}:
    get:
      consumes:
      - application/json
      description: Get NFT collection by address chain
      parameters:
      - description: Collection Address
        in: path
        name: address
        required: true
        type: string
      - description: Chain
        in: query
        name: chain
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetNFTCollectionByAddressChainResponse'
      summary: Get NFT collection by address chain
      tags:
      - NFT
  /nfts/collections/stats:
    get:
      consumes:
      - application/json
      description: Get collection count
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetCollectionCountResponse'
      summary: Get collection count
      tags:
      - NFT
  /nfts/collections/suggestion:
    get:
      consumes:
      - application/json
      description: Get guild suggest nft collections
      parameters:
      - description: symbol collection query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetSuggestionNFTCollectionsResponse'
      summary: Get guild suggest nft collections
      tags:
      - NFT
  /nfts/collections/tickers:
    get:
      consumes:
      - application/json
      description: Get NFT collection tickers
      parameters:
      - description: CollectionAddress
        in: query
        name: collection_address
        required: true
        type: string
      - description: from
        in: query
        name: from
        required: true
        type: string
      - description: to
        in: query
        name: to
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerNFTCollectionTickersResponse'
      summary: Get NFT collection tickers
      tags:
      - NFT
  /nfts/default-nft-ticker:
    get:
      consumes:
      - application/json
      description: Get guild default nft ticker
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      - description: Guild ticker query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetGuildDefaultNftTickerResponse'
      summary: Get guild default nft ticker
      tags:
      - NFT
    post:
      consumes:
      - application/json
      description: Set guild default nft ticker
      parameters:
      - description: Set guild default ticker request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.GuildConfigDefaultNftTickerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseDataMessage'
      summary: Set guild default nft ticker
      tags:
      - NFT
  /nfts/icons:
    get:
      consumes:
      - application/json
      description: Get NFT metadata attribute icon
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NftMetadataAttrIconResponse'
      summary: Get NFT metadata attribute icon
      tags:
      - NFT
  /nfts/new-listed:
    get:
      consumes:
      - application/json
      description: Get new listed nft collection
      parameters:
      - default: 0
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Size
        in: query
        name: size
        type: integer
      - default: 7
        description: Interval
        in: query
        name: interval
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTNewListedResponse'
      summary: Get new listed nft collection
      tags:
      - NFT
  /nfts/sales:
    get:
      consumes:
      - application/json
      description: Get NFT sales
      parameters:
      - description: Collection address
        in: query
        name: collection-address
        required: true
        type: string
      - description: Platform
        in: query
        name: platform
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NftSalesResponse'
      summary: Get NFT sales
      tags:
      - NFT
  /nfts/sales-tracker:
    delete:
      consumes:
      - application/json
      description: Delete NFT sales tracker
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      - description: Contract Address
        in: query
        name: contract_address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Delete NFT sales tracker
      tags:
      - NFT
    get:
      consumes:
      - application/json
      description: Get all nft sales tracker
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetAllNFTSalesTrackerResponse'
      summary: Get all nft sales tracker
      tags:
      - NFT
    post:
      consumes:
      - application/json
      description: Create NFT Sales tracker
      parameters:
      - description: Symbol
        in: path
        name: symbol
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerGetNFTTokensResponse'
      summary: Create NFT Sales tracker
      tags:
      - NFT
  /nfts/supported-chains:
    post:
      consumes:
      - application/json
      description: Get supported chains
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetSupportedChains'
      summary: Get supported chains
      tags:
      - NFT
  /nfts/tickers:
    get:
      consumes:
      - application/json
      description: Get NFT token tickers
      parameters:
      - description: CollectionAddress
        in: query
        name: collection_address
        required: true
        type: string
      - description: Token ID
        in: query
        name: token_id
        required: true
        type: string
      - description: from
        in: query
        name: from
        required: true
        type: string
      - description: to
        in: query
        name: to
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.IndexerGetNFTTokenTickersResponse'
      summary: Get NFT token tickers
      tags:
      - NFT
  /nfts/trades:
    post:
      consumes:
      - application/json
      description: Create Trade Offer
      parameters:
      - description: Create Trade Offer Request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateTradeOfferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CreateTradeOfferResponse'
      summary: Create Trade Offer
      tags:
      - NFT
  /nfts/trades/{id}:
    get:
      consumes:
      - application/json
      description: Get Trade Offer
      parameters:
      - description: Trade Offer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetTradeOfferResponse'
      summary: Get Trade Offer
      tags:
      - NFT
  /nfts/trading-volume:
    get:
      consumes:
      - application/json
      description: Get NFT trading volume
      parameters:
      - description: Symbol
        in: path
        name: symbol
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NFTTradingVolumeResponse'
      summary: Get NFT trading volume
      tags:
      - NFT
  /nfts/watchlist:
    delete:
      consumes:
      - application/json
      description: Remove from user's nft watchlist
      parameters:
      - description: symbol
        in: query
        name: symbol
        required: true
        type: string
      - description: user_id
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Remove from user's nft watchlist
      tags:
      - NFT
    get:
      consumes:
      - application/json
      description: Get user's nft watchlist
      parameters:
      - description: user_id
        in: query
        name: user_id
        required: true
        type: string
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: size
        in: query
        name: size
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetNftWatchlistResponse'
      summary: Get user's nft watchlist
      tags:
      - NFT
    post:
      consumes:
      - application/json
      description: Add to user's nft watchlist
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.AddNftWatchlistRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NftWatchlistSuggestResponse'
      summary: Add to user's nft watchlist
      tags:
      - NFT
  /tip/assign-contract:
    post:
      consumes:
      - application/json
      description: Create an assign contract when user want to deposit a specific
        token to contract
      parameters:
      - description: Create assign contract request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateAssignContract'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetAssignedContract'
      summary: OffChain Tip Bot - Create an assign contract
      tags:
      - Tip
  /tip/balances:
    get:
      consumes:
      - application/json
      description: Get offchain user bals
      parameters:
      - description: user ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetUserBalancesResponse'
      summary: Get offchain user bals
      tags:
      - Tip
  /tip/history:
    get:
      consumes:
      - application/json
      description: Get transactions history by query
      parameters:
      - description: guild ID
        in: query
        name: guild_id
        required: true
        type: string
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TransactionsResponse'
      summary: Get transactions history by query
      tags:
      - Tip
  /tip/tokens:
    get:
      consumes:
      - application/json
      description: Get all offchain tip bot tokens
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.AllTipBotTokensResponse'
      summary: Get all offchain tip bot tokens
      tags:
      - Tip
  /tip/transactions:
    get:
      consumes:
      - application/json
      description: Get transactions by query
      parameters:
      - description: sender ID
        in: query
        name: sender_id
        type: string
      - description: receiver ID
        in: query
        name: receiver_id
        type: string
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.TransactionsResponse'
      summary: Get transactions by query
      tags:
      - Tip
  /tip/transfer:
    post:
      consumes:
      - application/json
      description: API transfer token for tip, airdrop, ...
      parameters:
      - description: Transfer token request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.OffchainTransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.OffchainTipBotTransferTokenResponse'
      summary: OffChain Tip Bot - Transfer token
      tags:
      - Tip
  /tip/withdraw:
    post:
      consumes:
      - application/json
      description: OffChain Tip Bot - Withdraw
      parameters:
      - description: Withdraw token request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.OffchainWithdrawRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.OffchainTipBotWithdrawResponse'
      summary: OffChain Tip Bot - Withdraw
      tags:
      - Tip
  /users:
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: Create user request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Create User
      tags:
      - User
  /users/{id}/transactions:
    get:
      consumes:
      - application/json
      description: Get user transaction
      parameters:
      - description: user discord ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.UserTransactionResponse'
      summary: Get user transaction
      tags:
      - User
  /users/{user_id}:
    get:
      consumes:
      - application/json
      description: Get user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetUserResponse'
      summary: Get user
      tags:
      - User
  /users/gmstreak:
    get:
      consumes:
      - application/json
      description: Get user current GM streak
      parameters:
      - description: Discord ID
        in: query
        name: discord_id
        required: true
        type: string
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetUserCurrentGMStreakResponse'
      summary: Get user current GM streak
      tags:
      - User
  /users/me:
    get:
      consumes:
      - application/json
      description: Get user info
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetMyInfoResponse'
      summary: Get user info
      tags:
      - User
  /users/profiles/:
    get:
      consumes:
      - application/json
      description: Get user profile
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetDataUserProfileResponse'
      summary: Get user profile
      tags:
      - User
  /users/top:
    get:
      consumes:
      - application/json
      description: Get top users
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      - default: 0
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetMyInfoResponse'
      summary: Get top users
      tags:
      - User
  /users/upvote-leaderboard:
    get:
      consumes:
      - application/json
      description: Get user upvote leaderboard
      parameters:
      - description: streak / total
        in: query
        name: by
        required: true
        type: string
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetUserUpvoteLeaderboardResponse'
      summary: Get user upvote leaderboard
      tags:
      - User
  /users/upvote-streak:
    get:
      consumes:
      - application/json
      description: Get user current upvote streak
      parameters:
      - description: Discord ID
        in: query
        name: discord_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.CurrentUserUpvoteStreakResponse'
      summary: Get user current upvote streak
      tags:
      - User
  /users/wallets/{address}:
    get:
      consumes:
      - application/json
      description: Get user by guild_id address
      parameters:
      - description: Address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GetUserWalletByGuildIDAddressResponse'
      summary: Get user by guild_id address
      tags:
      - User
  /verify:
    post:
      consumes:
      - application/json
      description: Verify wallet address
      parameters:
      - description: Verify wallet address request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.VerifyWalletAddressRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseStatus'
      summary: Verify wallet address
      tags:
      - Verification
  /verify/config:
    delete:
      consumes:
      - application/json
      description: Delete guild config wallet verification message
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseStatus'
      summary: Delete guild config wallet verification message
      tags:
      - Verification
    post:
      consumes:
      - application/json
      description: Config wallet verification message
      parameters:
      - description: New guild config wallet verification message request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.NewGuildConfigWalletVerificationMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NewGuildConfigWalletVerificationMessageResponse'
      summary: Config wallet verification message
      tags:
      - Verification
    put:
      consumes:
      - application/json
      description: Update guild config wallet verification message
      parameters:
      - description: Update guild config wallet verification message request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.NewGuildConfigWalletVerificationMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NewGuildConfigWalletVerificationMessageResponse'
      summary: Update guild config wallet verification message
      tags:
      - Verification
  /verify/config/{guild_id}:
    get:
      consumes:
      - application/json
      description: Get guild config wallet verification message
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.NewGuildConfigWalletVerificationMessageResponse'
      summary: Get guild config wallet verification message
      tags:
      - Verification
  /verify/generate:
    post:
      consumes:
      - application/json
      description: Generate verification
      parameters:
      - description: Generate verification request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.GenerateVerificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.GenerateVerificationResponse'
      summary: Generate verification
      tags:
      - Verification
  /widget/device:
    delete:
      consumes:
      - application/json
      description: Delete user current device data
      parameters:
      - description: Delete user device
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.DeleteUserDeviceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Delete user current device data
      tags:
      - Widget
    get:
      consumes:
      - application/json
      description: Get user current device data
      parameters:
      - description: Device ID
        in: query
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.UserDeviceResponse'
      summary: Get user current device data
      tags:
      - Widget
    post:
      consumes:
      - application/json
      description: Upsert user current device data
      parameters:
      - description: Upsert user device
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertUserDeviceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Upsert user current device data
      tags:
      - Widget
  /widget/token-alert:
    delete:
      consumes:
      - application/json
      description: Delete user token alerts
      parameters:
      - description: Delete user token alert
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.DeleteDiscordUserAlertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Delete user token alerts
      tags:
      - Widget
    get:
      consumes:
      - application/json
      description: Get user current token alerts
      parameters:
      - description: Discord ID
        in: query
        name: discord_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.DiscordUserTokenAlertResponse'
      summary: Get user current token alerts
      tags:
      - Widget
    post:
      consumes:
      - application/json
      description: Upsert user token alerts
      parameters:
      - description: Upsert user token alert
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_defipod_mochi_pkg_request.UpsertDiscordUserAlertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_defipod_mochi_pkg_response.ResponseMessage'
      summary: Upsert user token alerts
      tags:
      - Widget
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: access_token
    type: apiKey
swagger: "2.0"
