{
    "swagger": "2.0",
    "info": {
        "description": "This is a swagger for mochi api.",
        "title": "Swagger API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/api-key/binance": {
            "post": {
                "description": "Integrate binance key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ApiKey"
                ],
                "summary": "Integrate binance key",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProfileApiKeyResponse"
                        }
                    }
                }
            }
        },
        "/api-key/me": {
            "post": {
                "description": "Create apiKey",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ApiKey"
                ],
                "summary": "Create apiKey",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProfileApiKeyResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.LoginResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LogoutResponse"
                        }
                    }
                }
            }
        },
        "/cache/upvote": {
            "post": {
                "description": "Set or overwrite an upvote message cache",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cache"
                ],
                "summary": "Set or overwrite an upvote message cache",
                "parameters": [
                    {
                        "description": "Set upvote message cache request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SetUpvoteMessageCacheRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/advertise": {
            "get": {
                "description": "Get submitted ad",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get submitted ad",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ad's id, or 'random'",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserSubmittedAdResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update ad submission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Update ad submission",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Create ad submission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Create ad submission",
                "parameters": [
                    {
                        "type": "string",
                        "name": "creator_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "image",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "introduction",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "is_podtown_ad",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete ad submission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Delete ad submission",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/advertise/init": {
            "post": {
                "description": "Init ad submission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Init ad submission",
                "parameters": [
                    {
                        "type": "string",
                        "name": "channel_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "guild_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/feedback": {
            "get": {
                "description": "Get users' feedbacks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get users' feedbacks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filter by",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filtered value",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserFeedbackResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update users' feedbacks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Update users' feedbacks",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateUserFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UpdateUserFeedbackResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Post users' feedbacks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Post users' feedbacks",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/invites/": {
            "get": {
                "description": "Get invites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get invites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Member ID",
                        "name": "member_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetInvitesResponse"
                        }
                    }
                }
            }
        },
        "/community/invites/aggregation": {
            "get": {
                "description": "Invites Aggregation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Invites Aggregation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Inviter ID",
                        "name": "inviter",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.InvitesAggregationResponse"
                        }
                    }
                }
            }
        },
        "/community/invites/config": {
            "get": {
                "description": "Get invites tracker config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get invites tracker config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetInviteTrackerConfigResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Configure invites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Configure invites",
                "parameters": [
                    {
                        "description": "Configure Invites request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigureInviteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ConfigureInvitesResponse"
                        }
                    }
                }
            }
        },
        "/community/invites/leaderboard/{id}": {
            "get": {
                "description": "Get invites leaderboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get invites leaderboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetInvitesLeaderboardResponse"
                        }
                    }
                }
            }
        },
        "/community/levelup": {
            "get": {
                "description": "Get levelup message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get levelup message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildLevelUpMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Upsert levelup message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Upsert levelup message",
                "parameters": [
                    {
                        "type": "string",
                        "name": "channel_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "guild_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "image_url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "message",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildLevelUpMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete levelup message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Delete levelup message",
                "parameters": [
                    {
                        "type": "string",
                        "name": "guild_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/quests": {
            "get": {
                "description": "Get user quest list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get user quest list",
                "parameters": [
                    {
                        "type": "string",
                        "name": "routine",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserQuestListResponse"
                        }
                    }
                }
            }
        },
        "/community/quests/claim": {
            "post": {
                "description": "Claim user quests' rewards",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Claim user quests' rewards",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ClaimQuestsRewardsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ClaimQuestsRewardsResponse"
                        }
                    }
                }
            }
        },
        "/community/quests/progress": {
            "post": {
                "description": "Update user's quest progress",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Update user's quest progress",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateQuestProgressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/community/repost-reactions": {
            "post": {
                "description": "Config Respost reaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Config Respost reaction",
                "parameters": [
                    {
                        "description": "Config repost reaction request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigRepostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove Respost reaction config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Remove Respost reaction config",
                "parameters": [
                    {
                        "description": "Remove repost reaction config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigRepostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/repost-reactions/blacklist-channel": {
            "get": {
                "description": "Get guild blacklist channel repost config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get guild blacklist channel repost config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Create blacklist channel repost config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Create blacklist channel repost config",
                "parameters": [
                    {
                        "description": "Upsert join-leave channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BalcklistChannelRepostConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete blacklist channel repost config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Delete blacklist channel repost config",
                "parameters": [
                    {
                        "description": "Delete blacklist channel repost config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BalcklistChannelRepostConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/repost-reactions/conversation": {
            "post": {
                "description": "Config Respost reaction with start stop",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Config Respost reaction with start stop",
                "parameters": [
                    {
                        "description": "Config repost reaction start stop request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigRepostReactionStartStop"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/repost-reactions/message-repost": {
            "put": {
                "description": "edit message repost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "edit message repost",
                "parameters": [
                    {
                        "description": "edit message repost request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.EditMessageRepostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/repost-reactions/{guild_id}": {
            "get": {
                "description": "Get Respost reaction configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get Respost reaction configs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetRepostReactionConfigsResponse"
                        }
                    }
                }
            }
        },
        "/community/tagme": {
            "get": {
                "description": "Get tagme",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get tagme",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Upsert user tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Upsert user tag",
                "parameters": [
                    {
                        "description": "Upsert user tag request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertUserTag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/twitter": {
            "post": {
                "description": "Create twitter post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Create twitter post",
                "parameters": [
                    {
                        "description": "Create twitter post request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TwitterPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/twitter/top": {
            "get": {
                "description": "Create twitter post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Create twitter post",
                "parameters": [
                    {
                        "type": "string",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTwitterLeaderboardResponse"
                        }
                    }
                }
            }
        },
        "/config-channels/dao-tracker": {
            "post": {
                "description": "Create tracker channel config for dao voting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Create tracker channel config",
                "parameters": [
                    {
                        "description": "Create tracker channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertGuildConfigDaoTracer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete dao tracker config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Delete dao tracker channel config",
                "parameters": [
                    {
                        "description": "Delete dao tracker channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteGuildConfigDaoTracker"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-channels/dao-tracker/cw-discussion-subs": {
            "post": {
                "description": "Subscribe commonwealth discussion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data"
                ],
                "summary": "Subscribe commonwealth discussion",
                "parameters": [
                    {
                        "description": "Create cw discussion subscription request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateCommonwealthDiscussionSubscription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateCommonwealthDiscussionSubscription"
                        }
                    }
                }
            }
        },
        "/config-channels/dao-tracker/{guild_id}": {
            "get": {
                "description": "Get dao tracker channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Get dao tracker channel config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GuildConfigDaoTrackerResponse"
                        }
                    }
                }
            }
        },
        "/config-channels/gm": {
            "get": {
                "description": "Get GM config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Get GM config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGmConfigResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Update or insert GM config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Update or insert GM config",
                "parameters": [
                    {
                        "description": "Upsert GM Config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertGmConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-channels/join-leave": {
            "get": {
                "description": "Get join-leave channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Get join-leave channel config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetVoteChannelConfigResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Update or insert join-leave channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Update or insert join-leave channel config",
                "parameters": [
                    {
                        "description": "Upsert join-leave channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertJoinLeaveChannelConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetVoteChannelConfigResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete join-leave channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Delete join-leave channel config",
                "parameters": [
                    {
                        "description": "Delete join-leave channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteJoinLeaveChannelConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-channels/proposal": {
            "post": {
                "description": "Create proposal channel config for dao voting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Create proposal channel config",
                "parameters": [
                    {
                        "description": "Create proposal channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateProposalChannelConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateProposalChannelConfigResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete dao proposal config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Delete dao proposal channel config",
                "parameters": [
                    {
                        "description": "Delete dao proposal channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteGuildConfigDaoProposal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-channels/tip-notify": {
            "get": {
                "description": "API get list config notify channel for token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "OffChain Tip Bot - Config notify",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild id",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListConfigNotifyResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API config notify channel for token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "OffChain Tip Bot - Config notify",
                "parameters": [
                    {
                        "description": "config notify request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateTipConfigNotify"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-channels/tip-notify/{id}": {
            "delete": {
                "description": "API delete config notify channel for token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "OffChain Tip Bot - Config notify",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of config notify",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-channels/upvote": {
            "get": {
                "description": "Get vote channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Get vote channel config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetVoteChannelConfigResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Update or insert vote channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Update or insert vote channel config",
                "parameters": [
                    {
                        "description": "Upsert vote channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertVoteChannelConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetVoteChannelConfigResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete vote channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Delete vote channel config",
                "parameters": [
                    {
                        "description": "Delete vote channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteVoteChannelConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-channels/welcome": {
            "get": {
                "description": "Get welcome channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Get welcome channel config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetWelcomeChannelConfigResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Update or insert welcome channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Update or insert welcome channel config",
                "parameters": [
                    {
                        "description": "Upsert welcome channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertWelcomeConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetWelcomeChannelConfigResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete welcome channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Delete welcome channel config",
                "parameters": [
                    {
                        "description": "Delete welcome channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteWelcomeConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-channels/{guild_id}/proposal": {
            "get": {
                "description": "Get dao proposal channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Get dao proposal channel config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildConfigDaoProposal"
                        }
                    }
                }
            }
        },
        "/config-community/telegram": {
            "get": {
                "description": "Get telegram account linked with discord ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Get telegram account linked with discord ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "request",
                        "name": "telegram_username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetLinkedTelegramResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Link user's telegram with discord account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Link user's telegram with discord account",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LinkUserTelegramWithDiscordRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.LinkUserTelegramWithDiscordResponse"
                        }
                    }
                }
            }
        },
        "/config-community/twitter": {
            "post": {
                "description": "Create twitter config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Create twitter config",
                "parameters": [
                    {
                        "description": "Create Twitter config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GuildConfigTwitterFeed"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-community/twitter/blacklist": {
            "get": {
                "description": "get twitter blacklist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Get twitter blacklist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTwitterBlackListResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add an user to twitter watching blacklist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Add an user to twitter watching blacklist",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddToTwitterBlackListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an user from twitter watching blacklist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Delete an user from twitter watching blacklist",
                "parameters": [
                    {
                        "type": "string",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "twitter_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/config-community/twitter/hashtag": {
            "get": {
                "description": "get all twitter hashtag config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Get all twitter hashtag config",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetAllTwitterHashtagConfigResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create twitter hashtag config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Create twitter hashtag config",
                "parameters": [
                    {
                        "description": "Create twitter hashtag config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TwitterHashtag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-community/twitter/hashtag/{guild_id}": {
            "get": {
                "description": "get twitter hashtag config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Get twitter hashtag config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTwitterHashtagConfigResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete twitter hashtag config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Delete twitter hashtag config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/custom-tokens": {
            "post": {
                "description": "Guild custom token config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Guild custom token config",
                "parameters": [
                    {
                        "description": "Custom guild custom token config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertCustomTokenConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/default-currency": {
            "get": {
                "description": "Get default currency by guild id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get default currency by guild id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GuildConfigDefaultCurrencyResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Upsert default currency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Upsert default currency",
                "parameters": [
                    {
                        "description": "Upsert default currency config",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertGuildDefaultCurrencyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete default currency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Delete default currency",
                "parameters": [
                    {
                        "description": "Delete default currency config",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GuildIDRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/default-symbol": {
            "post": {
                "description": "Create default collection symbol",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Create default collection symbol",
                "parameters": [
                    {
                        "description": "Config Default Collection Symbol request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigDefaultCollection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/default-ticker": {
            "get": {
                "description": "Get guild default ticker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get guild default ticker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ticker query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildDefaultTickerResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Set guild default ticker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Set guild default ticker",
                "parameters": [
                    {
                        "description": "Set guild default ticker request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GuildConfigDefaultTickerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/monikers": {
            "post": {
                "description": "Upsert moniker config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Upsert moniker config",
                "parameters": [
                    {
                        "description": "Upsert moniker config",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertMonikerConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete moniker config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Delete moniker config",
                "parameters": [
                    {
                        "description": "Delete moinker config",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteMonikerConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/monikers/default": {
            "get": {
                "description": "Get default moniker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get default moniker",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MonikerConfigResponse"
                        }
                    }
                }
            }
        },
        "/config-defi/monikers/{guild_id}": {
            "get": {
                "description": "Get moniker configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get moniker configs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MonikerConfigResponse"
                        }
                    }
                }
            }
        },
        "/config-defi/tip-range": {
            "post": {
                "description": "Upsert config tip range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Upsert config tip range",
                "parameters": [
                    {
                        "description": "Upsert config tip range",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertGuildConfigTipRangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GuildConfigTipRangeResponse"
                        }
                    }
                }
            }
        },
        "/config-defi/tip-range/{guild_id}": {
            "get": {
                "description": "Get config tip range by guild id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get config tip range by guild id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GuildConfigTipRangeResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove config tip range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Remove config tip range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/tokens": {
            "get": {
                "description": "Get guild tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get guild tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildTokensResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Update or insert guild token config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Update or insert guild token config",
                "parameters": [
                    {
                        "description": "Upsert Guild Token Config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertGuildTokenConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/tokens/default": {
            "get": {
                "description": "Get Default token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get Default token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetDefaultTokenResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Config Default token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Config Default token",
                "parameters": [
                    {
                        "description": "Config default token request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigDefaultTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove Default token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Remove Default token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-roles/admin-roles": {
            "get": {
                "description": "Get list admin role config of guild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Get list admin role config of guild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListGuildAdminRoles"
                        }
                    }
                }
            },
            "post": {
                "description": "Create guild admin role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Create guild admin role config",
                "parameters": [
                    {
                        "description": "Create guild admin role config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateGuildAdminRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-roles/admin-roles/{id}": {
            "delete": {
                "description": "Remove guild admin role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Remove guild admin role config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Config ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-roles/default-roles": {
            "get": {
                "description": "Get default roles by guild id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Get default roles by guild id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DefaultRoleResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create default role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Create default role",
                "parameters": [
                    {
                        "description": "Create default role request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateDefaultRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DefaultRoleResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete default role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Delete default role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseSucess"
                        }
                    }
                }
            }
        },
        "/config-roles/level-roles": {
            "post": {
                "description": "Config level role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Config Level role",
                "parameters": [
                    {
                        "description": "Config level role request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigLevelRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-roles/level-roles/{guild_id}": {
            "get": {
                "description": "Get level role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Get level role config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetLevelRoleConfigsResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove level role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Remove level role config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-roles/mix-roles": {
            "post": {
                "description": "Create guild Mix role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Create guild Mix role config",
                "parameters": [
                    {
                        "description": "Create guild Mix role config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateGuildMixRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateGuildMixRole"
                        }
                    }
                }
            }
        },
        "/config-roles/mix-roles/": {
            "get": {
                "description": "Get list Mix role config of guild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Get list Mix role config of guild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListGuildMixRoles"
                        }
                    }
                }
            }
        },
        "/config-roles/mix-roles/{id}": {
            "delete": {
                "description": "Remove guild Mix role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Remove guild Mix role config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Config ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-roles/nft-roles": {
            "get": {
                "description": "List guild nft roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "List guild nft roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListGuildGroupNFTRolesResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "New guild nft role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "New guild nft role",
                "parameters": [
                    {
                        "description": "New NFT role request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigGroupNFTRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NewGuildGroupNFTRoleResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove guild nft role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Remove guild nft role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "32951e68-9959-4e1d-88ca-22b442e19efe|45d06941-468b-4e5e-8b8f-d20c77c87805",
                        "name": "config_ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-roles/nft-roles/group": {
            "delete": {
                "description": "Remove guild group nft role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Remove guild group nft role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group config ID",
                        "name": "group_config_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-roles/reaction-roles": {
            "get": {
                "description": "Get all role reaction configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Get all role reaction configs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DataListRoleReactionResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add reaction role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Add reaction role config",
                "parameters": [
                    {
                        "description": "Add reaction role config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RoleReactionUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.RoleReactionConfigResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove reaction role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Remove reaction role config",
                "parameters": [
                    {
                        "description": "Remove reaction role config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RoleReactionUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseSucess"
                        }
                    }
                }
            }
        },
        "/config-roles/reaction-roles/filter": {
            "post": {
                "description": "Filter config by reaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Filter config by reaction",
                "parameters": [
                    {
                        "description": "Filter config by reaction request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RoleReactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DataFilterConfigByReaction"
                        }
                    }
                }
            }
        },
        "/config-roles/token-roles": {
            "post": {
                "description": "Create guild token role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Create guild token role config",
                "parameters": [
                    {
                        "description": "Create guild token role config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateGuildTokenRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateGuildTokenRole"
                        }
                    }
                }
            }
        },
        "/config-roles/token-roles/{guild_id}": {
            "get": {
                "description": "Get list token role config of guild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Get list token role config of guild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListGuildTokenRoles"
                        }
                    }
                }
            }
        },
        "/config-roles/token-roles/{id}": {
            "put": {
                "description": "Update guild token role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Update guild token role config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Config ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UpdateGuildTokenRole"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove guild token role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Remove guild token role config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Config ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-roles/xp-roles": {
            "post": {
                "description": "Create guild XP role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Create guild XP role config",
                "parameters": [
                    {
                        "description": "Create guild XP role config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateGuildXPRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateGuildXPRole"
                        }
                    }
                }
            }
        },
        "/config-roles/xp-roles/": {
            "get": {
                "description": "Get list XP role config of guild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Get list XP role config of guild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListGuildXPRoles"
                        }
                    }
                }
            }
        },
        "/config-roles/xp-roles/{id}": {
            "delete": {
                "description": "Remove guild XP role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Remove guild XP role config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Config ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/configs/nft-roles/group": {
            "delete": {
                "description": "Remove guild group nft role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Remove guild group nft role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group config ID",
                        "name": "group_config_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/configs/sales-tracker": {
            "get": {
                "description": "Get sales tracker config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Get sales tracker config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSalesTrackerConfigResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create sales tracker config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Create sales tracker config",
                "parameters": [
                    {
                        "description": "Create sales tracker config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateSalesTrackerConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/configs/twitter": {
            "get": {
                "description": "Get all twitter config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Get all twitter config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetAllTwitterConfigResponse"
                        }
                    }
                }
            }
        },
        "/configs/twitter-sales": {
            "get": {
                "description": "Get twitter sale config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigTwitterSale"
                ],
                "summary": "Get twitter sale config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "marketplace name",
                        "name": "marketplace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSaleTwitterConfigResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create twitter sale config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigTwitterSale"
                ],
                "summary": "Create twitter sale config",
                "parameters": [
                    {
                        "description": "req",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateTwitterSaleConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateTwitterSaleConfigResponse"
                        }
                    }
                }
            }
        },
        "/configs/upvote-tiers": {
            "get": {
                "description": "Get all upvote tiers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Get all upvote tiers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUpvoteTiersConfig"
                        }
                    }
                }
            }
        },
        "/configs/whitelist-prune": {
            "get": {
                "description": "Get prune exclusion config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Get prune exclusion config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildPruneExcludeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Upsert prune exclude config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Upsert prune exclude config",
                "parameters": [
                    {
                        "description": "Upsert prune exlude request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertGuildPruneExcludeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete prune exclude config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Delete prune exclude config",
                "parameters": [
                    {
                        "description": "Upsert prune exlude request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertGuildPruneExcludeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/dao-voting/proposals": {
            "get": {
                "description": "Get dao proposals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO-Voting"
                ],
                "summary": "Get dao proposals",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discord ID",
                        "name": "user_discord_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetAllDaoProposals"
                        }
                    }
                }
            },
            "post": {
                "description": "Create dao proposal and then create a discussion channel for users to discuss about the proposal.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO Proposal"
                ],
                "summary": "Dao Proposal",
                "parameters": [
                    {
                        "description": "Create dao proposal request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateDaoProposalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateDaoProposalResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Detele DAO proposal and then remove its discussion channel.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO Proposal"
                ],
                "summary": "Delete DAO Proposal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Proposal ID",
                        "name": "proposal_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/dao-voting/proposals/vote": {
            "post": {
                "description": "Create dao vote",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dao-voting"
                ],
                "summary": "Create dao vote",
                "parameters": [
                    {
                        "description": "Create dao vote request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateDaoVoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/dao-voting/proposals/votes/{vote_id}": {
            "put": {
                "description": "Update dao vote",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dao-voting"
                ],
                "summary": "Update dao vote",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DAO Vote ID",
                        "name": "vote_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update dao vote request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateDaoVoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UpdateVote"
                        }
                    }
                }
            }
        },
        "/dao-voting/token-holder/status": {
            "get": {
                "description": "Check token holder connect wallet yet? And have enough amount based on criteria (has 10 icy, 3 neko, havent connected walelt, …)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO-Voting"
                ],
                "summary": "Get status of token holder for creating proposal and voting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discord ID",
                        "name": "user-discord-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TokenHolderStatus"
                        }
                    }
                }
            }
        },
        "/dao-voting/user-votes": {
            "get": {
                "description": "Get dao votes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO-Voting"
                ],
                "summary": "Get dao votes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discord ID",
                        "name": "user_discord_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Proposal ID",
                        "name": "proposal-id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetAllDaoProposalVotes"
                        }
                    }
                }
            }
        },
        "/dao-voting/votes": {
            "get": {
                "description": "Get dao proposal vote of user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO-Voting"
                ],
                "summary": "Get dao proposal vote of user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Proposal ID",
                        "name": "proposal_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Discord ID",
                        "name": "user_discord_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetVote"
                        }
                    }
                }
            }
        },
        "/data/configs/activities/{activity}": {
            "post": {
                "description": "Toggle activity config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data"
                ],
                "summary": "Toggle activity config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity name",
                        "name": "activity",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ToggleActivityConfigResponse"
                        }
                    }
                }
            }
        },
        "/data/metrics": {
            "get": {
                "description": "API to get stats of collections, users, servers, ...",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data"
                ],
                "summary": "Metric",
                "parameters": [
                    {
                        "type": "string",
                        "description": "total_servers | active_users | nft_collections | verified_wallets | supported_tokens | command_usage",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "case active_users",
                        "name": "guild_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DataMetric"
                        }
                    }
                }
            }
        },
        "/data/usage-stats/dao-tracker": {
            "get": {
                "description": "Get dao tracker usage across Mochi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data"
                ],
                "summary": "Metric",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DaoTrackerSpaceCountResponse"
                        }
                    }
                }
            }
        },
        "/data/usage-stats/proposal": {
            "get": {
                "description": "Get proposal usage across Mochi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data"
                ],
                "summary": "Metric",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GuildProposalUsageResponse"
                        }
                    }
                }
            }
        },
        "/defi/chains": {
            "get": {
                "description": "List All Chain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi",
                    "Public"
                ],
                "summary": "List All Chain",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetListAllChainsResponse"
                        }
                    }
                }
            }
        },
        "/defi/coins": {
            "get": {
                "description": "Search coin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi",
                    "Public"
                ],
                "summary": "Search coin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "coin query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SearchCoinResponse"
                        }
                    }
                }
            }
        },
        "/defi/coins/binance/{symbol}": {
            "get": {
                "description": "Get coin data from Binance Exchange",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi",
                    "Public"
                ],
                "summary": "Get coin data from Binance Exchange",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coin ID",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetCoinResponseWrapper"
                        }
                    }
                }
            }
        },
        "/defi/coins/compare": {
            "get": {
                "description": "Compare token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi",
                    "Public"
                ],
                "summary": "Compare token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "base token",
                        "name": "base",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "target token",
                        "name": "target",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "compare interval",
                        "name": "interval",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CompareTokenResponse"
                        }
                    }
                }
            }
        },
        "/defi/coins/{id}": {
            "get": {
                "description": "Get coin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi",
                    "Public"
                ],
                "summary": "Get coin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetCoinResponseWrapper"
                        }
                    }
                }
            }
        },
        "/defi/gas-tracker": {
            "get": {
                "description": "Get gas tracker of all chain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi",
                    "Public"
                ],
                "summary": "Get gas tracker of all chain",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GasTrackerResponseData"
                        }
                    }
                }
            }
        },
        "/defi/gas-tracker/{chain}": {
            "get": {
                "description": "Get gas tracker of one chain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi",
                    "Public"
                ],
                "summary": "Get gas tracker of one chain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "chain",
                        "name": "chain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ChainGasTrackerResponseData"
                        }
                    }
                }
            }
        },
        "/defi/market-chart": {
            "get": {
                "description": "Get historical market chart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi",
                    "Public"
                ],
                "summary": "Get historical market chart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coin ID",
                        "name": "coin_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Day",
                        "name": "day",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "usd",
                        "description": "Currency",
                        "name": "currency",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetHistoricalMarketChartResponse"
                        }
                    }
                }
            }
        },
        "/defi/market-data": {
            "get": {
                "description": "Get coins market data of top coins",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi",
                    "Public"
                ],
                "summary": "Get coins market data of top coins",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page_size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "accepted values: price_change_percentage_7d_asc, price_change_percentage_7d_desc, price_change_percentage_1h_asc, price_change_percentage_1h_desc, price_change_percentage_24h_asc, price_change_percentage_24h_desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetCoinsMarketDataResponse"
                        }
                    }
                }
            }
        },
        "/defi/price-alert": {
            "get": {
                "description": "Get user's price alerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Get user's price alerts",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "user_discord_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListTokenPriceAlertResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add to user's price alert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Add to user's price alert",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddTokenPriceAlertRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AddTokenPriceAlertResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove from user's price alerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Remove from user's price alerts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/defi/token": {
            "get": {
                "description": "Get supported token by address and chain id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi",
                    "Public"
                ],
                "summary": "Get supported token by address and chain id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token chain",
                        "name": "chain",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSupportedTokenResponse"
                        }
                    }
                }
            }
        },
        "/defi/token-support": {
            "get": {
                "description": "Get tokens requested by user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Get tokens requested by user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSupportedTokensResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Request support token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Request support token",
                "parameters": [
                    {
                        "description": "Create user token support request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateUserTokenSupportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateUserTokenSupportRequest"
                        }
                    }
                }
            }
        },
        "/defi/token-support/{id}/approve": {
            "put": {
                "description": "Approve support token request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Approve support token request",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Support Token Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateUserTokenSupportRequest"
                        }
                    }
                }
            }
        },
        "/defi/token-support/{id}/reject": {
            "put": {
                "description": "Reject support token request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Reject support token request",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Support Token Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateUserTokenSupportRequest"
                        }
                    }
                }
            }
        },
        "/defi/tokens": {
            "get": {
                "description": "Get supported tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi",
                    "Public"
                ],
                "summary": "Get supported tokens",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSupportedTokensResponse"
                        }
                    }
                }
            }
        },
        "/defi/top-gainer-loser": {
            "get": {
                "description": "Get top 300 gainer and loser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi",
                    "Public"
                ],
                "summary": "Get top 300 gainer and loser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "default: 24h, accepted value: 1h, 24h, 7d, 14d, 30d, 60d, 1y",
                        "name": "duration",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTopGainerLoser"
                        }
                    }
                }
            }
        },
        "/defi/trending": {
            "get": {
                "description": "Get trending search of coins",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi",
                    "Public"
                ],
                "summary": "Get trending search of coins",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTrendingSearch"
                        }
                    }
                }
            }
        },
        "/defi/watchlist": {
            "get": {
                "description": "Get user's watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi",
                    "Public"
                ],
                "summary": "Get user's watchlist",
                "parameters": [
                    {
                        "type": "string",
                        "name": "coin_gecko_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetWatchlistResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add to user's watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi",
                    "Public"
                ],
                "summary": "Add to user's watchlist",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddToWatchlistRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AddToWatchlistResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove from user's watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi",
                    "Public"
                ],
                "summary": "Remove from user's watchlist",
                "parameters": [
                    {
                        "type": "string",
                        "name": "symbol",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fiat/historical-exchange-rates": {
            "get": {
                "description": "Remove from user's watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fiat"
                ],
                "summary": "Get historical market chart",
                "parameters": [
                    {
                        "type": "string",
                        "name": "base",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 365,
                        "minimum": 7,
                        "type": "integer",
                        "name": "days",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "target",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetFiatHistoricalExchangeRatesResponse"
                        }
                    }
                }
            }
        },
        "/guilds": {
            "get": {
                "description": "Get guilds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Get guilds",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create guild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Create guild",
                "parameters": [
                    {
                        "description": "Create Guild request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateGuildRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/request.CreateGuildRequest"
                        }
                    }
                }
            }
        },
        "/guilds/user-managed": {
            "get": {
                "description": "Get my guild list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Get my guilds list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListMyGuildsResponse"
                        }
                    }
                }
            }
        },
        "/guilds/{guild_id}": {
            "get": {
                "description": "Get guild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Get guild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update guild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Update guild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update guild request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateGuildRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/guilds/{guild_id}/channels": {
            "post": {
                "description": "Create guild channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Create guild channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "count_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/guilds/{guild_id}/custom-tokens": {
            "get": {
                "description": "List all guild custom token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "List all guild custom token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListAllCustomTokenResponse"
                        }
                    }
                }
            }
        },
        "/guilds/{guild_id}/roles": {
            "get": {
                "description": "Update guild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Update guild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.DiscordGuildRole"
                            }
                        }
                    }
                }
            }
        },
        "/guilds/{guild_id}/stats": {
            "get": {
                "description": "Get guild stats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Get guild stats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DiscordGuildStat"
                        }
                    }
                }
            }
        },
        "/nfts": {
            "get": {
                "description": "List all nft collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "List all nft collections",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListAllNFTCollectionsResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections": {
            "get": {
                "description": "Get NFT trading volume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT trading volume",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NFTCollectionsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create NFT Collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Create NFT Collection",
                "parameters": [
                    {
                        "description": "Create nft collection request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateNFTCollectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateNFTCollectionResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections/address/{address}": {
            "get": {
                "description": "Get NFT collection by address chain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT collection by address chain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Chain",
                        "name": "chain",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetNFTCollectionByAddressChainResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections/stats": {
            "get": {
                "description": "Get collection count",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get collection count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetCollectionCountResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections/suggestion": {
            "get": {
                "description": "Get guild suggest nft collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get guild suggest nft collections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "symbol collection query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSuggestionNFTCollectionsResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections/tickers": {
            "get": {
                "description": "Get NFT collection tickers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT collection tickers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CollectionAddress",
                        "name": "collection_address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "to",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.IndexerNFTCollectionTickersResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections/{address}": {
            "patch": {
                "description": "Update NFT Collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Update NFT Collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/nfts/collections/{symbol}": {
            "get": {
                "description": "Get NFT Tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT Tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.IndexerGetNFTTokensResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections/{symbol}/detail": {
            "get": {
                "description": "Get detail nft collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get detail nft collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Query by collection address",
                        "name": "query_address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetDetailNftCollectionResponse"
                        }
                    }
                }
            }
        },
        "/nfts/default-nft-ticker": {
            "get": {
                "description": "Get guild default nft ticker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get guild default nft ticker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ticker query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildDefaultNftTickerResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Set guild default nft ticker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Set guild default nft ticker",
                "parameters": [
                    {
                        "description": "Set guild default ticker request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GuildConfigDefaultNftTickerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseDataMessage"
                        }
                    }
                }
            }
        },
        "/nfts/icons": {
            "get": {
                "description": "Get NFT metadata attribute icon",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT metadata attribute icon",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NftMetadataAttrIconResponse"
                        }
                    }
                }
            }
        },
        "/nfts/new-listed": {
            "get": {
                "description": "Get new listed nft collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get new listed nft collection",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 7,
                        "description": "Interval",
                        "name": "interval",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NFTNewListedResponse"
                        }
                    }
                }
            }
        },
        "/nfts/sales": {
            "get": {
                "description": "Get NFT sales",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT sales",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection address",
                        "name": "collection-address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Platform",
                        "name": "platform",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NftSalesResponse"
                        }
                    }
                }
            }
        },
        "/nfts/soulbound": {
            "get": {
                "description": "Get Nft Soulbound",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get Nft Soulbound",
                "parameters": [
                    {
                        "type": "string",
                        "description": "collection address",
                        "name": "collection_address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSoulBoundNFTResponse"
                        }
                    }
                }
            }
        },
        "/nfts/supported-chains": {
            "post": {
                "description": "Get supported chains",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get supported chains",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSupportedChains"
                        }
                    }
                }
            }
        },
        "/nfts/tickers": {
            "get": {
                "description": "Get NFT token tickers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT token tickers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CollectionAddress",
                        "name": "collection_address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token ID",
                        "name": "token_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "to",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.IndexerGetNFTTokenTickersResponse"
                        }
                    }
                }
            }
        },
        "/nfts/trades": {
            "post": {
                "description": "Create Trade Offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Create Trade Offer",
                "parameters": [
                    {
                        "description": "Create Trade Offer Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateTradeOfferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateTradeOfferResponse"
                        }
                    }
                }
            }
        },
        "/nfts/trades/{id}": {
            "get": {
                "description": "Get Trade Offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get Trade Offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Trade Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTradeOfferResponse"
                        }
                    }
                }
            }
        },
        "/nfts/trading-volume": {
            "get": {
                "description": "Get NFT trading volume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT trading volume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NFTTradingVolumeResponse"
                        }
                    }
                }
            }
        },
        "/nfts/watchlist": {
            "get": {
                "description": "Get user's nft watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get user's nft watchlist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "size",
                        "name": "size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetNftWatchlistResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add to user's nft watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Add to user's nft watchlist",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddNftWatchlistRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NftWatchlistSuggestResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove from user's nft watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Remove from user's nft watchlist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "symbol",
                        "name": "symbol",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/nfts/{symbol}/{id}": {
            "get": {
                "description": "Get NFT Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Query by using Collection Address",
                        "name": "query_address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.IndexerGetNFTTokenDetailResponseWithSuggestions"
                        }
                    }
                }
            }
        },
        "/nfts/{symbol}/{id}/activity": {
            "get": {
                "description": "Get NFT Activity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT Activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection address | Symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetNFTActivityResponse"
                        }
                    }
                }
            }
        },
        "/swap": {
            "post": {
                "description": "Execute swap token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Swap"
                ],
                "summary": "Execute swap token",
                "parameters": [
                    {
                        "description": "swap request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SwapRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/swap/route": {
            "get": {
                "description": "Get swap route for token pairs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Swap"
                ],
                "summary": "Get swap route for token pairs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "from token symbol",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "to token symbol",
                        "name": "to",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from amount value",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chain name",
                        "name": "chain_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "chain id",
                        "name": "chain_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SwapRouteResponseData"
                        }
                    }
                }
            }
        },
        "/tip/onchain/claim": {
            "post": {
                "description": "Onchain Tip Bot - Submit transfer transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tip"
                ],
                "summary": "Onchain Tip Bot - Submit transfer transaction",
                "parameters": [
                    {
                        "description": "req",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ClaimOnchainTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ClaimOnchainTransferResponse"
                        }
                    }
                }
            }
        },
        "/tip/onchain/{user_id}/balances": {
            "get": {
                "description": "Onchain Tip Bot - Get user's onchain balances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tip"
                ],
                "summary": "Onchain Tip Bot - Get user's onchain balances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "userId",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserBalancesResponse"
                        }
                    }
                }
            }
        },
        "/tip/onchain/{user_id}/transfers": {
            "get": {
                "description": "Onchain Tip Bot - Get user's onchain transfers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tip"
                ],
                "summary": "Onchain Tip Bot - Get user's onchain transfers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "userId",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetOnchainTransfersResponse"
                        }
                    }
                }
            }
        },
        "/tip/transactions": {
            "get": {
                "description": "Get transactions by query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tip"
                ],
                "summary": "Get transactions by query",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sender ID",
                        "name": "sender_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "receiver ID",
                        "name": "receiver_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TransactionsResponse"
                        }
                    }
                }
            }
        },
        "/tip/transfer": {
            "post": {
                "description": "API transfer token for tip, airdrop, ...",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tip"
                ],
                "summary": "OffChain Tip Bot - Transfer token",
                "parameters": [
                    {
                        "description": "Transfer token request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OffchainTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.OffchainTipBotTransferTokenResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Create User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "Create user request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/users/:id/envelop-streak": {
            "get": {
                "description": "Get user envelop streak",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user envelop streak",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserEnvelopStreak"
                        }
                    }
                }
            }
        },
        "/users/:id/wallets": {
            "get": {
                "description": "Get user's wallets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wallet"
                ],
                "summary": "Get user's wallets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "req",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetTrackingWalletsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTrackingWalletsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Untrack a wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wallet"
                ],
                "summary": "Untrack a wallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "alias",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/users/:id/wallets/:query": {
            "get": {
                "description": "Find one user's trackng wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wallet"
                ],
                "summary": "Find one user's trackng wallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "alias or address query",
                        "name": "query",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetOneWalletResponse"
                        }
                    }
                }
            }
        },
        "/users/envelop": {
            "post": {
                "description": "Track user receive envelop",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Track user receive envelop",
                "parameters": [
                    {
                        "description": "Create envelop request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateEnvelop"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateEnvelop"
                        }
                    }
                }
            }
        },
        "/users/gmstreak": {
            "get": {
                "description": "Get user current GM streak",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user current GM streak",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discord ID",
                        "name": "discord_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserCurrentGMStreakResponse"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "description": "Get user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetMyInfoResponse"
                        }
                    }
                }
            }
        },
        "/users/profiles/": {
            "get": {
                "description": "Get user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetDataUserProfileResponse"
                        }
                    }
                }
            }
        },
        "/users/top": {
            "get": {
                "description": "Get top users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get top users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query to search by name",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ASC / DESC",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TopUser"
                        }
                    }
                }
            }
        },
        "/users/upvote-leaderboard": {
            "get": {
                "description": "Get user upvote leaderboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user upvote leaderboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "streak / total",
                        "name": "by",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserUpvoteLeaderboardResponse"
                        }
                    }
                }
            }
        },
        "/users/upvote-streak": {
            "get": {
                "description": "Get user current upvote streak",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user current upvote streak",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discord ID",
                        "name": "discord_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CurrentUserUpvoteStreakResponse"
                        }
                    }
                }
            }
        },
        "/users/wallets/{address}": {
            "get": {
                "description": "Get user by guild_id address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user by guild_id address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserWalletByGuildIDAddressResponse"
                        }
                    }
                }
            }
        },
        "/users/xp": {
            "post": {
                "description": "Send User XP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Send User XP",
                "parameters": [
                    {
                        "description": "Send user XP request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SendUserXPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/users/{id}/transactions": {
            "get": {
                "description": "Get user transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user discord ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserTransactionResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/watchlists/wallets": {
            "get": {
                "description": "Get user's tracking wallets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WatchList"
                ],
                "summary": "Get user's tracking wallets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTrackingWalletsResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/watchlists/wallets/track": {
            "post": {
                "description": "Track new wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WatchList"
                ],
                "summary": "Track new wallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "req",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TrackWalletRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/users/{user_id}": {
            "get": {
                "description": "Get user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserResponse"
                        }
                    }
                }
            }
        },
        "/vault": {
            "get": {
                "description": "Get vaults",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vault",
                    "Public"
                ],
                "summary": "Get vaults",
                "parameters": [
                    {
                        "type": "string",
                        "name": "evmAddress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "guildID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "false",
                        "name": "noFetchAmount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "profileID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "solanaAddress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "threshold",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetVaultsResponse"
                        }
                    }
                }
            }
        },
        "/verify": {
            "post": {
                "description": "Verify wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Verify wallet address",
                "parameters": [
                    {
                        "description": "Verify wallet address request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.VerifyWalletAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseStatus"
                        }
                    }
                }
            }
        },
        "/verify/assign-role": {
            "post": {
                "description": "Assign verified role if user has verified wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Assign verified role if user has verified wallet address",
                "parameters": [
                    {
                        "description": "Assign verified role request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AssignVerifiedRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseStatus"
                        }
                    }
                }
            }
        },
        "/verify/config": {
            "put": {
                "description": "Update guild config wallet verification message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Update guild config wallet verification message",
                "parameters": [
                    {
                        "description": "Update guild config wallet verification message request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NewGuildConfigWalletVerificationMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NewGuildConfigWalletVerificationMessageResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Config wallet verification message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Config wallet verification message",
                "parameters": [
                    {
                        "description": "New guild config wallet verification message request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NewGuildConfigWalletVerificationMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NewGuildConfigWalletVerificationMessageResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete guild config wallet verification message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Delete guild config wallet verification message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseStatus"
                        }
                    }
                }
            }
        },
        "/verify/config/{guild_id}": {
            "get": {
                "description": "Get guild config wallet verification message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Get guild config wallet verification message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NewGuildConfigWalletVerificationMessageResponse"
                        }
                    }
                }
            }
        },
        "/verify/generate": {
            "post": {
                "description": "Generate verification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Generate verification",
                "parameters": [
                    {
                        "description": "Generate verification request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GenerateVerificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GenerateVerificationResponse"
                        }
                    }
                }
            }
        },
        "/widget/device": {
            "get": {
                "description": "Get user current device data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Widget"
                ],
                "summary": "Get user current device data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "device_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserDeviceResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Upsert user current device data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Widget"
                ],
                "summary": "Upsert user current device data",
                "parameters": [
                    {
                        "description": "Upsert user device",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertUserDeviceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete user current device data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Widget"
                ],
                "summary": "Delete user current device data",
                "parameters": [
                    {
                        "description": "Delete user device",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteUserDeviceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/widget/token-alert": {
            "get": {
                "description": "Get user current token alerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Widget"
                ],
                "summary": "Get user current token alerts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discord ID",
                        "name": "discord_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DiscordUserTokenAlertResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Upsert user token alerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Widget"
                ],
                "summary": "Upsert user token alerts",
                "parameters": [
                    {
                        "description": "Upsert user token alert",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertDiscordUserAlertRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete user token alerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Widget"
                ],
                "summary": "Delete user token alerts",
                "parameters": [
                    {
                        "description": "Delete user token alert",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteDiscordUserAlertRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "discordgo.User": {
            "type": "object",
            "properties": {
                "accent_color": {
                    "description": "User's banner color, encoded as an integer representation of hexadecimal color code",
                    "type": "integer"
                },
                "avatar": {
                    "description": "The hash of the user's avatar. Use Session.UserAvatar\nto retrieve the avatar itself.",
                    "type": "string"
                },
                "banner": {
                    "description": "The hash of the user's banner image.",
                    "type": "string"
                },
                "bot": {
                    "description": "Whether the user is a bot.",
                    "type": "boolean"
                },
                "discriminator": {
                    "description": "The discriminator of the user (4 numbers after name).",
                    "type": "string"
                },
                "email": {
                    "description": "The email of the user. This is only present when\nthe application possesses the email scope for the user.",
                    "type": "string"
                },
                "flags": {
                    "description": "The flags on a user's account.\nOnly available when the request is authorized via a Bearer token.",
                    "type": "integer"
                },
                "id": {
                    "description": "The ID of the user.",
                    "type": "string"
                },
                "locale": {
                    "description": "The user's chosen language option.",
                    "type": "string"
                },
                "mfa_enabled": {
                    "description": "Whether the user has multi-factor authentication enabled.",
                    "type": "boolean"
                },
                "premium_type": {
                    "description": "The type of Nitro subscription on a user's account.\nOnly available when the request is authorized via a Bearer token.",
                    "type": "integer"
                },
                "public_flags": {
                    "description": "The public flags on a user's account.\nThis is a combination of bit masks; the presence of a certain flag can\nbe checked by performing a bitwise AND between this int and the flag.",
                    "type": "integer"
                },
                "system": {
                    "description": "Whether the user is an Official Discord System user (part of the urgent message system).",
                    "type": "boolean"
                },
                "token": {
                    "description": "The token of the user. This is only present for\nthe user represented by the current session.",
                    "type": "string"
                },
                "username": {
                    "description": "The user's username.",
                    "type": "string"
                },
                "verified": {
                    "description": "Whether the user's email is verified.",
                    "type": "boolean"
                }
            }
        },
        "entities.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "integer"
                }
            }
        },
        "model.Activity": {
            "type": "object",
            "properties": {
                "guild_default": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "xp": {
                    "type": "integer"
                }
            }
        },
        "model.Chain": {
            "type": "object",
            "properties": {
                "coin_gecko_id": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "short_name": {
                    "type": "string"
                }
            }
        },
        "model.CoingeckoSupportedTokens": {
            "type": "object",
            "properties": {
                "current_price": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "model.CommonwealthDiscussionSubscription": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "discord_thread_id": {
                    "type": "string"
                },
                "discussion_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.ConfigXpLevel": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "integer"
                },
                "min_xp": {
                    "type": "integer"
                }
            }
        },
        "model.DaoProposal": {
            "type": "object",
            "properties": {
                "closed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "creator_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discussion_channel_id": {
                    "type": "string"
                },
                "guild_config_dao_proposal_id": {
                    "type": "integer"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "voting_channel_id": {
                    "type": "string"
                }
            }
        },
        "model.DaoProposalVoteCount": {
            "type": "object",
            "properties": {
                "choice": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "proposal_id": {
                    "type": "string"
                },
                "sum": {
                    "type": "integer"
                }
            }
        },
        "model.DaoProposalVoteOption": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "proposal_id": {
                    "type": "integer"
                },
                "required_amount": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "vote_option": {
                    "$ref": "#/definitions/model.DaoVoteOption"
                },
                "vote_option_id": {
                    "type": "integer"
                }
            }
        },
        "model.DaoVote": {
            "type": "object",
            "properties": {
                "choice": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "point": {
                    "type": "number"
                },
                "proposal_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.DaoVoteOption": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.DiscordGuild": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "alias": {
                    "type": "string"
                },
                "bot_scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "global_xp": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "log_channel": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildRole"
                    }
                }
            }
        },
        "model.DiscordGuildStat": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "nr_of_animated_emojis": {
                    "type": "integer"
                },
                "nr_of_announcement_channels": {
                    "type": "integer"
                },
                "nr_of_bots": {
                    "type": "integer"
                },
                "nr_of_categories": {
                    "type": "integer"
                },
                "nr_of_channels": {
                    "type": "integer"
                },
                "nr_of_custom_stickers": {
                    "type": "integer"
                },
                "nr_of_emojis": {
                    "type": "integer"
                },
                "nr_of_members": {
                    "type": "integer"
                },
                "nr_of_roles": {
                    "type": "integer"
                },
                "nr_of_server_stickers": {
                    "type": "integer"
                },
                "nr_of_stage_channels": {
                    "type": "integer"
                },
                "nr_of_static_emojis": {
                    "type": "integer"
                },
                "nr_of_stickers": {
                    "type": "integer"
                },
                "nr_of_text_channels": {
                    "type": "integer"
                },
                "nr_of_users": {
                    "type": "integer"
                },
                "nr_of_voice_channels": {
                    "type": "integer"
                }
            }
        },
        "model.DiscordUserDevice": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ios_noti_token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.DiscordUserGMStreak": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "last_streak_date": {
                    "type": "string"
                },
                "streak_count": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.DiscordUserTokenAlert": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "device": {
                    "$ref": "#/definitions/model.DiscordUserDevice"
                },
                "device_id": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_enable": {
                    "type": "boolean"
                },
                "price_set": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "trend": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.DiscordUserUpvoteStreak": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "last_streak_date": {
                    "type": "string"
                },
                "streak_count": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Envelop": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.ExtraFee": {
            "type": "object",
            "properties": {
                "chargeFeeBy": {
                    "type": "string"
                },
                "feeAmount": {
                    "type": "string"
                },
                "feeReceiver": {
                    "type": "string"
                },
                "isImBps": {
                    "type": "boolean"
                }
            }
        },
        "model.GuildConfigActivity": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "activity": {
                    "$ref": "#/definitions/model.Activity"
                },
                "activity_id": {
                    "type": "integer"
                },
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigAdminRole": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigDaoProposal": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "authority": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "guideline_channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "proposal_channel_id": {
                    "type": "string"
                },
                "required_amount": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigDaoTracker": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "space": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigDefaultCollection": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigDefaultTicker": {
            "type": "object",
            "properties": {
                "default_ticker": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigGmGn": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "emoji": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "sticker": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigInviteTracker": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "webhook_url": {
                    "$ref": "#/definitions/model.JSONNullString"
                }
            }
        },
        "model.GuildConfigLevelRole": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "level_config": {
                    "$ref": "#/definitions/model.ConfigXpLevel"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigLevelupMessage": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigMixRole": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nft_requirement": {
                    "$ref": "#/definitions/model.MixRoleNFTRequirement"
                },
                "nft_requirement_id": {
                    "type": "integer"
                },
                "required_level": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "string"
                },
                "token_requirement": {
                    "$ref": "#/definitions/model.MixRoleTokenRequirement"
                },
                "token_requirement_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigRepostReaction": {
            "type": "object",
            "properties": {
                "emoji": {
                    "type": "string"
                },
                "emoji_start": {
                    "type": "string"
                },
                "emoji_stop": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "reaction_type": {
                    "type": "string"
                },
                "repost_channel_id": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigSalesTracker": {
            "type": "object",
            "properties": {
                "chain": {
                    "type": "string"
                },
                "channel_id": {
                    "type": "string"
                },
                "contract_address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigTokenRole": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "required_amount": {
                    "type": "number"
                },
                "role_id": {
                    "type": "string"
                },
                "token": {
                    "$ref": "#/definitions/model.Token"
                },
                "token_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigTwitterBlacklist": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "twitter_id": {
                    "type": "string"
                },
                "twitter_username": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigTwitterFeed": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "twitter_access_token": {
                    "type": "string"
                },
                "twitter_access_token_secret": {
                    "type": "string"
                },
                "twitter_consumer_key": {
                    "type": "string"
                },
                "twitter_consumer_secret": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigVoteChannel": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigWalletVerificationMessage": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "discord_message_id": {
                    "type": "string"
                },
                "embedded_message": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "guild_id": {
                    "type": "string"
                },
                "verify_channel_id": {
                    "type": "string"
                },
                "verify_role_id": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigWelcomeChannel": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "welcome_message": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigXPRole": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "required_xp": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.GuildRole": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "model.GuildUser": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "invited_by": {
                    "type": "string"
                },
                "joined_at": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.GuildUserXP": {
            "type": "object",
            "properties": {
                "guild": {
                    "$ref": "#/definitions/model.DiscordGuild"
                },
                "guild_id": {
                    "type": "string"
                },
                "guild_rank": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "nr_of_actions": {
                    "type": "integer"
                },
                "progress": {
                    "type": "number"
                },
                "total_xp": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.JSONNullString": {
            "type": "object",
            "properties": {
                "string": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if String is not NULL",
                    "type": "boolean"
                }
            }
        },
        "model.KyberswapSupportedToken": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "chain_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "decimals": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "logo_uri": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.MixRoleNFTRequirement": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nft_collection": {
                    "$ref": "#/definitions/model.NFTCollection"
                },
                "nft_collection_id": {
                    "type": "string"
                },
                "required_amount": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.MixRoleTokenRequirement": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "required_amount": {
                    "type": "number"
                },
                "token": {
                    "$ref": "#/definitions/model.Token"
                },
                "token_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.MonikerConfig": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "moniker": {
                    "type": "string"
                },
                "plural": {
                    "type": "string"
                },
                "token": {
                    "$ref": "#/definitions/model.OffchainTipBotToken"
                },
                "token_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.NFTCollection": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "erc_format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "model.NFTCollectionDetail": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "chain": {
                    "$ref": "#/definitions/model.Chain"
                },
                "chain_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "erc_format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "model.NewListedNFTCollection": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "chain": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "erc_format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "model.NftSoulbound": {
            "type": "object",
            "properties": {
                "collection_address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "total_soulbound": {
                    "type": "integer"
                },
                "trait_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model.OffchainTipBotToken": {
            "type": "object",
            "properties": {
                "coin_gecko_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "service_fee": {
                    "type": "number"
                },
                "status": {
                    "type": "integer"
                },
                "token_id": {
                    "type": "string"
                },
                "token_name": {
                    "type": "string"
                },
                "token_symbol": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.OffchainTipBotTransferHistory": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "fee_amount": {
                    "type": "number"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "log_id": {
                    "type": "string"
                },
                "receiver_id": {
                    "type": "string"
                },
                "sender_id": {
                    "type": "string"
                },
                "service_fee": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "tx_hash": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.OnchainTipBotTransaction": {
            "type": "object",
            "properties": {
                "all": {
                    "type": "boolean"
                },
                "amount": {
                    "type": "number"
                },
                "channel_id": {
                    "type": "string"
                },
                "claimed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "each": {
                    "type": "boolean"
                },
                "full_command": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "recipient_address": {
                    "type": "string"
                },
                "recipients": {
                    "type": "string"
                },
                "sender": {
                    "type": "string"
                },
                "string": {
                    "description": "(pending, claimed)",
                    "type": "string"
                },
                "token_symbol": {
                    "type": "string"
                },
                "transfer_type": {
                    "type": "string"
                },
                "tx_hash": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Quest": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "frequency": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "rewards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.QuestReward"
                    }
                },
                "routine": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.QuestReward": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "pass_id": {
                    "type": "string"
                },
                "quest_id": {
                    "type": "string"
                },
                "reward_amount": {
                    "type": "integer"
                },
                "reward_type": {
                    "$ref": "#/definitions/model.QuestRewardType"
                },
                "reward_type_id": {
                    "type": "string"
                }
            }
        },
        "model.QuestRewardType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.QuestUserList": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "current": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_claimed": {
                    "type": "boolean"
                },
                "is_completed": {
                    "type": "boolean"
                },
                "multiplier": {
                    "type": "number"
                },
                "quest": {
                    "$ref": "#/definitions/model.Quest"
                },
                "quest_id": {
                    "type": "string"
                },
                "routine": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "target": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.QuestUserReward": {
            "type": "object",
            "properties": {
                "claimed_at": {
                    "type": "string"
                },
                "pass_id": {
                    "type": "string"
                },
                "quest_id": {
                    "type": "string"
                },
                "reward": {
                    "$ref": "#/definitions/model.QuestReward"
                },
                "reward_amount": {
                    "type": "integer"
                },
                "reward_id": {
                    "type": "string"
                },
                "reward_type_id": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.RouteElement": {
            "type": "object",
            "properties": {
                "amountOut": {
                    "type": "string"
                },
                "exchange": {
                    "type": "string"
                },
                "extra": {},
                "limitReturnAmount": {
                    "type": "string"
                },
                "pool": {
                    "type": "string"
                },
                "poolExtra": {},
                "poolLength": {
                    "type": "integer"
                },
                "poolType": {
                    "type": "string"
                },
                "swapAmount": {
                    "type": "string"
                },
                "tokenIn": {
                    "type": "string"
                },
                "tokenOut": {
                    "type": "string"
                }
            }
        },
        "model.RouteSummary": {
            "type": "object",
            "properties": {
                "amountIn": {
                    "type": "string"
                },
                "amountInUsd": {
                    "type": "string"
                },
                "amountOut": {
                    "type": "string"
                },
                "amountOutUsd": {
                    "type": "string"
                },
                "extraFee": {
                    "$ref": "#/definitions/model.ExtraFee"
                },
                "gas": {
                    "type": "string"
                },
                "gasPrice": {
                    "type": "string"
                },
                "gasUsd": {
                    "type": "string"
                },
                "route": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/model.RouteElement"
                        }
                    }
                },
                "tokenIn": {
                    "type": "string"
                },
                "tokenInMarketPriceAvailable": {
                    "type": "boolean"
                },
                "tokenOut": {
                    "type": "string"
                },
                "tokenOutMarketPriceAvailable": {
                    "type": "boolean"
                }
            }
        },
        "model.SaleBotMarketplace": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.SaleBotTwitterConfig": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "collection_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "marketplace": {
                    "$ref": "#/definitions/model.SaleBotMarketplace"
                },
                "marketplace_id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Token": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain": {
                    "$ref": "#/definitions/model.Chain"
                },
                "chain_id": {
                    "type": "integer"
                },
                "coin_gecko_id": {
                    "type": "string"
                },
                "decimal": {
                    "type": "integer"
                },
                "discord_bot_supported": {
                    "type": "boolean"
                },
                "guild_default": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "is_native": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "model.TradeItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "is_from": {
                    "type": "boolean"
                },
                "token_address": {
                    "type": "string"
                },
                "token_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "trade_offer_id": {
                    "type": "string"
                }
            }
        },
        "model.TradeOffer": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "have_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TradeItem"
                    }
                },
                "id": {
                    "type": "string"
                },
                "owner_address": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "want_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TradeItem"
                    }
                }
            }
        },
        "model.Treasurer": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_discord_id": {
                    "type": "string"
                },
                "vault": {
                    "$ref": "#/definitions/model.Vault"
                },
                "vault_id": {
                    "type": "integer"
                }
            }
        },
        "model.TwitterPostStreak": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "last_streak_date": {
                    "type": "string"
                },
                "streak_count": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                },
                "twitter_handle": {
                    "type": "string"
                },
                "twitter_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.UpvoteStreakTier": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "streak_required": {
                    "type": "integer"
                },
                "vote_interval": {
                    "type": "integer"
                },
                "xp_per_interval": {
                    "type": "integer"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "discriminator": {
                    "type": "string"
                },
                "guild_users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildUser"
                    }
                },
                "id": {
                    "type": "string"
                },
                "nr_of_join": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.UserEnvelopStreak": {
            "type": "object",
            "properties": {
                "total_envelop": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.UserFactionXpsMapping": {
            "type": "object",
            "properties": {
                "academy_xp": {
                    "type": "integer"
                },
                "imperial_xp": {
                    "type": "integer"
                },
                "merchant_xp": {
                    "type": "integer"
                },
                "rebellio_xp": {
                    "type": "integer"
                }
            }
        },
        "model.UserFeedback": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "completed_at": {
                    "type": "string"
                },
                "confirmed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "feedback": {
                    "type": "string"
                },
                "id": {
                    "$ref": "#/definitions/uuid.NullUUID"
                },
                "message_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.UserTelegramDiscordAssociation": {
            "type": "object",
            "properties": {
                "discord_id": {
                    "type": "string"
                },
                "telegram_username": {
                    "type": "string"
                }
            }
        },
        "model.UserTokenSupportRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "coin_gecko_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "decimal": {
                    "type": "integer"
                },
                "guild_id": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "token_address": {
                    "type": "string"
                },
                "token_chain_id": {
                    "type": "integer"
                },
                "token_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_discord_id": {
                    "type": "string"
                }
            }
        },
        "model.UserWallet": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain_type": {
                    "$ref": "#/definitions/model.JSONNullString"
                },
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "user": {
                    "description": "preload user",
                    "$ref": "#/definitions/model.User"
                },
                "user_discord_id": {
                    "type": "string"
                }
            }
        },
        "model.UserWalletWatchlist": {
            "type": "object",
            "properties": {
                "copying": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UserWalletWatchlistItem"
                    }
                },
                "following": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UserWalletWatchlistItem"
                    }
                },
                "tracking": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UserWalletWatchlistItem"
                    }
                }
            }
        },
        "model.UserWalletWatchlistItem": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "chain_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "fetched_data": {
                    "type": "boolean"
                },
                "is_owner": {
                    "type": "boolean"
                },
                "net_worth": {
                    "type": "number"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.Vault": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "solana_wallet_address": {
                    "type": "string"
                },
                "threshold": {
                    "type": "string"
                },
                "total_amount_evm": {
                    "type": "string"
                },
                "total_amount_solana": {
                    "type": "string"
                },
                "treasurers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Treasurer"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "wallet_address": {
                    "type": "string"
                },
                "wallet_number": {
                    "type": "integer"
                }
            }
        },
        "request.AddNftWatchlistRequest": {
            "type": "object",
            "properties": {
                "chain": {
                    "type": "string"
                },
                "collection_address": {
                    "type": "string"
                },
                "collection_symbol": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.AddToTwitterBlackListRequest": {
            "type": "object",
            "properties": {
                "created_by": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "twitter_id": {
                    "type": "string"
                },
                "twitter_username": {
                    "type": "string"
                }
            }
        },
        "request.AddToWatchlistRequest": {
            "type": "object",
            "properties": {
                "coin_gecko_id": {
                    "type": "string"
                },
                "is_fiat": {
                    "type": "boolean"
                },
                "symbol": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.AddTokenPriceAlertRequest": {
            "type": "object",
            "properties": {
                "alert_type": {
                    "type": "string",
                    "enum": [
                        "price_reaches",
                        "price_rises_above",
                        "price_drops_to",
                        "change_is_over",
                        "change_is_under"
                    ]
                },
                "frequency": {
                    "type": "string",
                    "enum": [
                        "only_once",
                        "once_a_day",
                        "always"
                    ]
                },
                "price_by_percent": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "user_discord_id": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "request.AssignVerifiedRoleRequest": {
            "type": "object",
            "required": [
                "guild_id",
                "user_discord_id"
            ],
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "user_discord_id": {
                    "type": "string"
                }
            }
        },
        "request.BalcklistChannelRepostConfigRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.ClaimOnchainTransferRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "claim_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.ClaimQuestsRewardsRequest": {
            "type": "object",
            "properties": {
                "quest_id": {
                    "type": "string"
                },
                "routine": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.ConfigDefaultCollection": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "request.ConfigDefaultTokenRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "request.ConfigGroupNFTRoleRequest": {
            "type": "object",
            "properties": {
                "collection_address": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "group_name": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "number_of_tokens": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "request.ConfigLevelRoleRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "request.ConfigRepostReactionStartStop": {
            "type": "object",
            "properties": {
                "emoji_start": {
                    "type": "string"
                },
                "emoji_stop": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "repost_channel_id": {
                    "type": "string"
                }
            }
        },
        "request.ConfigRepostRequest": {
            "type": "object",
            "properties": {
                "emoji": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "repost_channel_id": {
                    "type": "string"
                }
            }
        },
        "request.ConfigureInviteRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "log_channel": {
                    "type": "string"
                },
                "webhook_url": {
                    "type": "string"
                }
            }
        },
        "request.CreateCommonwealthDiscussionSubscription": {
            "type": "object",
            "required": [
                "discord_thread_id",
                "discussion_id"
            ],
            "properties": {
                "discord_thread_id": {
                    "type": "string"
                },
                "discussion_id": {
                    "type": "integer"
                }
            }
        },
        "request.CreateDaoProposalRequest": {
            "type": "object",
            "properties": {
                "creator_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "vote_option": {
                    "$ref": "#/definitions/request.VoteOptionRequest"
                },
                "voting_channel_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateDaoVoteRequest": {
            "type": "object",
            "required": [
                "choice",
                "proposal_id",
                "user_id"
            ],
            "properties": {
                "choice": {
                    "type": "string"
                },
                "proposal_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateDefaultRoleRequest": {
            "type": "object",
            "required": [
                "guild_id",
                "role_id"
            ],
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateEnvelop": {
            "type": "object",
            "required": [
                "command",
                "user_id"
            ],
            "properties": {
                "command": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateGuildAdminRoleRequest": {
            "type": "object",
            "required": [
                "guild_id",
                "role_ids"
            ],
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.CreateGuildMixRole": {
            "type": "object",
            "required": [
                "guild_id",
                "role_id"
            ],
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "nft_requirement": {
                    "$ref": "#/definitions/request.MixRoleNFTRequirement"
                },
                "required_level": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "string"
                },
                "token_requirement": {
                    "$ref": "#/definitions/request.MixRoleTokenRequirement"
                }
            }
        },
        "request.CreateGuildRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.CreateGuildTokenRole": {
            "type": "object",
            "required": [
                "address",
                "amount",
                "chain",
                "guild_id",
                "role_id"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "chain": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateGuildXPRole": {
            "type": "object",
            "required": [
                "guild_id",
                "role_id"
            ],
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                },
                "xp": {
                    "type": "integer"
                }
            }
        },
        "request.CreateNFTCollectionRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "chain": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "priority_flag": {
                    "type": "boolean"
                }
            }
        },
        "request.CreateProposalChannelConfig": {
            "type": "object",
            "required": [
                "authority",
                "channel_id",
                "guild_id"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "authority": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "token_holder"
                    ]
                },
                "chain": {
                    "type": "string"
                },
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "required_amount": {
                    "type": "number"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "nft_collection",
                        "crypto_token"
                    ]
                }
            }
        },
        "request.CreateSalesTrackerConfigRequest": {
            "type": "object",
            "properties": {
                "chain": {
                    "type": "string"
                },
                "channel_id": {
                    "type": "string"
                },
                "contract_address": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateTipConfigNotify": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "request.CreateTradeOfferRequest": {
            "type": "object",
            "required": [
                "owner_address"
            ],
            "properties": {
                "have_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.TradeOfferItem"
                    }
                },
                "owner_address": {
                    "type": "string"
                },
                "want_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.TradeOfferItem"
                    }
                }
            }
        },
        "request.CreateTwitterSaleConfigRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "marketplace": {
                    "type": "string"
                }
            }
        },
        "request.CreateUserRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "invited_by": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.CreateUserTokenSupportRequest": {
            "type": "object",
            "required": [
                "channel_id",
                "guild_id",
                "message_id",
                "token_address",
                "token_chain",
                "user_discord_id"
            ],
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "token_address": {
                    "type": "string"
                },
                "token_chain": {
                    "type": "string"
                },
                "user_discord_id": {
                    "type": "string"
                }
            }
        },
        "request.DeleteDiscordUserAlertRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "request.DeleteGuildConfigDaoProposal": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "request.DeleteGuildConfigDaoTracker": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "request.DeleteJoinLeaveChannelConfigRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.DeleteMonikerConfigRequest": {
            "type": "object",
            "required": [
                "guild_id",
                "moniker"
            ],
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "moniker": {
                    "type": "string"
                }
            }
        },
        "request.DeleteUserDeviceRequest": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string"
                }
            }
        },
        "request.DeleteVoteChannelConfigRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.DeleteWelcomeConfigRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.EditMessageRepostRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "origin_channel_id": {
                    "type": "string"
                },
                "origin_message_id": {
                    "type": "string"
                },
                "repost_channel_id": {
                    "type": "string"
                },
                "repost_message_id": {
                    "type": "string"
                }
            }
        },
        "request.GenerateVerificationRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "is_reverify": {
                    "type": "boolean"
                },
                "user_discord_id": {
                    "type": "string"
                }
            }
        },
        "request.GetTrackingWalletsRequest": {
            "type": "object",
            "required": [
                "userID"
            ],
            "properties": {
                "userID": {
                    "type": "string"
                }
            }
        },
        "request.GuildConfigDefaultNftTickerRequest": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "collection_address": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "request.GuildConfigDefaultTickerRequest": {
            "type": "object",
            "properties": {
                "default_ticker": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "request.GuildIDRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.LinkUserTelegramWithDiscordRequest": {
            "type": "object",
            "required": [
                "discord_id",
                "telegram_username"
            ],
            "properties": {
                "discord_id": {
                    "type": "string"
                },
                "telegram_username": {
                    "type": "string"
                }
            }
        },
        "request.LoginRequest": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "request.MixRoleNFTRequirement": {
            "type": "object",
            "required": [
                "amount",
                "nft_id"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "nft_id": {
                    "type": "string"
                }
            }
        },
        "request.MixRoleTokenRequirement": {
            "type": "object",
            "required": [
                "amount",
                "token_id"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "token_id": {
                    "type": "integer"
                }
            }
        },
        "request.NewGuildConfigWalletVerificationMessageRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "discord_message_id": {
                    "type": "string"
                },
                "embedded_message": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "guild_id": {
                    "type": "string"
                },
                "verify_channel_id": {
                    "type": "string"
                },
                "verify_role_id": {
                    "type": "string"
                }
            }
        },
        "request.OffchainTransferRequest": {
            "type": "object",
            "properties": {
                "all": {
                    "type": "boolean"
                },
                "amount": {
                    "type": "number"
                },
                "amount_string": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "channel_id": {
                    "type": "string"
                },
                "each": {
                    "type": "boolean"
                },
                "guild_id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sender": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "transfer_type": {
                    "type": "string"
                }
            }
        },
        "request.RoleReactionRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "reaction": {
                    "type": "string"
                }
            }
        },
        "request.RoleReactionUpdateRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "reaction": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "request.SendUserXPRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "each": {
                    "type": "boolean"
                },
                "guild_id": {
                    "type": "string"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.SetUpvoteMessageCacheRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.SwapRequest": {
            "type": "object",
            "required": [
                "chainName",
                "userDiscordId"
            ],
            "properties": {
                "chainName": {
                    "type": "string"
                },
                "routeSummary": {
                    "$ref": "#/definitions/model.RouteSummary"
                },
                "userDiscordId": {
                    "type": "string"
                }
            }
        },
        "request.TrackWalletRequest": {
            "type": "object",
            "required": [
                "address",
                "chain_type",
                "type"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "chain_type": {
                    "type": "string"
                },
                "channel_id": {
                    "type": "string"
                },
                "is_owner": {
                    "type": "boolean"
                },
                "message_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.TradeOfferItem": {
            "type": "object",
            "required": [
                "token_address",
                "token_ids"
            ],
            "properties": {
                "token_address": {
                    "type": "string"
                },
                "token_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.TwitterHashtag": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "from_twitter": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "guild_id": {
                    "type": "string"
                },
                "hashtag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rule_id": {
                    "type": "string"
                },
                "twitter_username": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.TwitterPost": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "tweet_id": {
                    "type": "string"
                },
                "twitter_handle": {
                    "type": "string"
                },
                "twitter_id": {
                    "type": "string"
                }
            }
        },
        "request.UpdateDaoVoteRequest": {
            "type": "object",
            "required": [
                "choice",
                "user_id"
            ],
            "properties": {
                "choice": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.UpdateGuildRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "global_xp": {
                    "type": "boolean"
                },
                "left_at": {
                    "type": "string"
                },
                "log_channel": {
                    "type": "string"
                }
            }
        },
        "request.UpdateQuestProgressRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.UpdateUserFeedbackRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "request.UpsertCustomTokenConfigRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "address": {
                    "type": "string"
                },
                "chain": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "coin_gecko_id": {
                    "type": "string"
                },
                "decimals": {
                    "type": "integer"
                },
                "discord_bot_supported": {
                    "type": "boolean"
                },
                "guild_default": {
                    "type": "boolean"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "request.UpsertDiscordUserAlertRequest": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_enable": {
                    "type": "boolean"
                },
                "price_set": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "trend": {
                    "type": "string"
                }
            }
        },
        "request.UpsertGmConfigRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "emoji": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "sticker": {
                    "type": "string"
                }
            }
        },
        "request.UpsertGuildConfigDaoTracer": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "snapshot_url": {
                    "type": "string"
                }
            }
        },
        "request.UpsertGuildConfigTipRangeRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "max": {
                    "type": "number"
                },
                "min": {
                    "type": "number"
                }
            }
        },
        "request.UpsertGuildDefaultCurrencyRequest": {
            "type": "object",
            "properties": {
                "Symbol": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.UpsertGuildPruneExcludeRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "request.UpsertGuildTokenConfigRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "guild_id": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "request.UpsertJoinLeaveChannelConfigRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.UpsertMonikerConfigRequest": {
            "type": "object",
            "required": [
                "amount",
                "guild_id",
                "moniker",
                "token"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "guild_id": {
                    "type": "string"
                },
                "moniker": {
                    "type": "string"
                },
                "plural": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "request.UpsertUserDeviceRequest": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string"
                },
                "ios_noti_token": {
                    "type": "string"
                }
            }
        },
        "request.UpsertUserTag": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.UpsertVoteChannelConfigRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.UpsertWelcomeConfigRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "welcome_message": {
                    "type": "string"
                }
            }
        },
        "request.UserFeedbackRequest": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "command": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "feedback": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.VerifyWalletAddressRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "wallet_address": {
                    "type": "string"
                }
            }
        },
        "request.VoteOptionRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "required_amount": {
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.AddToWatchlistResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.AddToWatchlistResponseData"
                }
            }
        },
        "response.AddToWatchlistResponseData": {
            "type": "object",
            "properties": {
                "base_suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoingeckoSupportedTokens"
                    }
                },
                "target_suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoingeckoSupportedTokens"
                    }
                }
            }
        },
        "response.AddTokenPriceAlertResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.TokenPriceAlertResponseData"
                }
            }
        },
        "response.ChainGasTrackerResponseData": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GasTrackerResponse"
                }
            }
        },
        "response.ClaimOnchainTransfer": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "amount_in_usd": {
                    "type": "number"
                },
                "recipient_address": {
                    "type": "string"
                },
                "recipient_id": {
                    "type": "string"
                },
                "sender_id": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "tx_hash": {
                    "type": "string"
                },
                "tx_url": {
                    "type": "string"
                }
            }
        },
        "response.ClaimOnchainTransferResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.ClaimOnchainTransfer"
                }
            }
        },
        "response.ClaimQuestsRewardsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.ClaimQuestsRewardsResponseData"
                }
            }
        },
        "response.ClaimQuestsRewardsResponseData": {
            "type": "object",
            "properties": {
                "rewards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.QuestUserReward"
                    }
                }
            }
        },
        "response.Coin": {
            "type": "object",
            "properties": {
                "coin_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "large": {
                    "type": "string"
                },
                "market_cap_rank": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price_btc": {
                    "type": "number"
                },
                "score": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "small": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "thumb": {
                    "type": "string"
                }
            }
        },
        "response.CoinImage": {
            "type": "object",
            "properties": {
                "large": {
                    "type": "string"
                },
                "small": {
                    "type": "string"
                },
                "thumb": {
                    "type": "string"
                }
            }
        },
        "response.CoinMarketItemData": {
            "type": "object",
            "properties": {
                "current_price": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_default": {
                    "type": "boolean"
                },
                "is_pair": {
                    "type": "boolean"
                },
                "market_cap": {
                    "type": "number"
                },
                "market_cap_rank": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price_change_percentage_1h_in_currency": {
                    "type": "number"
                },
                "price_change_percentage_24h": {
                    "type": "number"
                },
                "price_change_percentage_24h_in_currency": {
                    "type": "number"
                },
                "price_change_percentage_7d_in_currency": {
                    "type": "number"
                },
                "sparkline_in_7d": {
                    "type": "object",
                    "properties": {
                        "price": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    }
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.CoinPlatformDetailData": {
            "type": "object",
            "properties": {
                "contract_address": {
                    "type": "string"
                },
                "decimal_place": {
                    "type": "integer"
                }
            }
        },
        "response.CoinPriceHistoryResponse": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "times": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timestamps": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "response.CollectionSuggestions": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.CompareTokenReponseData": {
            "type": "object",
            "properties": {
                "base_coin": {
                    "$ref": "#/definitions/response.GetCoinResponse"
                },
                "base_coin_suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoingeckoSupportedTokens"
                    }
                },
                "from": {
                    "type": "string"
                },
                "ratios": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "target_coin": {
                    "$ref": "#/definitions/response.GetCoinResponse"
                },
                "target_coin_suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoingeckoSupportedTokens"
                    }
                },
                "times": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "response.CompareTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.CompareTokenReponseData"
                }
            }
        },
        "response.ConfigGroupNFTRoleResponse": {
            "type": "object",
            "properties": {
                "group_name": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "nft_collection_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NFTCollectionConfig"
                    }
                },
                "number_of_tokens": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "response.ConfigNotifyResponse": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "total_transaction": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.ConfigureInvitesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "response.CreateCommonwealthDiscussionSubscription": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.CommonwealthDiscussionSubscription"
                }
            }
        },
        "response.CreateDaoProposalResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.DaoProposal"
                }
            }
        },
        "response.CreateEnvelop": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Envelop"
                }
            }
        },
        "response.CreateGuildMixRole": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigMixRole"
                }
            }
        },
        "response.CreateGuildTokenRole": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigTokenRole"
                }
            }
        },
        "response.CreateGuildXPRole": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigXPRole"
                }
            }
        },
        "response.CreateNFTCollectionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.NFTCollection"
                }
            }
        },
        "response.CreateProposalChannelConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigDaoProposal"
                }
            }
        },
        "response.CreateTradeOfferResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.TradeOffer"
                }
            }
        },
        "response.CreateTwitterSaleConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.SaleBotTwitterConfig"
                }
            }
        },
        "response.CreateUserTokenSupportRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.UserTokenSupportRequest"
                }
            }
        },
        "response.CurrentUserUpvoteStreakResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetUserCurrentUpvoteStreakResponse"
                }
            }
        },
        "response.DaoTrackerSpaceCountData": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "source": {
                    "type": "string"
                },
                "space": {
                    "type": "string"
                }
            }
        },
        "response.DaoTrackerSpaceCountResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DaoTrackerSpaceCountData"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/response.PaginationResponse"
                }
            }
        },
        "response.DataFilterConfigByReaction": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.RoleReactionResponse"
                },
                "page": {
                    "description": "page index",
                    "type": "integer"
                },
                "size": {
                    "description": "page size",
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.DataListRoleReactionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.ListRoleReactionResponse"
                },
                "page": {
                    "description": "page index",
                    "type": "integer"
                },
                "size": {
                    "description": "page size",
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.DataMetric": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.Metric"
                }
            }
        },
        "response.DefaultRole": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "response.DefaultRoleResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.DefaultRole"
                }
            }
        },
        "response.DiscordGuildResponse": {
            "type": "object",
            "properties": {
                "bot_addable": {
                    "type": "boolean"
                },
                "bot_arrived": {
                    "type": "boolean"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "boolean"
                },
                "permissions": {
                    "type": "string",
                    "example": "0"
                }
            }
        },
        "response.DiscordGuildRole": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "integer"
                },
                "hoist": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "managed": {
                    "type": "boolean"
                },
                "mentionable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "unicode_emoji": {
                    "type": "string"
                }
            }
        },
        "response.DiscordUserTokenAlertResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DiscordUserTokenAlert"
                    }
                }
            }
        },
        "response.GasTrackerResponse": {
            "type": "object",
            "properties": {
                "chain": {
                    "type": "string"
                },
                "est_fast_time": {
                    "type": "string"
                },
                "est_propose_time": {
                    "type": "string"
                },
                "est_safe_time": {
                    "type": "string"
                },
                "fast_gas_price": {
                    "type": "string"
                },
                "propose_gas_price": {
                    "type": "string"
                },
                "safe_gas_price": {
                    "type": "string"
                }
            }
        },
        "response.GasTrackerResponseData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GasTrackerResponse"
                    }
                }
            }
        },
        "response.GenerateVerificationResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "response.GetAllDaoProposalVotes": {
            "type": "object",
            "properties": {
                "proposal": {
                    "$ref": "#/definitions/response.GetDaoProposalData"
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DaoVote"
                    }
                }
            }
        },
        "response.GetAllDaoProposals": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DaoProposal"
                    }
                }
            }
        },
        "response.GetAllTwitterConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildConfigTwitterFeed"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GetAllTwitterHashtagConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TwitterHashtag"
                    }
                }
            }
        },
        "response.GetAllUserSubmittedAdResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetAllUserSubmittedAdResponse"
                    }
                }
            }
        },
        "response.GetCoinResponse": {
            "type": "object",
            "properties": {
                "asset_platform_id": {
                    "type": "string"
                },
                "block_time_in_minutes": {
                    "type": "integer"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "coingecko_rank": {
                    "type": "integer"
                },
                "coingecko_score": {
                    "type": "number"
                },
                "community_data": {},
                "contract_address": {
                    "type": "string"
                },
                "description": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "detail_platforms": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/response.CoinPlatformDetailData"
                    }
                },
                "developer_data": {},
                "genesis_date": {},
                "hashing_algorithm": {},
                "id": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#/definitions/response.CoinImage"
                },
                "links": {},
                "localization": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "market_cap_rank": {
                    "type": "integer"
                },
                "market_data": {
                    "$ref": "#/definitions/response.MarketData"
                },
                "name": {
                    "type": "string"
                },
                "platforms": {},
                "sentiment_votes_down_percentage": {
                    "type": "number"
                },
                "sentiment_votes_up_percentage": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "tickers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TickerData"
                    }
                },
                "watchlist_users": {
                    "type": "integer"
                }
            }
        },
        "response.GetCoinResponseWrapper": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetCoinResponse"
                }
            }
        },
        "response.GetCoinsMarketDataResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.CoinMarketItemData"
                    }
                }
            }
        },
        "response.GetCollectionCountResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.NFTCollectionCount"
                }
            }
        },
        "response.GetDaoProposalData": {
            "type": "object",
            "properties": {
                "closed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "creator_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discussion_channel_id": {
                    "type": "string"
                },
                "guild_config_dao_proposal_id": {
                    "type": "integer"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DaoProposalVoteCount"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "voting_channel_id": {
                    "type": "string"
                }
            }
        },
        "response.GetDataUserProfileResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetUserProfileResponse"
                }
            }
        },
        "response.GetDefaultTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Token"
                }
            }
        },
        "response.GetDetailNftCollectionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.NFTCollectionDetail"
                }
            }
        },
        "response.GetFiatHistoricalExchangeRatesResponse": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "latest_rate": {
                    "type": "number"
                },
                "rates": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "times": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "response.GetGmConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigGmGn"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GetGuildConfigDaoProposal": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetGuildConfigDaoProposalData"
                }
            }
        },
        "response.GetGuildConfigDaoProposalData": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "authority": {
                    "type": "string"
                },
                "chain": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "guideline_channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "proposal_channel_id": {
                    "type": "string"
                },
                "required_amount": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.GetGuildDefaultNftTickerResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigDefaultCollection"
                }
            }
        },
        "response.GetGuildDefaultTickerResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigDefaultTicker"
                }
            }
        },
        "response.GetGuildLevelUpMessage": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigLevelupMessage"
                }
            }
        },
        "response.GetGuildPruneExcludeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GuildPruneExcludeList"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GetGuildResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "alias": {
                    "type": "string"
                },
                "bot_scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "global_xp": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "log_channel": {
                    "type": "string"
                },
                "log_channel_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.GetGuildTokensResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Token"
                    }
                }
            }
        },
        "response.GetGuildUserResponse": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "invited_by": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "response.GetGuildsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetGuildResponse"
                    }
                }
            }
        },
        "response.GetHistoricalMarketChartResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.CoinPriceHistoryResponse"
                }
            }
        },
        "response.GetInviteTrackerConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigInviteTracker"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GetInvitesLeaderboardResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.UserInvitesAggregation"
                    }
                }
            }
        },
        "response.GetInvitesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.GetLevelRoleConfigsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildConfigLevelRole"
                    }
                },
                "page": {
                    "description": "page index",
                    "type": "integer"
                },
                "size": {
                    "description": "page size",
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.GetLinkedTelegramResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.UserTelegramDiscordAssociation"
                }
            }
        },
        "response.GetListAllChainsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Chain"
                    }
                }
            }
        },
        "response.GetMyInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/discordgo.User"
                }
            }
        },
        "response.GetNFTActivityData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.IndexerNFTActivityData"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/util.Pagination"
                }
            }
        },
        "response.GetNFTActivityResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetNFTActivityData"
                }
            }
        },
        "response.GetNFTCollectionByAddressChain": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discord": {
                    "type": "string"
                },
                "erc_format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "marketplaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "response.GetNFTCollectionByAddressChainResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetNFTCollectionByAddressChain"
                }
            }
        },
        "response.GetNftWatchlist": {
            "type": "object",
            "properties": {
                "floor_price": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_pair": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price_change_percentage_24h": {
                    "type": "number"
                },
                "price_change_percentage_7d_in_currency": {
                    "type": "number"
                },
                "sparkline_in_7d": {
                    "$ref": "#/definitions/response.SparkLineIn7d"
                },
                "symbol": {
                    "type": "string"
                },
                "token": {
                    "$ref": "#/definitions/response.IndexerToken"
                }
            }
        },
        "response.GetNftWatchlistResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetNftWatchlist"
                    }
                }
            }
        },
        "response.GetOnchainTransfersResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.OnchainTipBotTransaction"
                    }
                }
            }
        },
        "response.GetOneWalletResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.UserWalletWatchlistItem"
                }
            }
        },
        "response.GetRepostReactionConfigsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildConfigRepostReaction"
                    }
                }
            }
        },
        "response.GetSaleTwitterConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SaleBotTwitterConfig"
                    }
                }
            }
        },
        "response.GetSalesTrackerConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildConfigSalesTracker"
                    }
                }
            }
        },
        "response.GetSoulBoundNFTResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.NftSoulbound"
                    }
                }
            }
        },
        "response.GetSuggestionNFTCollectionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.CollectionSuggestions"
                    }
                }
            }
        },
        "response.GetSupportedChains": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.GetSupportedTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Token"
                }
            }
        },
        "response.GetSupportedTokensResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Token"
                    }
                }
            }
        },
        "response.GetTopGainerLoser": {
            "type": "object",
            "properties": {
                "top_gainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetTopGainerLoserCoin"
                    }
                },
                "top_losers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetTopGainerLoserCoin"
                    }
                }
            }
        },
        "response.GetTopGainerLoserCoin": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "market_cap_rank": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "usd": {
                    "type": "number"
                },
                "usd_14d_change": {
                    "type": "number"
                },
                "usd_1h_change": {
                    "type": "number"
                },
                "usd_1y_change": {
                    "type": "number"
                },
                "usd_24h_change": {
                    "type": "number"
                },
                "usd_24h_vol": {
                    "type": "number"
                },
                "usd_30d_change": {
                    "type": "number"
                },
                "usd_60d_change": {
                    "type": "number"
                },
                "usd_7d_change": {
                    "type": "number"
                }
            }
        },
        "response.GetTrackingWalletsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.UserWalletWatchlist"
                }
            }
        },
        "response.GetTradeOfferResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.TradeOffer"
                }
            }
        },
        "response.GetTrendingSearch": {
            "type": "object",
            "properties": {
                "coins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetTrendingSearchCoin"
                    }
                },
                "exchanges": {
                    "description": "this field coingecko return empty"
                }
            }
        },
        "response.GetTrendingSearchCoin": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/definitions/response.Coin"
                }
            }
        },
        "response.GetTwitterBlackListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildConfigTwitterBlacklist"
                    }
                }
            }
        },
        "response.GetTwitterHashtagConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.TwitterHashtag"
                }
            }
        },
        "response.GetTwitterLeaderboardResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetTwitterLeaderboardResponseData"
                }
            }
        },
        "response.GetTwitterLeaderboardResponseData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TwitterPostStreak"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/response.PaginationResponse"
                }
            }
        },
        "response.GetUpvoteTiersConfig": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UpvoteStreakTier"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GetUserBalances": {
            "type": "object",
            "properties": {
                "balances": {
                    "type": "number"
                },
                "balances_in_usd": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rate_in_usd": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.GetUserBalancesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetUserBalances"
                    }
                }
            }
        },
        "response.GetUserCurrentGMStreakResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.DiscordUserGMStreak"
                }
            }
        },
        "response.GetUserCurrentUpvoteStreakResponse": {
            "type": "object",
            "properties": {
                "discord_id": {
                    "type": "string"
                },
                "last_streak_time": {
                    "type": "string"
                },
                "minutes_until_reset": {
                    "type": "number"
                },
                "minutes_until_reset_discordbotlist": {
                    "type": "number"
                },
                "minutes_until_reset_topgg": {
                    "type": "number"
                },
                "streak_count": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "response.GetUserEnvelopStreak": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.UserEnvelopStreak"
                }
            }
        },
        "response.GetUserProfileResponse": {
            "type": "object",
            "properties": {
                "about_me": {
                    "type": "string"
                },
                "current_level": {
                    "$ref": "#/definitions/model.ConfigXpLevel"
                },
                "guild": {
                    "$ref": "#/definitions/model.DiscordGuild"
                },
                "guild_rank": {
                    "type": "integer"
                },
                "guild_xp": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "next_level": {
                    "$ref": "#/definitions/model.ConfigXpLevel"
                },
                "nr_of_actions": {
                    "type": "integer"
                },
                "progress": {
                    "type": "number"
                },
                "user_faction_xps": {
                    "$ref": "#/definitions/model.UserFactionXpsMapping"
                },
                "user_wallet": {
                    "$ref": "#/definitions/model.UserWallet"
                }
            }
        },
        "response.GetUserQuestListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.QuestUserList"
                    }
                }
            }
        },
        "response.GetUserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.User"
                }
            }
        },
        "response.GetUserSubmittedAdResponse": {
            "type": "object",
            "properties": {
                "ad_channel_id": {
                    "type": "string"
                },
                "creator_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "introduction": {
                    "type": "string"
                },
                "is_podtown_ad": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "string": {
                    "type": "string"
                }
            }
        },
        "response.GetUserUpvoteLeaderboardResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DiscordUserUpvoteStreak"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GetUserWalletByGuildIDAddressResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.UserWallet"
                }
            }
        },
        "response.GetVaultsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Vault"
                    }
                }
            }
        },
        "response.GetVote": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.DaoVote"
                }
            }
        },
        "response.GetVoteChannelConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigVoteChannel"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GetWatchlistResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.CoinMarketItemData"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/response.PaginationResponse"
                }
            }
        },
        "response.GetWelcomeChannelConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigWelcomeChannel"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GuildConfigDaoTrackerResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildConfigDaoTracker"
                    }
                }
            }
        },
        "response.GuildConfigDefaultCurrencyResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "tip_bot_token": {
                    "$ref": "#/definitions/model.OffchainTipBotToken"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.GuildConfigTipRangeResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "max": {
                    "type": "number"
                },
                "min": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.GuildProposalUsageData": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "guild_name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "proposal_count": {
                    "type": "integer"
                }
            }
        },
        "response.GuildProposalUsageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GuildProposalUsageData"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/response.PaginationResponse"
                }
            }
        },
        "response.GuildPruneExcludeList": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.IndexerChain": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "is_evm": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.IndexerGetNFTTokenDetailResponseWithSuggestions": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.IndexerNFTTokenDetailData"
                },
                "default_symbol": {
                    "$ref": "#/definitions/response.CollectionSuggestions"
                },
                "suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.CollectionSuggestions"
                    }
                }
            }
        },
        "response.IndexerGetNFTTokenTickersResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.IndexerNFTTokenTickersData"
                }
            }
        },
        "response.IndexerGetNFTTokensResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.IndexerNFTTokenDetailData"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.IndexerNFTActivityData": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "contract_address": {
                    "type": "string"
                },
                "created_time": {
                    "type": "string"
                },
                "event_type": {
                    "type": "string"
                },
                "from_address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_update_time": {
                    "type": "string"
                },
                "listing_price": {
                    "type": "string"
                },
                "listing_price_obj": {
                    "$ref": "#/definitions/response.IndexerPrice"
                },
                "listing_status": {
                    "type": "string"
                },
                "listing_type": {
                    "type": "string"
                },
                "payment_token": {
                    "type": "integer"
                },
                "platform_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "string"
                },
                "sold_price": {
                    "type": "string"
                },
                "sold_price_obj": {
                    "$ref": "#/definitions/response.IndexerPrice"
                },
                "to_address": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "transaction_hash": {
                    "type": "string"
                }
            }
        },
        "response.IndexerNFTCollectionTickersData": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain": {
                    "$ref": "#/definitions/response.IndexerChain"
                },
                "collection_image": {
                    "type": "string"
                },
                "floor_price": {
                    "$ref": "#/definitions/response.IndexerPrice"
                },
                "items": {
                    "type": "integer"
                },
                "last_sale_price": {
                    "$ref": "#/definitions/response.IndexerPrice"
                },
                "marketplaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "owners": {
                    "type": "integer"
                },
                "price_change_1d": {
                    "type": "string"
                },
                "price_change_30d": {
                    "type": "string"
                },
                "price_change_7d": {
                    "type": "string"
                },
                "tickers": {
                    "$ref": "#/definitions/response.IndexerTickers"
                },
                "total_volume": {
                    "$ref": "#/definitions/response.IndexerPrice"
                }
            }
        },
        "response.IndexerNFTCollectionTickersResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.IndexerNFTCollectionTickersData"
                }
            }
        },
        "response.IndexerNFTTokenAttribute": {
            "type": "object",
            "properties": {
                "collection_address": {
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                },
                "frequency": {
                    "type": "string"
                },
                "rarity": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "trait_type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "response.IndexerNFTTokenDetailData": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.IndexerNFTTokenAttribute"
                    }
                },
                "collection_address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "image_cdn": {
                    "type": "string"
                },
                "image_content_type": {
                    "type": "string"
                },
                "marketplace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NftListingMarketplace"
                    }
                },
                "metadata_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/response.IndexerNftTokenOwner"
                },
                "rarity": {
                    "$ref": "#/definitions/response.IndexerNFTTokenRarity"
                },
                "rarity_rank": {
                    "type": "integer"
                },
                "rarity_score": {
                    "type": "string"
                },
                "rarity_tier": {
                    "type": "string"
                },
                "thumbnail_cdn": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "response.IndexerNFTTokenRarity": {
            "type": "object",
            "properties": {
                "rank": {
                    "type": "integer"
                },
                "rarity": {
                    "type": "string"
                },
                "score": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.IndexerNFTTokenTickersData": {
            "type": "object",
            "properties": {
                "collection_address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "floor_price": {
                    "$ref": "#/definitions/response.IndexerPrice"
                },
                "image": {
                    "type": "string"
                },
                "image_cdn": {
                    "type": "string"
                },
                "last_sale_at": {
                    "type": "string"
                },
                "last_sale_price": {
                    "$ref": "#/definitions/response.IndexerPrice"
                },
                "name": {
                    "type": "string"
                },
                "price_change_30d": {
                    "type": "string"
                },
                "price_change_365d": {
                    "type": "string"
                },
                "price_change_90d": {
                    "type": "string"
                },
                "price_change_percentage_30d": {
                    "type": "string"
                },
                "price_change_percentage_365d": {
                    "type": "string"
                },
                "price_change_percentage_90d": {
                    "type": "string"
                },
                "rarity_rank": {
                    "type": "integer"
                },
                "rarity_score": {
                    "type": "string"
                },
                "rarity_tier": {
                    "type": "string"
                },
                "tickers": {
                    "$ref": "#/definitions/response.IndexerTickers"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "response.IndexerNftTokenOwner": {
            "type": "object",
            "properties": {
                "collection_address": {
                    "type": "string"
                },
                "owner_address": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "response.IndexerPrice": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "token": {
                    "$ref": "#/definitions/response.IndexerToken"
                }
            }
        },
        "response.IndexerTickers": {
            "type": "object",
            "properties": {
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.IndexerPrice"
                    }
                },
                "times": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timestamps": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "response.IndexerToken": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "decimals": {
                    "type": "integer"
                },
                "is_native": {
                    "type": "boolean"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.InvitesAggregationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.UserInvitesAggregation"
                }
            }
        },
        "response.LinkUserTelegramWithDiscordResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.LinkUserTelegramWithDiscordResponseData"
                }
            }
        },
        "response.LinkUserTelegramWithDiscordResponseData": {
            "type": "object",
            "properties": {
                "discord_id": {
                    "type": "string"
                },
                "discord_username": {
                    "type": "string"
                },
                "telegram_username": {
                    "type": "string"
                }
            }
        },
        "response.ListAllCustomTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Token"
                    }
                }
            }
        },
        "response.ListAllNFTCollectionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.NFTCollection"
                    }
                }
            }
        },
        "response.ListConfigNotifyResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ConfigNotifyResponse"
                    }
                }
            }
        },
        "response.ListGuildAdminRoles": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildConfigAdminRole"
                    }
                }
            }
        },
        "response.ListGuildGroupNFTRolesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ListGuildNFTRoleConfigsResponse"
                    }
                }
            }
        },
        "response.ListGuildMixRoles": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildConfigMixRole"
                    }
                }
            }
        },
        "response.ListGuildNFTRoleConfigsResponse": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "nft_collection_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NFTCollectionConfig"
                    }
                },
                "number_of_tokens": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "string"
                },
                "role_name": {
                    "type": "string"
                }
            }
        },
        "response.ListGuildTokenRoles": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildConfigTokenRole"
                    }
                }
            }
        },
        "response.ListGuildXPRoles": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildConfigXPRole"
                    }
                }
            }
        },
        "response.ListMyGuildsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DiscordGuildResponse"
                    }
                }
            }
        },
        "response.ListRoleReactionResponse": {
            "type": "object",
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.RoleReactionByMessage"
                    }
                },
                "guild_id": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "response.ListTokenPriceAlertResponse": {
            "type": "object",
            "properties": {
                "alert_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "frequency": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "snoozed_to": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_discord_id": {
                    "type": "string"
                }
            }
        },
        "response.LogoutResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "response.MarketData": {
            "type": "object",
            "properties": {
                "ath": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "ath_change_percentage": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "ath_date": {},
                "atl": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "circulating_supply": {
                    "type": "number"
                },
                "current_price": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "fdv_to_tvl_ratio": {},
                "fully_diluted_valuation": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "high_24h": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "low_24h": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "market_cap": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "market_cap_change_24h_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "market_cap_change_percentage_24h_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "market_cap_rank": {
                    "type": "integer"
                },
                "max_supply": {
                    "type": "number"
                },
                "mcap_to_tvl_ratio": {},
                "price_change_24h": {
                    "type": "number"
                },
                "price_change_24h_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "price_change_percentage_14d": {
                    "type": "number"
                },
                "price_change_percentage_14d_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "price_change_percentage_1h_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "price_change_percentage_1y": {
                    "type": "number"
                },
                "price_change_percentage_1y_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "price_change_percentage_200d": {
                    "type": "number"
                },
                "price_change_percentage_200d_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "price_change_percentage_24h": {
                    "type": "number"
                },
                "price_change_percentage_24h_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "price_change_percentage_30d": {
                    "type": "number"
                },
                "price_change_percentage_30d_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "price_change_percentage_60d": {
                    "type": "number"
                },
                "price_change_percentage_60d_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "price_change_percentage_7d": {
                    "type": "number"
                },
                "price_change_percentage_7d_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "roi": {},
                "total_market_cap": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "total_supply": {
                    "type": "number"
                },
                "total_value_locked": {},
                "total_volume": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                }
            }
        },
        "response.Metric": {
            "type": "object",
            "properties": {
                "nft_collections": {
                    "type": "integer"
                },
                "server_active_users": {
                    "type": "integer"
                },
                "server_command_usage": {
                    "type": "integer"
                },
                "server_token": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "server_token_supported": {
                    "type": "integer"
                },
                "server_verified_wallets": {
                    "type": "integer"
                },
                "total_active_users": {
                    "type": "integer"
                },
                "total_command_usage": {
                    "type": "integer"
                },
                "total_servers": {
                    "type": "integer"
                },
                "total_token": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "total_token_supported": {
                    "type": "integer"
                },
                "total_verified_wallets": {
                    "type": "integer"
                }
            }
        },
        "response.MonikerConfigData": {
            "type": "object",
            "properties": {
                "moniker": {
                    "$ref": "#/definitions/model.MonikerConfig"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "response.MonikerConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.MonikerConfigData"
                    }
                }
            }
        },
        "response.NFTChainCollectionCount": {
            "type": "object",
            "properties": {
                "chain": {
                    "$ref": "#/definitions/model.Chain"
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "response.NFTCollectionConfig": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "chain_name": {
                    "type": "string"
                },
                "collection_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "erc_format": {
                    "type": "string"
                },
                "explorer_url": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.NFTCollectionCount": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NFTChainCollectionCount"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.NFTCollectionsData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.NFTCollection"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/util.Pagination"
                }
            }
        },
        "response.NFTCollectionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.NFTCollectionsData"
                }
            }
        },
        "response.NFTNewListed": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.NewListedNFTCollection"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/util.Pagination"
                }
            }
        },
        "response.NFTNewListedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.NFTNewListed"
                }
            }
        },
        "response.NFTTradingVolume": {
            "type": "object",
            "properties": {
                "collection_address": {
                    "type": "string"
                },
                "collection_chain_id": {
                    "type": "number"
                },
                "collection_name": {
                    "type": "string"
                },
                "collection_symbol": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "trading_volume": {
                    "type": "number"
                }
            }
        },
        "response.NFTTradingVolumeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NFTTradingVolume"
                    }
                }
            }
        },
        "response.NewGuildConfigWalletVerificationMessageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigWalletVerificationMessage"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "response.NewGuildGroupNFTRoleResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.ConfigGroupNFTRoleResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.NftListingMarketplace": {
            "type": "object",
            "properties": {
                "contract_address": {
                    "type": "string"
                },
                "floor_price": {
                    "type": "string"
                },
                "item_url": {
                    "type": "string"
                },
                "listing_price": {
                    "type": "string"
                },
                "listing_status": {
                    "type": "string"
                },
                "payment_token": {
                    "type": "string"
                },
                "payment_token_decimals": {
                    "type": "string"
                },
                "platform_id": {
                    "type": "integer"
                },
                "platform_name": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "response.NftMetadataAttrIcon": {
            "type": "object",
            "properties": {
                "discord_icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "trait_type": {
                    "type": "string"
                },
                "unicode_icon": {
                    "type": "string"
                }
            }
        },
        "response.NftMetadataAttrIconResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NftMetadataAttrIcon"
                    }
                }
            }
        },
        "response.NftSales": {
            "type": "object",
            "properties": {
                "buyer": {
                    "type": "string"
                },
                "nft_collection_address": {
                    "type": "string"
                },
                "nft_name": {
                    "type": "string"
                },
                "nft_price": {
                    "type": "number"
                },
                "nft_price_token": {
                    "type": "string"
                },
                "nft_status": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "seller": {
                    "type": "string"
                }
            }
        },
        "response.NftSalesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NftSales"
                    }
                }
            }
        },
        "response.NftWatchlistSuggest": {
            "type": "object",
            "properties": {
                "default_symbol": {
                    "$ref": "#/definitions/response.CollectionSuggestions"
                },
                "suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.CollectionSuggestions"
                    }
                }
            }
        },
        "response.NftWatchlistSuggestResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.NftWatchlistSuggest"
                }
            }
        },
        "response.OffchainTipBotTransferToken": {
            "type": "object",
            "properties": {
                "amount_each": {
                    "description": "SenderID    string  `json:\"sender_id\"`\nRecipients  string  `json:\"recipient_id\"`",
                    "type": "number"
                },
                "total_amount": {
                    "type": "number"
                }
            }
        },
        "response.OffchainTipBotTransferTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.OffchainTipBotTransferToken"
                    }
                }
            }
        },
        "response.PaginationResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "description": "page index",
                    "type": "integer"
                },
                "size": {
                    "description": "page size",
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.ProfileApiKeyResponse": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "profile_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.ResponseDataMessage": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.ResponseMessage"
                }
            }
        },
        "response.ResponseMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "response.ResponseStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "response.ResponseSucess": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "response.Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "reaction": {
                    "type": "string"
                }
            }
        },
        "response.RoleReactionByMessage": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Role"
                    }
                }
            }
        },
        "response.RoleReactionConfigResponse": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Role"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "response.RoleReactionResponse": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/response.Role"
                }
            }
        },
        "response.RouteElement": {
            "type": "object",
            "properties": {
                "amountOut": {
                    "type": "string"
                },
                "exchange": {
                    "type": "string"
                },
                "extra": {},
                "limitReturnAmount": {
                    "type": "string"
                },
                "pool": {
                    "type": "string"
                },
                "poolExtra": {},
                "poolLength": {
                    "type": "integer"
                },
                "poolType": {
                    "type": "string"
                },
                "swapAmount": {
                    "type": "string"
                },
                "tokenIn": {
                    "type": "string"
                },
                "tokenOut": {
                    "type": "string"
                },
                "tokenOutSymbol": {
                    "type": "string"
                }
            }
        },
        "response.RouteSummary": {
            "type": "object",
            "properties": {
                "amountIn": {
                    "type": "string"
                },
                "amountInUsd": {
                    "type": "string"
                },
                "amountOut": {
                    "type": "string"
                },
                "amountOutUsd": {
                    "type": "string"
                },
                "extraFee": {
                    "$ref": "#/definitions/model.ExtraFee"
                },
                "gas": {
                    "type": "string"
                },
                "gasPrice": {
                    "type": "string"
                },
                "gasUsd": {
                    "type": "string"
                },
                "route": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/response.RouteElement"
                        }
                    }
                },
                "tokenIn": {
                    "type": "string"
                },
                "tokenInMarketPriceAvailable": {
                    "type": "boolean"
                },
                "tokenOut": {
                    "type": "string"
                },
                "tokenOutMarketPriceAvailable": {
                    "type": "boolean"
                }
            }
        },
        "response.SearchCoinResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoingeckoSupportedTokens"
                    }
                }
            }
        },
        "response.SparkLineIn7d": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            }
        },
        "response.SwapRoute": {
            "type": "object",
            "properties": {
                "routeSummary": {
                    "$ref": "#/definitions/response.RouteSummary"
                },
                "routerAddress": {
                    "type": "string"
                },
                "tokenIn": {
                    "$ref": "#/definitions/model.KyberswapSupportedToken"
                },
                "tokenOut": {
                    "$ref": "#/definitions/model.KyberswapSupportedToken"
                }
            }
        },
        "response.SwapRouteResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/response.SwapRoute"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.SwapRouteResponseData": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.SwapRouteResponse"
                }
            }
        },
        "response.TickerData": {
            "type": "object",
            "properties": {
                "base": {
                    "type": "string"
                },
                "coin_id": {
                    "type": "string"
                },
                "last": {
                    "type": "number"
                },
                "target": {
                    "type": "string"
                },
                "target_coin_id": {
                    "type": "string"
                }
            }
        },
        "response.ToggleActivityConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigActivity"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.TokenHolderStatus": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.TokenHolderStatusData"
                }
            }
        },
        "response.TokenHolderStatusData": {
            "type": "object",
            "properties": {
                "guild_config": {
                    "$ref": "#/definitions/model.GuildConfigDaoProposal"
                },
                "is_qualified": {
                    "type": "boolean"
                },
                "is_wallet_connected": {
                    "type": "boolean"
                },
                "user_holding_amount": {
                    "type": "string"
                },
                "vote_config": {
                    "$ref": "#/definitions/model.DaoProposalVoteOption"
                }
            }
        },
        "response.TokenPriceAlertResponseData": {
            "type": "object",
            "properties": {
                "alert_type": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "frequency": {
                    "type": "string"
                },
                "price_by_percent": {
                    "type": "number"
                },
                "snoozed_to": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "user_discord_id": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "response.TopUser": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/model.GuildUserXP"
                },
                "leaderboard": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildUserXP"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/response.PaginationResponse"
                }
            }
        },
        "response.TransactionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.OffchainTipBotTransferHistory"
                    }
                }
            }
        },
        "response.TwitterHashtag": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "from_twitter": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "guild_id": {
                    "type": "string"
                },
                "hashtag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rule_id": {
                    "type": "string"
                },
                "twitter_username": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "response.UpdateGuildTokenRole": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigTokenRole"
                }
            }
        },
        "response.UpdateUserFeedbackResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.UserFeedback"
                }
            }
        },
        "response.UpdateVote": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.DaoVote"
                }
            }
        },
        "response.User": {
            "type": "object",
            "properties": {
                "discriminator": {
                    "type": "string"
                },
                "guild_users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetGuildUserResponse"
                    }
                },
                "id": {
                    "type": "string"
                },
                "nr_of_join": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.UserDeviceResponse": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string"
                },
                "ios_noti_token": {
                    "type": "string"
                }
            }
        },
        "response.UserFeedbackResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UserFeedback"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.UserInvitesAggregation": {
            "type": "object",
            "properties": {
                "fake": {
                    "type": "integer"
                },
                "inviter_id": {
                    "type": "string"
                },
                "left": {
                    "type": "integer"
                },
                "regular": {
                    "type": "integer"
                }
            }
        },
        "response.UserTransactionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.OffchainTipBotTransferHistory"
                    }
                }
            }
        },
        "util.Pagination": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "uuid.NullUUID": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if UUID is not NULL",
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "access_token",
            "in": "header"
        }
    }
}