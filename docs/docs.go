// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.LoginResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LogoutResponse"
                        }
                    }
                }
            }
        },
        "/cache/upvote": {
            "post": {
                "description": "Set or overwrite an upvote message cache",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cache"
                ],
                "summary": "Set or overwrite an upvote message cache",
                "parameters": [
                    {
                        "description": "Set upvote message cache request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SetUpvoteMessageCacheRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/feedback": {
            "get": {
                "description": "Get users' feedbacks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get users' feedbacks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filter by",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filtered value",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserFeedbackResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update users' feedbacks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Update users' feedbacks",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateUserFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UpdateUserFeedbackResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Post users' feedbacks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Post users' feedbacks",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/invites/": {
            "get": {
                "description": "Get invites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get invites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Member ID",
                        "name": "member_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetInvitesResponse"
                        }
                    }
                }
            }
        },
        "/community/invites/aggregation": {
            "get": {
                "description": "Invites Aggregation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Invites Aggregation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Inviter ID",
                        "name": "inviter",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.InvitesAggregationResponse"
                        }
                    }
                }
            }
        },
        "/community/invites/config": {
            "get": {
                "description": "Get invites tracker config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get invites tracker config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetInviteTrackerConfigResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Configure invites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Configure invites",
                "parameters": [
                    {
                        "description": "Configure Invites request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigureInviteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ConfigureInvitesResponse"
                        }
                    }
                }
            }
        },
        "/community/invites/leaderboard/{id}": {
            "get": {
                "description": "Get invites leaderboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get invites leaderboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetInvitesLeaderboardResponse"
                        }
                    }
                }
            }
        },
        "/community/quests": {
            "get": {
                "description": "Get user quest list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get user quest list",
                "parameters": [
                    {
                        "type": "string",
                        "name": "routine",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserQuestListResponse"
                        }
                    }
                }
            }
        },
        "/community/quests/claim": {
            "post": {
                "description": "Claim user quests' rewards",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Claim user quests' rewards",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ClaimQuestsRewardsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ClaimQuestsRewardsResponse"
                        }
                    }
                }
            }
        },
        "/community/quests/progress": {
            "post": {
                "description": "Update user's quest progress",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Update user's quest progress",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateQuestProgressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/community/repost-reactions": {
            "post": {
                "description": "Config Respost reaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Config Respost reaction",
                "parameters": [
                    {
                        "description": "Config repost reaction request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigRepostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove Respost reaction config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Remove Respost reaction config",
                "parameters": [
                    {
                        "description": "Remove repost reaction config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigRepostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/repost-reactions/blacklist-channel": {
            "get": {
                "description": "Get guild blacklist channel repost config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get guild blacklist channel repost config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Create blacklist channel repost config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Create blacklist channel repost config",
                "parameters": [
                    {
                        "description": "Upsert join-leave channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BalcklistChannelRepostConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete blacklist channel repost config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Delete blacklist channel repost config",
                "parameters": [
                    {
                        "description": "Delete blacklist channel repost config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BalcklistChannelRepostConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/repost-reactions/conversation": {
            "post": {
                "description": "Config Respost reaction with start stop",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Config Respost reaction with start stop",
                "parameters": [
                    {
                        "description": "Config repost reaction start stop request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigRepostReactionStartStop"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/repost-reactions/message-repost": {
            "put": {
                "description": "edit message repost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "edit message repost",
                "parameters": [
                    {
                        "description": "edit message repost request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.EditMessageRepostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/repost-reactions/{guild_id}": {
            "get": {
                "description": "Get Respost reaction configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get Respost reaction configs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetRepostReactionConfigsResponse"
                        }
                    }
                }
            }
        },
        "/community/twitter": {
            "post": {
                "description": "Create twitter post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Create twitter post",
                "parameters": [
                    {
                        "description": "Create twitter post request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TwitterPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/twitter/top": {
            "get": {
                "description": "Create twitter post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Create twitter post",
                "parameters": [
                    {
                        "type": "string",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTwitterLeaderboardResponse"
                        }
                    }
                }
            }
        },
        "/config-channels/gm": {
            "get": {
                "description": "Get GM config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Get GM config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGmConfigResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Update or insert GM config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Update or insert GM config",
                "parameters": [
                    {
                        "description": "Upsert GM Config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertGmConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-channels/join-leave": {
            "get": {
                "description": "Get join-leave channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Get join-leave channel config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetVoteChannelConfigResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Update or insert join-leave channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Update or insert join-leave channel config",
                "parameters": [
                    {
                        "description": "Upsert join-leave channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertJoinLeaveChannelConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetVoteChannelConfigResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete join-leave channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Delete join-leave channel config",
                "parameters": [
                    {
                        "description": "Delete join-leave channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteJoinLeaveChannelConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-channels/tip-notify": {
            "get": {
                "description": "API get list config notify channel for token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "OffChain Tip Bot - Config notify",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild id",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListConfigNotifyResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API config notify channel for token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "OffChain Tip Bot - Config notify",
                "parameters": [
                    {
                        "description": "config notify request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateTipConfigNotify"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-channels/tip-notify/{id}": {
            "delete": {
                "description": "API delete config notify channel for token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "OffChain Tip Bot - Config notify",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of config notify",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-channels/upvote": {
            "get": {
                "description": "Get vote channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Get vote channel config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetVoteChannelConfigResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Update or insert vote channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Update or insert vote channel config",
                "parameters": [
                    {
                        "description": "Upsert vote channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertVoteChannelConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetVoteChannelConfigResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete vote channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Delete vote channel config",
                "parameters": [
                    {
                        "description": "Delete vote channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteVoteChannelConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-channels/welcome": {
            "get": {
                "description": "Get welcome channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Get welcome channel config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetWelcomeChannelConfigResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Update or insert welcome channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Update or insert welcome channel config",
                "parameters": [
                    {
                        "description": "Upsert welcome channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertWelcomeConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetWelcomeChannelConfigResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete welcome channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Delete welcome channel config",
                "parameters": [
                    {
                        "description": "Delete welcome channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteWelcomeConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-community/telegram": {
            "get": {
                "description": "Get telegram account linked with discord ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Get telegram account linked with discord ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "request",
                        "name": "telegram_username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetLinkedTelegramResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Link user's telegram with discord account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Link user's telegram with discord account",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LinkUserTelegramWithDiscordRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.LinkUserTelegramWithDiscordResponse"
                        }
                    }
                }
            }
        },
        "/config-community/twitter": {
            "post": {
                "description": "Create twitter config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Create twitter config",
                "parameters": [
                    {
                        "description": "Create Twitter config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GuildConfigTwitterFeed"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-community/twitter/blacklist": {
            "get": {
                "description": "get twitter blacklist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Get twitter blacklist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTwitterBlackListResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add an user to twitter watching blacklist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Add an user to twitter watching blacklist",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddToTwitterBlackListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an user from twitter watching blacklist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Delete an user from twitter watching blacklist",
                "parameters": [
                    {
                        "type": "string",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "twitter_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/config-community/twitter/hashtag": {
            "get": {
                "description": "get all twitter hashtag config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Get all twitter hashtag config",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetAllTwitterHashtagConfigResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create twitter hashtag config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Create twitter hashtag config",
                "parameters": [
                    {
                        "description": "Create twitter hashtag config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TwitterHashtag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-community/twitter/hashtag/{guild_id}": {
            "get": {
                "description": "get twitter hashtag config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Get twitter hashtag config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTwitterHashtagConfigResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete twitter hashtag config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigCommunity"
                ],
                "summary": "Delete twitter hashtag config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/custom-tokens": {
            "post": {
                "description": "Guild custom token config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Guild custom token config",
                "parameters": [
                    {
                        "description": "Custom guild custom token config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertCustomTokenConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/default-currency": {
            "get": {
                "description": "Get default currency by guild id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get default currency by guild id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GuildConfigDefaultCurrencyResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Upsert default currency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Upsert default currency",
                "parameters": [
                    {
                        "description": "Upsert default currency config",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertGuildDefaultCurrencyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete default currency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Delete default currency",
                "parameters": [
                    {
                        "description": "Delete default currency config",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GuildIDRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/default-symbol": {
            "post": {
                "description": "Create default collection symbol",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Create default collection symbol",
                "parameters": [
                    {
                        "description": "Config Default Collection Symbol request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigDefaultCollection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/default-ticker": {
            "get": {
                "description": "Get guild default ticker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get guild default ticker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ticker query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildDefaultTickerResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Set guild default ticker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Set guild default ticker",
                "parameters": [
                    {
                        "description": "Set guild default ticker request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GuildConfigDefaultTickerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/monikers": {
            "post": {
                "description": "Upsert moniker config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Upsert moniker config",
                "parameters": [
                    {
                        "description": "Upsert moniker config",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertMonikerConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete moniker config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Delete moniker config",
                "parameters": [
                    {
                        "description": "Delete moinker config",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteMonikerConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/monikers/default": {
            "get": {
                "description": "Get default moniker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get default moniker",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MonikerConfigResponse"
                        }
                    }
                }
            }
        },
        "/config-defi/monikers/{guild_id}": {
            "get": {
                "description": "Get moniker configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get moniker configs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MonikerConfigResponse"
                        }
                    }
                }
            }
        },
        "/config-defi/tokens": {
            "get": {
                "description": "Get guild tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get guild tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildTokensResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Update or insert guild token config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Update or insert guild token config",
                "parameters": [
                    {
                        "description": "Upsert Guild Token Config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertGuildTokenConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/tokens/default": {
            "get": {
                "description": "Get Default token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get Default token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetDefaultTokenResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Config Default token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Config Default token",
                "parameters": [
                    {
                        "description": "Config default token request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigDefaultTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove Default token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Remove Default token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-roles/default-roles": {
            "get": {
                "description": "Get default roles by guild id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Get default roles by guild id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DefaultRoleResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create default role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Create default role",
                "parameters": [
                    {
                        "description": "Create default role request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateDefaultRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DefaultRoleResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete default role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Delete default role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseSucess"
                        }
                    }
                }
            }
        },
        "/config-roles/level-roles": {
            "post": {
                "description": "Config level role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Config Level role",
                "parameters": [
                    {
                        "description": "Config level role request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigLevelRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-roles/level-roles/{guild_id}": {
            "get": {
                "description": "Get level role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Get level role config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetLevelRoleConfigsResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove level role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Remove level role config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-roles/nft-roles": {
            "get": {
                "description": "List guild nft roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "List guild nft roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListGuildGroupNFTRolesResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "New guild nft role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "New guild nft role",
                "parameters": [
                    {
                        "description": "New NFT role request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigGroupNFTRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NewGuildGroupNFTRoleResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove guild nft role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Remove guild nft role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "32951e68-9959-4e1d-88ca-22b442e19efe|45d06941-468b-4e5e-8b8f-d20c77c87805",
                        "name": "config_ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-roles/nft-roles/group": {
            "delete": {
                "description": "Remove guild group nft role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Remove guild group nft role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group config ID",
                        "name": "group_config_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-roles/reaction-roles": {
            "get": {
                "description": "Get all role reaction configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Get all role reaction configs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DataListRoleReactionResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add reaction role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Add reaction role config",
                "parameters": [
                    {
                        "description": "Add reaction role config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RoleReactionUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.RoleReactionConfigResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove reaction role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Remove reaction role config",
                "parameters": [
                    {
                        "description": "Remove reaction role config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RoleReactionUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseSucess"
                        }
                    }
                }
            }
        },
        "/config-roles/reaction-roles/filter": {
            "post": {
                "description": "Filter config by reaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Filter config by reaction",
                "parameters": [
                    {
                        "description": "Filter config by reaction request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RoleReactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DataFilterConfigByReaction"
                        }
                    }
                }
            }
        },
        "/configs/nft-roles/group": {
            "delete": {
                "description": "Remove guild group nft role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Remove guild group nft role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group config ID",
                        "name": "group_config_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/configs/sales-tracker": {
            "get": {
                "description": "Get sales tracker config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Get sales tracker config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSalesTrackerConfigResponse"
                        }
                    }
                }
            }
        },
        "/configs/twitter": {
            "get": {
                "description": "Get all twitter config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Get all twitter config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetAllTwitterConfigResponse"
                        }
                    }
                }
            }
        },
        "/configs/upvote-tiers": {
            "get": {
                "description": "Get all upvote tiers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Get all upvote tiers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUpvoteTiersConfig"
                        }
                    }
                }
            }
        },
        "/configs/whitelist-prune": {
            "get": {
                "description": "Get prune exclusion config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Get prune exclusion config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildPruneExcludeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Upsert prune exclude config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Upsert prune exclude config",
                "parameters": [
                    {
                        "description": "Upsert prune exlude request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertGuildPruneExcludeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete prune exclude config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Delete prune exclude config",
                "parameters": [
                    {
                        "description": "Upsert prune exlude request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertGuildPruneExcludeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/data/configs/activities/{activity}": {
            "post": {
                "description": "Toggle activity config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data"
                ],
                "summary": "Toggle activity config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity name",
                        "name": "activity",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ToggleActivityConfigResponse"
                        }
                    }
                }
            }
        },
        "/data/metrics": {
            "get": {
                "description": "API to get stats of collections, users, servers, ...",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data"
                ],
                "summary": "Metric",
                "parameters": [
                    {
                        "type": "string",
                        "description": "total_servers | active_users | nft_collections | verified_wallets | supported_tokens | command_usage",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "case active_users",
                        "name": "guild_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DataMetric"
                        }
                    }
                }
            }
        },
        "/defi/chains": {
            "get": {
                "description": "List All Chain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "List All Chain",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetListAllChainsResponse"
                        }
                    }
                }
            }
        },
        "/defi/coins": {
            "get": {
                "description": "Search coin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Search coin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "coin query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SearchCoinResponse"
                        }
                    }
                }
            }
        },
        "/defi/coins/compare": {
            "get": {
                "description": "Compare token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Compare token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "base token",
                        "name": "base",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "target token",
                        "name": "target",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "compare interval",
                        "name": "interval",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CompareTokenResponse"
                        }
                    }
                }
            }
        },
        "/defi/coins/{id}": {
            "get": {
                "description": "Get coin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Get coin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetCoinResponseWrapper"
                        }
                    }
                }
            }
        },
        "/defi/market-chart": {
            "get": {
                "description": "Get historical market chart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Get historical market chart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coin ID",
                        "name": "coin_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Day",
                        "name": "day",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "usd",
                        "description": "Currency",
                        "name": "currency",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetHistoricalMarketChartResponse"
                        }
                    }
                }
            }
        },
        "/defi/tokens": {
            "get": {
                "description": "Get supported tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Get supported tokens",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSupportedTokensResponse"
                        }
                    }
                }
            }
        },
        "/defi/watchlist": {
            "get": {
                "description": "Get user's watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Get user's watchlist",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetWatchlistResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add to user's watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Add to user's watchlist",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddToWatchlistRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AddToWatchlistResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove from user's watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Remove from user's watchlist",
                "parameters": [
                    {
                        "type": "string",
                        "name": "symbol",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fiat/historical-exchange-rates": {
            "get": {
                "description": "Remove from user's watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fiat"
                ],
                "summary": "Get historical market chart",
                "parameters": [
                    {
                        "type": "string",
                        "name": "base",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 365,
                        "minimum": 7,
                        "type": "integer",
                        "name": "days",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "target",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetFiatHistoricalExchangeRatesResponse"
                        }
                    }
                }
            }
        },
        "/guilds": {
            "get": {
                "description": "Get guilds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Get guilds",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create guild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Create guild",
                "parameters": [
                    {
                        "description": "Create Guild request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateGuildRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/request.CreateGuildRequest"
                        }
                    }
                }
            }
        },
        "/guilds/user-managed": {
            "get": {
                "description": "Get my guild list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Get my guilds list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListMyGuildsResponse"
                        }
                    }
                }
            }
        },
        "/guilds/{guild_id}": {
            "get": {
                "description": "Get guild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Get guild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update guild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Update guild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update guild request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateGuildRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/guilds/{guild_id}/channels": {
            "post": {
                "description": "Create guild channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Create guild channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "count_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/guilds/{guild_id}/custom-tokens": {
            "get": {
                "description": "List all guild custom token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "List all guild custom token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListAllCustomTokenResponse"
                        }
                    }
                }
            }
        },
        "/guilds/{guild_id}/stats": {
            "get": {
                "description": "Get guild stats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Get guild stats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DiscordGuildStat"
                        }
                    }
                }
            }
        },
        "/nfts": {
            "get": {
                "description": "List all nft collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "List all nft collections",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListAllNFTCollectionsResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections": {
            "get": {
                "description": "Get NFT trading volume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT trading volume",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NFTCollectionsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create NFT Collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Create NFT Collection",
                "parameters": [
                    {
                        "description": "Create nft collection request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateNFTCollectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateNFTCollectionResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections/address/{address}": {
            "get": {
                "description": "Get NFT collection by address chain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT collection by address chain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Chain",
                        "name": "chain",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetNFTCollectionByAddressChainResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections/stats": {
            "get": {
                "description": "Get collection count",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get collection count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetCollectionCountResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections/suggestion": {
            "get": {
                "description": "Get guild suggest nft collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get guild suggest nft collections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "symbol collection query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSuggestionNFTCollectionsResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections/tickers": {
            "get": {
                "description": "Get NFT collection tickers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT collection tickers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CollectionAddress",
                        "name": "collection_address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "to",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.IndexerNFTCollectionTickersResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections/{address}": {
            "patch": {
                "description": "Update NFT Collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Update NFT Collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/nfts/collections/{symbol}": {
            "get": {
                "description": "Get NFT Tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT Tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.IndexerGetNFTTokensResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections/{symbol}/detail": {
            "get": {
                "description": "Get detail nft collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get detail nft collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetDetailNftCollectionResponse"
                        }
                    }
                }
            }
        },
        "/nfts/default-nft-ticker": {
            "get": {
                "description": "Get guild default nft ticker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get guild default nft ticker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ticker query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildDefaultNftTickerResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Set guild default nft ticker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Set guild default nft ticker",
                "parameters": [
                    {
                        "description": "Set guild default ticker request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GuildConfigDefaultNftTickerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseDataMessage"
                        }
                    }
                }
            }
        },
        "/nfts/icons": {
            "get": {
                "description": "Get NFT metadata attribute icon",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT metadata attribute icon",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NftMetadataAttrIconResponse"
                        }
                    }
                }
            }
        },
        "/nfts/new-listed": {
            "get": {
                "description": "Get new listed nft collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get new listed nft collection",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 7,
                        "description": "Interval",
                        "name": "interval",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NFTNewListedResponse"
                        }
                    }
                }
            }
        },
        "/nfts/sales": {
            "get": {
                "description": "Get NFT sales",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT sales",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection address",
                        "name": "collection-address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Platform",
                        "name": "platform",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NftSalesResponse"
                        }
                    }
                }
            }
        },
        "/nfts/sales-tracker": {
            "get": {
                "description": "Get all nft sales tracker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get all nft sales tracker",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetAllNFTSalesTrackerResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create NFT Sales tracker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Create NFT Sales tracker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.IndexerGetNFTTokensResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete NFT sales tracker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Delete NFT sales tracker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contract Address",
                        "name": "contract_address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/nfts/supported-chains": {
            "post": {
                "description": "Get supported chains",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get supported chains",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSupportedChains"
                        }
                    }
                }
            }
        },
        "/nfts/tickers": {
            "get": {
                "description": "Get NFT token tickers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT token tickers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CollectionAddress",
                        "name": "collection_address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token ID",
                        "name": "token_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "to",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.IndexerGetNFTTokenTickersResponse"
                        }
                    }
                }
            }
        },
        "/nfts/trades": {
            "post": {
                "description": "Create Trade Offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Create Trade Offer",
                "parameters": [
                    {
                        "description": "Create Trade Offer Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateTradeOfferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateTradeOfferResponse"
                        }
                    }
                }
            }
        },
        "/nfts/trades/{id}": {
            "get": {
                "description": "Get Trade Offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get Trade Offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Trade Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTradeOfferResponse"
                        }
                    }
                }
            }
        },
        "/nfts/trading-volume": {
            "get": {
                "description": "Get NFT trading volume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT trading volume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NFTTradingVolumeResponse"
                        }
                    }
                }
            }
        },
        "/nfts/watchlist": {
            "get": {
                "description": "Get user's nft watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get user's nft watchlist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "size",
                        "name": "size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetNftWatchlistResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add to user's nft watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Add to user's nft watchlist",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddNftWatchlistRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NftWatchlistSuggestResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove from user's nft watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Remove from user's nft watchlist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "symbol",
                        "name": "symbol",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/nfts/{symbol}/{id}": {
            "get": {
                "description": "Get NFT Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.IndexerGetNFTTokenDetailResponseWithSuggestions"
                        }
                    }
                }
            }
        },
        "/nfts/{symbol}/{id}/activity": {
            "get": {
                "description": "Get NFT Activity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT Activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection address | Symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetNFTActivityResponse"
                        }
                    }
                }
            }
        },
        "/tip/assign-contract": {
            "post": {
                "description": "Create an assign contract when user want to deposit a specific token to contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tip"
                ],
                "summary": "OffChain Tip Bot - Create an assign contract",
                "parameters": [
                    {
                        "description": "Create assign contract request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateAssignContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetAssignedContract"
                        }
                    }
                }
            }
        },
        "/tip/balances": {
            "get": {
                "description": "Get offchain user bals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tip"
                ],
                "summary": "Get offchain user bals",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserBalancesResponse"
                        }
                    }
                }
            }
        },
        "/tip/history": {
            "get": {
                "description": "Get transactions history by query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tip"
                ],
                "summary": "Get transactions history by query",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TransactionsResponse"
                        }
                    }
                }
            }
        },
        "/tip/tokens": {
            "get": {
                "description": "Get all offchain tip bot tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tip"
                ],
                "summary": "Get all offchain tip bot tokens",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AllTipBotTokensResponse"
                        }
                    }
                }
            }
        },
        "/tip/transactions": {
            "get": {
                "description": "Get transactions by query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tip"
                ],
                "summary": "Get transactions by query",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sender ID",
                        "name": "sender_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "receiver ID",
                        "name": "receiver_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TransactionsResponse"
                        }
                    }
                }
            }
        },
        "/tip/transfer": {
            "post": {
                "description": "API transfer token for tip, airdrop, ...",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tip"
                ],
                "summary": "OffChain Tip Bot - Transfer token",
                "parameters": [
                    {
                        "description": "Transfer token request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OffchainTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.OffchainTipBotTransferTokenResponse"
                        }
                    }
                }
            }
        },
        "/tip/withdraw": {
            "post": {
                "description": "OffChain Tip Bot - Withdraw",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tip"
                ],
                "summary": "OffChain Tip Bot - Withdraw",
                "parameters": [
                    {
                        "description": "Withdraw token request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OffchainWithdrawRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.OffchainTipBotWithdrawResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Create User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "Create user request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/users/gmstreak": {
            "get": {
                "description": "Get user current GM streak",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user current GM streak",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discord ID",
                        "name": "discord_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserCurrentGMStreakResponse"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "description": "Get user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetMyInfoResponse"
                        }
                    }
                }
            }
        },
        "/users/profiles/": {
            "get": {
                "description": "Get user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetDataUserProfileResponse"
                        }
                    }
                }
            }
        },
        "/users/top": {
            "get": {
                "description": "Get top users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get top users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetMyInfoResponse"
                        }
                    }
                }
            }
        },
        "/users/upvote-leaderboard": {
            "get": {
                "description": "Get user upvote leaderboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user upvote leaderboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "streak / total",
                        "name": "by",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserUpvoteLeaderboardResponse"
                        }
                    }
                }
            }
        },
        "/users/upvote-streak": {
            "get": {
                "description": "Get user current upvote streak",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user current upvote streak",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discord ID",
                        "name": "discord_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CurrentUserUpvoteStreakResponse"
                        }
                    }
                }
            }
        },
        "/users/wallets/{address}": {
            "get": {
                "description": "Get user by guild_id address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user by guild_id address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserWalletByGuildIDAddressResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/transactions": {
            "get": {
                "description": "Get user transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user discord ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserTransactionResponse"
                        }
                    }
                }
            }
        },
        "/users/{user_id}": {
            "get": {
                "description": "Get user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserResponse"
                        }
                    }
                }
            }
        },
        "/verify": {
            "post": {
                "description": "Verify wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Verify wallet address",
                "parameters": [
                    {
                        "description": "Verify wallet address request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.VerifyWalletAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseStatus"
                        }
                    }
                }
            }
        },
        "/verify/config": {
            "put": {
                "description": "Update guild config wallet verification message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Update guild config wallet verification message",
                "parameters": [
                    {
                        "description": "Update guild config wallet verification message request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NewGuildConfigWalletVerificationMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NewGuildConfigWalletVerificationMessageResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Config wallet verification message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Config wallet verification message",
                "parameters": [
                    {
                        "description": "New guild config wallet verification message request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NewGuildConfigWalletVerificationMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NewGuildConfigWalletVerificationMessageResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete guild config wallet verification message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Delete guild config wallet verification message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseStatus"
                        }
                    }
                }
            }
        },
        "/verify/config/{guild_id}": {
            "get": {
                "description": "Get guild config wallet verification message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Get guild config wallet verification message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NewGuildConfigWalletVerificationMessageResponse"
                        }
                    }
                }
            }
        },
        "/verify/generate": {
            "post": {
                "description": "Generate verification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Generate verification",
                "parameters": [
                    {
                        "description": "Generate verification request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GenerateVerificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GenerateVerificationResponse"
                        }
                    }
                }
            }
        },
        "/widget/device": {
            "get": {
                "description": "Get user current device data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Widget"
                ],
                "summary": "Get user current device data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "device_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserDeviceResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Upsert user current device data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Widget"
                ],
                "summary": "Upsert user current device data",
                "parameters": [
                    {
                        "description": "Upsert user device",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertUserDeviceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete user current device data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Widget"
                ],
                "summary": "Delete user current device data",
                "parameters": [
                    {
                        "description": "Delete user device",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteUserDeviceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/widget/token-alert": {
            "get": {
                "description": "Get user current token alerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Widget"
                ],
                "summary": "Get user current token alerts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discord ID",
                        "name": "discord_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DiscordUserTokenAlertResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Upsert user token alerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Widget"
                ],
                "summary": "Upsert user token alerts",
                "parameters": [
                    {
                        "description": "Upsert user token alert",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertDiscordUserAlertRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete user token alerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Widget"
                ],
                "summary": "Delete user token alerts",
                "parameters": [
                    {
                        "description": "Delete user token alert",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteDiscordUserAlertRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "big.Float": {
            "type": "object"
        },
        "discordgo.User": {
            "type": "object",
            "properties": {
                "accent_color": {
                    "description": "User's banner color, encoded as an integer representation of hexadecimal color code",
                    "type": "integer"
                },
                "avatar": {
                    "description": "The hash of the user's avatar. Use Session.UserAvatar\nto retrieve the avatar itself.",
                    "type": "string"
                },
                "banner": {
                    "description": "The hash of the user's banner image.",
                    "type": "string"
                },
                "bot": {
                    "description": "Whether the user is a bot.",
                    "type": "boolean"
                },
                "discriminator": {
                    "description": "The discriminator of the user (4 numbers after name).",
                    "type": "string"
                },
                "email": {
                    "description": "The email of the user. This is only present when\nthe application possesses the email scope for the user.",
                    "type": "string"
                },
                "flags": {
                    "description": "The flags on a user's account.\nOnly available when the request is authorized via a Bearer token.",
                    "type": "integer"
                },
                "id": {
                    "description": "The ID of the user.",
                    "type": "string"
                },
                "locale": {
                    "description": "The user's chosen language option.",
                    "type": "string"
                },
                "mfa_enabled": {
                    "description": "Whether the user has multi-factor authentication enabled.",
                    "type": "boolean"
                },
                "premium_type": {
                    "description": "The type of Nitro subscription on a user's account.\nOnly available when the request is authorized via a Bearer token.",
                    "type": "integer"
                },
                "public_flags": {
                    "description": "The public flags on a user's account.\nThis is a combination of bit masks; the presence of a certain flag can\nbe checked by performing a bitwise AND between this int and the flag.",
                    "type": "integer"
                },
                "system": {
                    "description": "Whether the user is an Official Discord System user (part of the urgent message system).",
                    "type": "boolean"
                },
                "token": {
                    "description": "The token of the user. This is only present for\nthe user represented by the current session.",
                    "type": "string"
                },
                "username": {
                    "description": "The user's username.",
                    "type": "string"
                },
                "verified": {
                    "description": "Whether the user's email is verified.",
                    "type": "boolean"
                }
            }
        },
        "entities.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "integer"
                }
            }
        },
        "model.Activity": {
            "type": "object",
            "properties": {
                "guild_default": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "xp": {
                    "type": "integer"
                }
            }
        },
        "model.Chain": {
            "type": "object",
            "properties": {
                "coin_gecko_id": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "short_name": {
                    "type": "string"
                }
            }
        },
        "model.CoingeckoSupportedTokens": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "model.ConfigXpLevel": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "integer"
                },
                "min_xp": {
                    "type": "integer"
                }
            }
        },
        "model.DiscordGuild": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "alias": {
                    "type": "string"
                },
                "bot_scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "global_xp": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "log_channel": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildRole"
                    }
                }
            }
        },
        "model.DiscordGuildStat": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "nr_of_animated_emojis": {
                    "type": "integer"
                },
                "nr_of_announcement_channels": {
                    "type": "integer"
                },
                "nr_of_bots": {
                    "type": "integer"
                },
                "nr_of_categories": {
                    "type": "integer"
                },
                "nr_of_channels": {
                    "type": "integer"
                },
                "nr_of_custom_stickers": {
                    "type": "integer"
                },
                "nr_of_emojis": {
                    "type": "integer"
                },
                "nr_of_members": {
                    "type": "integer"
                },
                "nr_of_roles": {
                    "type": "integer"
                },
                "nr_of_server_stickers": {
                    "type": "integer"
                },
                "nr_of_stage_channels": {
                    "type": "integer"
                },
                "nr_of_static_emojis": {
                    "type": "integer"
                },
                "nr_of_stickers": {
                    "type": "integer"
                },
                "nr_of_text_channels": {
                    "type": "integer"
                },
                "nr_of_users": {
                    "type": "integer"
                },
                "nr_of_voice_channels": {
                    "type": "integer"
                }
            }
        },
        "model.DiscordUserDevice": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ios_noti_token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.DiscordUserGMStreak": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "last_streak_date": {
                    "type": "string"
                },
                "streak_count": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.DiscordUserTokenAlert": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "device": {
                    "$ref": "#/definitions/model.DiscordUserDevice"
                },
                "device_id": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_enable": {
                    "type": "boolean"
                },
                "price_set": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "trend": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.DiscordUserUpvoteStreak": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "last_streak_date": {
                    "type": "string"
                },
                "streak_count": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigActivity": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "activity": {
                    "$ref": "#/definitions/model.Activity"
                },
                "activity_id": {
                    "type": "integer"
                },
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigDefaultCollection": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigDefaultTicker": {
            "type": "object",
            "properties": {
                "default_ticker": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigGmGn": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "emoji": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "sticker": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigInviteTracker": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "webhook_url": {
                    "$ref": "#/definitions/model.JSONNullString"
                }
            }
        },
        "model.GuildConfigLevelRole": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "level_config": {
                    "$ref": "#/definitions/model.ConfigXpLevel"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigRepostReaction": {
            "type": "object",
            "properties": {
                "emoji": {
                    "type": "string"
                },
                "emoji_start": {
                    "type": "string"
                },
                "emoji_stop": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "reaction_type": {
                    "type": "string"
                },
                "repost_channel_id": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigSalesTracker": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigTwitterBlacklist": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "twitter_id": {
                    "type": "string"
                },
                "twitter_username": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigTwitterFeed": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "twitter_access_token": {
                    "type": "string"
                },
                "twitter_access_token_secret": {
                    "type": "string"
                },
                "twitter_consumer_key": {
                    "type": "string"
                },
                "twitter_consumer_secret": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigVoteChannel": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigWalletVerificationMessage": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "discord_message_id": {
                    "type": "string"
                },
                "embedded_message": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "guild_id": {
                    "type": "string"
                },
                "verify_channel_id": {
                    "type": "string"
                },
                "verify_role_id": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigWelcomeChannel": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "welcome_message": {
                    "type": "string"
                }
            }
        },
        "model.GuildRole": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "model.JSONNullString": {
            "type": "object",
            "properties": {
                "string": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if String is not NULL",
                    "type": "boolean"
                }
            }
        },
        "model.MonikerConfig": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "moniker": {
                    "type": "string"
                },
                "plural": {
                    "type": "string"
                },
                "token": {
                    "$ref": "#/definitions/model.OffchainTipBotToken"
                },
                "token_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.NFTCollection": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "erc_format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "model.NFTCollectionDetail": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "chain": {
                    "$ref": "#/definitions/model.Chain"
                },
                "chain_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "erc_format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "model.NewListedNFTCollection": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "chain": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "erc_format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "model.OffchainTipBotAssignContract": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "string"
                },
                "contract": {
                    "$ref": "#/definitions/model.OffchainTipBotContract"
                },
                "contract_id": {
                    "type": "string"
                },
                "expired_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "token_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.OffchainTipBotContract": {
            "type": "object",
            "properties": {
                "assign_status": {
                    "type": "integer"
                },
                "centralize_wallet": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "contract_address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "sweeped_time": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.OffchainTipBotToken": {
            "type": "object",
            "properties": {
                "coin_gecko_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "service_fee": {
                    "type": "number"
                },
                "status": {
                    "type": "integer"
                },
                "token_id": {
                    "type": "string"
                },
                "token_name": {
                    "type": "string"
                },
                "token_symbol": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.OffchainTipBotTransferHistory": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "fee_amount": {
                    "type": "number"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "log_id": {
                    "type": "string"
                },
                "receiver_id": {
                    "type": "string"
                },
                "sender_id": {
                    "type": "string"
                },
                "service_fee": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Quest": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "frequency": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "rewards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.QuestReward"
                    }
                },
                "routine": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.QuestReward": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "pass_id": {
                    "type": "string"
                },
                "quest": {
                    "$ref": "#/definitions/model.Quest"
                },
                "quest_id": {
                    "type": "string"
                },
                "reward_amount": {
                    "type": "integer"
                },
                "reward_type": {
                    "$ref": "#/definitions/model.QuestRewardType"
                },
                "reward_type_id": {
                    "type": "string"
                }
            }
        },
        "model.QuestRewardType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.QuestUserList": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "current": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_claimed": {
                    "type": "boolean"
                },
                "is_completed": {
                    "type": "boolean"
                },
                "multiplier": {
                    "type": "number"
                },
                "quest": {
                    "$ref": "#/definitions/model.Quest"
                },
                "quest_id": {
                    "type": "string"
                },
                "routine": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "target": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.QuestUserReward": {
            "type": "object",
            "properties": {
                "claimed_at": {
                    "type": "string"
                },
                "pass_id": {
                    "type": "string"
                },
                "quest_id": {
                    "type": "string"
                },
                "reward": {
                    "$ref": "#/definitions/model.QuestReward"
                },
                "reward_amount": {
                    "type": "integer"
                },
                "reward_id": {
                    "type": "string"
                },
                "reward_type_id": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.Token": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain": {
                    "$ref": "#/definitions/model.Chain"
                },
                "chain_id": {
                    "type": "integer"
                },
                "coin_gecko_id": {
                    "type": "string"
                },
                "decimal": {
                    "type": "integer"
                },
                "discord_bot_supported": {
                    "type": "boolean"
                },
                "guild_default": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "is_native": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "model.TradeItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "is_from": {
                    "type": "boolean"
                },
                "token_address": {
                    "type": "string"
                },
                "token_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "trade_offer_id": {
                    "type": "string"
                }
            }
        },
        "model.TradeOffer": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "have_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TradeItem"
                    }
                },
                "id": {
                    "type": "string"
                },
                "owner_address": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "want_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TradeItem"
                    }
                }
            }
        },
        "model.TwitterPostStreak": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "last_streak_date": {
                    "type": "string"
                },
                "streak_count": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                },
                "twitter_handle": {
                    "type": "string"
                },
                "twitter_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.UpvoteStreakTier": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "streak_required": {
                    "type": "integer"
                },
                "vote_interval": {
                    "type": "integer"
                },
                "xp_per_interval": {
                    "type": "integer"
                }
            }
        },
        "model.UserFactionXpsMapping": {
            "type": "object",
            "properties": {
                "academy_xp": {
                    "type": "integer"
                },
                "imperial_xp": {
                    "type": "integer"
                },
                "merchant_xp": {
                    "type": "integer"
                },
                "rebellio_xp": {
                    "type": "integer"
                }
            }
        },
        "model.UserFeedback": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "completed_at": {
                    "type": "string"
                },
                "confirmed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "feedback": {
                    "type": "string"
                },
                "id": {
                    "$ref": "#/definitions/uuid.NullUUID"
                },
                "message_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.UserTelegramDiscordAssociation": {
            "type": "object",
            "properties": {
                "discord_id": {
                    "type": "string"
                },
                "telegram_username": {
                    "type": "string"
                }
            }
        },
        "model.UserWallet": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain_type": {
                    "$ref": "#/definitions/model.JSONNullString"
                },
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "user_discord_id": {
                    "type": "string"
                }
            }
        },
        "request.AddNftWatchlistRequest": {
            "type": "object",
            "properties": {
                "chain": {
                    "type": "string"
                },
                "collection_address": {
                    "type": "string"
                },
                "collection_symbol": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.AddToTwitterBlackListRequest": {
            "type": "object",
            "properties": {
                "created_by": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "twitter_id": {
                    "type": "string"
                },
                "twitter_username": {
                    "type": "string"
                }
            }
        },
        "request.AddToWatchlistRequest": {
            "type": "object",
            "properties": {
                "coin_gecko_id": {
                    "type": "string"
                },
                "is_fiat": {
                    "type": "boolean"
                },
                "symbol": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.BalcklistChannelRepostConfigRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.ClaimQuestsRewardsRequest": {
            "type": "object",
            "properties": {
                "quest_id": {
                    "type": "string"
                },
                "routine": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.ConfigDefaultCollection": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "request.ConfigDefaultTokenRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "request.ConfigGroupNFTRoleRequest": {
            "type": "object",
            "properties": {
                "collection_address": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "group_name": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "number_of_tokens": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "request.ConfigLevelRoleRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "request.ConfigRepostReactionStartStop": {
            "type": "object",
            "properties": {
                "emoji_start": {
                    "type": "string"
                },
                "emoji_stop": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "repost_channel_id": {
                    "type": "string"
                }
            }
        },
        "request.ConfigRepostRequest": {
            "type": "object",
            "properties": {
                "emoji": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "repost_channel_id": {
                    "type": "string"
                }
            }
        },
        "request.ConfigureInviteRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "log_channel": {
                    "type": "string"
                },
                "webhook_url": {
                    "type": "string"
                }
            }
        },
        "request.CreateAssignContract": {
            "type": "object",
            "properties": {
                "token_symbol": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateDefaultRoleRequest": {
            "type": "object",
            "required": [
                "guild_id",
                "role_id"
            ],
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateGuildRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.CreateNFTCollectionRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "chain": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateTipConfigNotify": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "request.CreateTradeOfferRequest": {
            "type": "object",
            "required": [
                "owner_address"
            ],
            "properties": {
                "have_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.TradeOfferItem"
                    }
                },
                "owner_address": {
                    "type": "string"
                },
                "want_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.TradeOfferItem"
                    }
                }
            }
        },
        "request.CreateUserRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "invited_by": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.DeleteDiscordUserAlertRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "request.DeleteJoinLeaveChannelConfigRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.DeleteMonikerConfigRequest": {
            "type": "object",
            "required": [
                "guild_id",
                "moniker"
            ],
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "moniker": {
                    "type": "string"
                }
            }
        },
        "request.DeleteUserDeviceRequest": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string"
                }
            }
        },
        "request.DeleteVoteChannelConfigRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.DeleteWelcomeConfigRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.EditMessageRepostRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "origin_channel_id": {
                    "type": "string"
                },
                "origin_message_id": {
                    "type": "string"
                },
                "repost_channel_id": {
                    "type": "string"
                },
                "repost_message_id": {
                    "type": "string"
                }
            }
        },
        "request.GenerateVerificationRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "is_reverify": {
                    "type": "boolean"
                },
                "user_discord_id": {
                    "type": "string"
                }
            }
        },
        "request.GuildConfigDefaultNftTickerRequest": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "collection_address": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "request.GuildConfigDefaultTickerRequest": {
            "type": "object",
            "properties": {
                "default_ticker": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "request.GuildIDRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.LinkUserTelegramWithDiscordRequest": {
            "type": "object",
            "required": [
                "discord_id",
                "telegram_username"
            ],
            "properties": {
                "discord_id": {
                    "type": "string"
                },
                "telegram_username": {
                    "type": "string"
                }
            }
        },
        "request.LoginRequest": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "request.NewGuildConfigWalletVerificationMessageRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "discord_message_id": {
                    "type": "string"
                },
                "embedded_message": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "guild_id": {
                    "type": "string"
                },
                "verify_channel_id": {
                    "type": "string"
                },
                "verify_role_id": {
                    "type": "string"
                }
            }
        },
        "request.OffchainTransferRequest": {
            "type": "object",
            "properties": {
                "all": {
                    "type": "boolean"
                },
                "amount": {
                    "type": "number"
                },
                "channel_id": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "each": {
                    "type": "boolean"
                },
                "full_command": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sender": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "transfer_type": {
                    "type": "string"
                }
            }
        },
        "request.OffchainWithdrawRequest": {
            "type": "object",
            "properties": {
                "all": {
                    "type": "boolean"
                },
                "amount": {
                    "type": "number"
                },
                "channel_id": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "each": {
                    "type": "boolean"
                },
                "full_command": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "recipient": {
                    "type": "string"
                },
                "recipient_address": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "transfer_type": {
                    "type": "string"
                }
            }
        },
        "request.RoleReactionRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "reaction": {
                    "type": "string"
                }
            }
        },
        "request.RoleReactionUpdateRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "reaction": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "request.SetUpvoteMessageCacheRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.TradeOfferItem": {
            "type": "object",
            "required": [
                "token_address",
                "token_ids"
            ],
            "properties": {
                "token_address": {
                    "type": "string"
                },
                "token_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.TwitterHashtag": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "from_twitter": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "guild_id": {
                    "type": "string"
                },
                "hashtag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rule_id": {
                    "type": "string"
                },
                "twitter_username": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.TwitterPost": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "tweet_id": {
                    "type": "string"
                },
                "twitter_handle": {
                    "type": "string"
                },
                "twitter_id": {
                    "type": "string"
                }
            }
        },
        "request.UpdateGuildRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "global_xp": {
                    "type": "boolean"
                },
                "left_at": {
                    "type": "string"
                },
                "log_channel": {
                    "type": "string"
                }
            }
        },
        "request.UpdateQuestProgressRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.UpdateUserFeedbackRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "request.UpsertCustomTokenConfigRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "address": {
                    "type": "string"
                },
                "chain": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "coin_gecko_id": {
                    "type": "string"
                },
                "decimals": {
                    "type": "integer"
                },
                "discord_bot_supported": {
                    "type": "boolean"
                },
                "guild_default": {
                    "type": "boolean"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "request.UpsertDiscordUserAlertRequest": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_enable": {
                    "type": "boolean"
                },
                "price_set": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "trend": {
                    "type": "string"
                }
            }
        },
        "request.UpsertGmConfigRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "emoji": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "sticker": {
                    "type": "string"
                }
            }
        },
        "request.UpsertGuildDefaultCurrencyRequest": {
            "type": "object",
            "properties": {
                "Symbol": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.UpsertGuildPruneExcludeRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "request.UpsertGuildTokenConfigRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "guild_id": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "request.UpsertJoinLeaveChannelConfigRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.UpsertMonikerConfigRequest": {
            "type": "object",
            "required": [
                "amount",
                "guild_id",
                "moniker",
                "token"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "guild_id": {
                    "type": "string"
                },
                "moniker": {
                    "type": "string"
                },
                "plural": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "request.UpsertUserDeviceRequest": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string"
                },
                "ios_noti_token": {
                    "type": "string"
                }
            }
        },
        "request.UpsertVoteChannelConfigRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.UpsertWelcomeConfigRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "welcome_message": {
                    "type": "string"
                }
            }
        },
        "request.UserFeedbackRequest": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "command": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "feedback": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.VerifyWalletAddressRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "wallet_address": {
                    "type": "string"
                }
            }
        },
        "response.AddToWatchlistResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.AddToWatchlistResponseData"
                }
            }
        },
        "response.AddToWatchlistResponseData": {
            "type": "object",
            "properties": {
                "base_suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoingeckoSupportedTokens"
                    }
                },
                "target_suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoingeckoSupportedTokens"
                    }
                }
            }
        },
        "response.AllTipBotTokensResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.OffchainTipBotToken"
                    }
                }
            }
        },
        "response.ClaimQuestsRewardsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.ClaimQuestsRewardsResponseData"
                }
            }
        },
        "response.ClaimQuestsRewardsResponseData": {
            "type": "object",
            "properties": {
                "rewards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.QuestUserReward"
                    }
                }
            }
        },
        "response.CoinDescription": {
            "type": "object",
            "properties": {
                "en": {
                    "type": "string"
                }
            }
        },
        "response.CoinImage": {
            "type": "object",
            "properties": {
                "large": {
                    "type": "string"
                },
                "small": {
                    "type": "string"
                },
                "thumb": {
                    "type": "string"
                }
            }
        },
        "response.CoinMarketItemData": {
            "type": "object",
            "properties": {
                "current_price": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_default": {
                    "type": "boolean"
                },
                "is_pair": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price_change_percentage_24h": {
                    "type": "number"
                },
                "price_change_percentage_7d_in_currency": {
                    "type": "number"
                },
                "sparkline_in_7d": {
                    "type": "object",
                    "properties": {
                        "price": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    }
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.CoinPriceHistoryResponse": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "times": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timestamps": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "response.CollectionSuggestions": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.CompareTokenReponseData": {
            "type": "object",
            "properties": {
                "base_coin": {
                    "$ref": "#/definitions/response.GetCoinResponse"
                },
                "base_coin_suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoingeckoSupportedTokens"
                    }
                },
                "from": {
                    "type": "string"
                },
                "ratios": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "target_coin": {
                    "$ref": "#/definitions/response.GetCoinResponse"
                },
                "target_coin_suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoingeckoSupportedTokens"
                    }
                },
                "times": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "response.CompareTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.CompareTokenReponseData"
                }
            }
        },
        "response.ConfigGroupNFTRoleResponse": {
            "type": "object",
            "properties": {
                "group_name": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "nft_collection_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NFTCollectionConfig"
                    }
                },
                "number_of_tokens": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "response.ConfigNotifyResponse": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "total_transaction": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.ConfigureInvitesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "response.CreateNFTCollectionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.NFTCollection"
                }
            }
        },
        "response.CreateTradeOfferResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.TradeOffer"
                }
            }
        },
        "response.CurrentUserUpvoteStreakResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetUserCurrentUpvoteStreakResponse"
                }
            }
        },
        "response.DataFilterConfigByReaction": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.RoleReactionResponse"
                },
                "page": {
                    "description": "page index",
                    "type": "integer"
                },
                "size": {
                    "description": "page size",
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.DataListRoleReactionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.ListRoleReactionResponse"
                },
                "page": {
                    "description": "page index",
                    "type": "integer"
                },
                "size": {
                    "description": "page size",
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.DataMetric": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.Metric"
                }
            }
        },
        "response.DefaultRole": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "response.DefaultRoleResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.DefaultRole"
                }
            }
        },
        "response.DiscordGuildResponse": {
            "type": "object",
            "properties": {
                "bot_addable": {
                    "type": "boolean"
                },
                "bot_arrived": {
                    "type": "boolean"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "boolean"
                },
                "permissions": {
                    "type": "string",
                    "example": "0"
                }
            }
        },
        "response.DiscordUserTokenAlertResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DiscordUserTokenAlert"
                    }
                }
            }
        },
        "response.GenerateVerificationResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "response.GetAllNFTSalesTrackerResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NFTSalesTrackerResponse"
                    }
                }
            }
        },
        "response.GetAllTwitterConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildConfigTwitterFeed"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GetAllTwitterHashtagConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TwitterHashtag"
                    }
                }
            }
        },
        "response.GetAssignedContract": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.OffchainTipBotAssignContract"
                }
            }
        },
        "response.GetCoinResponse": {
            "type": "object",
            "properties": {
                "asset_platform_id": {
                    "type": "string"
                },
                "description": {
                    "$ref": "#/definitions/response.CoinDescription"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#/definitions/response.CoinImage"
                },
                "market_cap_rank": {
                    "type": "integer"
                },
                "market_data": {
                    "$ref": "#/definitions/response.MarketData"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "tickers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TickerData"
                    }
                }
            }
        },
        "response.GetCoinResponseWrapper": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetCoinResponse"
                }
            }
        },
        "response.GetCollectionCountResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.NFTCollectionCount"
                }
            }
        },
        "response.GetDataUserProfileResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetUserProfileResponse"
                }
            }
        },
        "response.GetDefaultTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Token"
                }
            }
        },
        "response.GetDetailNftCollectionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.NFTCollectionDetail"
                }
            }
        },
        "response.GetFiatHistoricalExchangeRatesResponse": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "latest_rate": {
                    "type": "number"
                },
                "rates": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "times": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "response.GetGmConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigGmGn"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GetGuildDefaultNftTickerResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigDefaultCollection"
                }
            }
        },
        "response.GetGuildDefaultTickerResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigDefaultTicker"
                }
            }
        },
        "response.GetGuildPruneExcludeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GuildPruneExcludeList"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GetGuildResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "alias": {
                    "type": "string"
                },
                "bot_scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "global_xp": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "log_channel": {
                    "type": "string"
                },
                "log_channel_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.GetGuildTokensResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Token"
                    }
                }
            }
        },
        "response.GetGuildUserResponse": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "invited_by": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "response.GetGuildsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetGuildResponse"
                    }
                }
            }
        },
        "response.GetHistoricalMarketChartResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.CoinPriceHistoryResponse"
                }
            }
        },
        "response.GetInviteTrackerConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigInviteTracker"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GetInvitesLeaderboardResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.UserInvitesAggregation"
                    }
                }
            }
        },
        "response.GetInvitesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.GetLevelRoleConfigsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildConfigLevelRole"
                    }
                },
                "page": {
                    "description": "page index",
                    "type": "integer"
                },
                "size": {
                    "description": "page size",
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.GetLinkedTelegramResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.UserTelegramDiscordAssociation"
                }
            }
        },
        "response.GetListAllChainsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Chain"
                    }
                }
            }
        },
        "response.GetMyInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/discordgo.User"
                }
            }
        },
        "response.GetNFTActivityData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.IndexerNFTActivityData"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/util.Pagination"
                }
            }
        },
        "response.GetNFTActivityResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetNFTActivityData"
                }
            }
        },
        "response.GetNFTCollectionByAddressChain": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discord": {
                    "type": "string"
                },
                "erc_format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "marketplaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "response.GetNFTCollectionByAddressChainResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetNFTCollectionByAddressChain"
                }
            }
        },
        "response.GetNftWatchlist": {
            "type": "object",
            "properties": {
                "floor_price": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_pair": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price_change_percentage_24h": {
                    "type": "number"
                },
                "price_change_percentage_7d_in_currency": {
                    "type": "number"
                },
                "sparkline_in_7d": {
                    "$ref": "#/definitions/response.SparkLineIn7d"
                },
                "symbol": {
                    "type": "string"
                },
                "token": {
                    "$ref": "#/definitions/response.IndexerToken"
                }
            }
        },
        "response.GetNftWatchlistResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetNftWatchlist"
                    }
                }
            }
        },
        "response.GetRepostReactionConfigsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildConfigRepostReaction"
                    }
                }
            }
        },
        "response.GetSalesTrackerConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigSalesTracker"
                }
            }
        },
        "response.GetSuggestionNFTCollectionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.CollectionSuggestions"
                    }
                }
            }
        },
        "response.GetSupportedChains": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.GetSupportedTokensResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Token"
                    }
                }
            }
        },
        "response.GetTradeOfferResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.TradeOffer"
                }
            }
        },
        "response.GetTwitterBlackListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildConfigTwitterBlacklist"
                    }
                }
            }
        },
        "response.GetTwitterHashtagConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.TwitterHashtag"
                }
            }
        },
        "response.GetTwitterLeaderboardResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetTwitterLeaderboardResponseData"
                }
            }
        },
        "response.GetTwitterLeaderboardResponseData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TwitterPostStreak"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/response.PaginationResponse"
                }
            }
        },
        "response.GetUpvoteTiersConfig": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UpvoteStreakTier"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GetUserBalances": {
            "type": "object",
            "properties": {
                "balances": {
                    "type": "number"
                },
                "balances_in_usd": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rate_in_usd": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.GetUserBalancesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetUserBalances"
                    }
                }
            }
        },
        "response.GetUserCurrentGMStreakResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.DiscordUserGMStreak"
                }
            }
        },
        "response.GetUserCurrentUpvoteStreakResponse": {
            "type": "object",
            "properties": {
                "discord_id": {
                    "type": "string"
                },
                "last_streak_time": {
                    "type": "string"
                },
                "minutes_until_reset": {
                    "type": "number"
                },
                "minutes_until_reset_discordbotlist": {
                    "type": "number"
                },
                "minutes_until_reset_topgg": {
                    "type": "number"
                },
                "streak_count": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "response.GetUserProfileResponse": {
            "type": "object",
            "properties": {
                "about_me": {
                    "type": "string"
                },
                "current_level": {
                    "$ref": "#/definitions/model.ConfigXpLevel"
                },
                "guild": {
                    "$ref": "#/definitions/model.DiscordGuild"
                },
                "guild_rank": {
                    "type": "integer"
                },
                "guild_xp": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "next_level": {
                    "$ref": "#/definitions/model.ConfigXpLevel"
                },
                "nr_of_actions": {
                    "type": "integer"
                },
                "progress": {
                    "type": "number"
                },
                "user_faction_xps": {
                    "$ref": "#/definitions/model.UserFactionXpsMapping"
                },
                "user_wallet": {
                    "$ref": "#/definitions/model.UserWallet"
                }
            }
        },
        "response.GetUserQuestListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.QuestUserList"
                    }
                }
            }
        },
        "response.GetUserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.User"
                }
            }
        },
        "response.GetUserUpvoteLeaderboardResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DiscordUserUpvoteStreak"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GetUserWalletByGuildIDAddressResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.UserWallet"
                }
            }
        },
        "response.GetVoteChannelConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigVoteChannel"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GetWatchlistResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Pagination *PaginationResponse  ` + "`" + `json:\"pagination\"` + "`" + `",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.CoinMarketItemData"
                    }
                }
            }
        },
        "response.GetWelcomeChannelConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigWelcomeChannel"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GuildConfigDefaultCurrencyResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "tip_bot_token": {
                    "$ref": "#/definitions/model.OffchainTipBotToken"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.GuildPruneExcludeList": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.IndexerChain": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "is_evm": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.IndexerGetNFTTokenDetailResponseWithSuggestions": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.IndexerNFTTokenDetailData"
                },
                "default_symbol": {
                    "$ref": "#/definitions/response.CollectionSuggestions"
                },
                "suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.CollectionSuggestions"
                    }
                }
            }
        },
        "response.IndexerGetNFTTokenTickersResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.IndexerNFTTokenTickersData"
                }
            }
        },
        "response.IndexerGetNFTTokensResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.IndexerNFTTokenDetailData"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.IndexerNFTActivityData": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "contract_address": {
                    "type": "string"
                },
                "created_time": {
                    "type": "string"
                },
                "event_type": {
                    "type": "string"
                },
                "from_address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_update_time": {
                    "type": "string"
                },
                "listing_price": {
                    "type": "string"
                },
                "listing_price_obj": {
                    "$ref": "#/definitions/response.IndexerPrice"
                },
                "listing_status": {
                    "type": "string"
                },
                "listing_type": {
                    "type": "string"
                },
                "payment_token": {
                    "type": "integer"
                },
                "platform_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "string"
                },
                "sold_price": {
                    "type": "string"
                },
                "sold_price_obj": {
                    "$ref": "#/definitions/response.IndexerPrice"
                },
                "to_address": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "transaction_hash": {
                    "type": "string"
                }
            }
        },
        "response.IndexerNFTCollectionTickersData": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain": {
                    "$ref": "#/definitions/response.IndexerChain"
                },
                "collection_image": {
                    "type": "string"
                },
                "floor_price": {
                    "$ref": "#/definitions/response.IndexerPrice"
                },
                "items": {
                    "type": "integer"
                },
                "last_sale_price": {
                    "$ref": "#/definitions/response.IndexerPrice"
                },
                "marketplaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "owners": {
                    "type": "integer"
                },
                "price_change_1d": {
                    "type": "string"
                },
                "price_change_30d": {
                    "type": "string"
                },
                "price_change_7d": {
                    "type": "string"
                },
                "tickers": {
                    "$ref": "#/definitions/response.IndexerTickers"
                },
                "total_volume": {
                    "$ref": "#/definitions/response.IndexerPrice"
                }
            }
        },
        "response.IndexerNFTCollectionTickersResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.IndexerNFTCollectionTickersData"
                }
            }
        },
        "response.IndexerNFTTokenAttribute": {
            "type": "object",
            "properties": {
                "collection_address": {
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                },
                "frequency": {
                    "type": "string"
                },
                "rarity": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "trait_type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "response.IndexerNFTTokenDetailData": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.IndexerNFTTokenAttribute"
                    }
                },
                "collection_address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "image_cdn": {
                    "type": "string"
                },
                "image_content_type": {
                    "type": "string"
                },
                "marketplace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NftListingMarketplace"
                    }
                },
                "metadata_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/response.IndexerNftTokenOwner"
                },
                "rarity": {
                    "$ref": "#/definitions/response.IndexerNFTTokenRarity"
                },
                "rarity_rank": {
                    "type": "integer"
                },
                "rarity_score": {
                    "type": "string"
                },
                "rarity_tier": {
                    "type": "string"
                },
                "thumbnail_cdn": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "response.IndexerNFTTokenRarity": {
            "type": "object",
            "properties": {
                "rank": {
                    "type": "integer"
                },
                "rarity": {
                    "type": "string"
                },
                "score": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.IndexerNFTTokenTickersData": {
            "type": "object",
            "properties": {
                "collection_address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "floor_price": {
                    "$ref": "#/definitions/response.IndexerPrice"
                },
                "image": {
                    "type": "string"
                },
                "image_cdn": {
                    "type": "string"
                },
                "last_sale_price": {
                    "$ref": "#/definitions/response.IndexerPrice"
                },
                "name": {
                    "type": "string"
                },
                "price_change_1d": {
                    "type": "string"
                },
                "price_change_30d": {
                    "type": "string"
                },
                "price_change_7d": {
                    "type": "string"
                },
                "rarity_rank": {
                    "type": "integer"
                },
                "rarity_score": {
                    "type": "string"
                },
                "rarity_tier": {
                    "type": "string"
                },
                "tickers": {
                    "$ref": "#/definitions/response.IndexerTickers"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "response.IndexerNftTokenOwner": {
            "type": "object",
            "properties": {
                "collection_address": {
                    "type": "string"
                },
                "owner_address": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "response.IndexerPrice": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "token": {
                    "$ref": "#/definitions/response.IndexerToken"
                }
            }
        },
        "response.IndexerTickers": {
            "type": "object",
            "properties": {
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.IndexerPrice"
                    }
                },
                "times": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timestamps": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "response.IndexerToken": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "decimals": {
                    "type": "integer"
                },
                "is_native": {
                    "type": "boolean"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.InvitesAggregationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.UserInvitesAggregation"
                }
            }
        },
        "response.LinkUserTelegramWithDiscordResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.LinkUserTelegramWithDiscordResponseData"
                }
            }
        },
        "response.LinkUserTelegramWithDiscordResponseData": {
            "type": "object",
            "properties": {
                "discord_id": {
                    "type": "string"
                },
                "discord_username": {
                    "type": "string"
                },
                "telegram_username": {
                    "type": "string"
                }
            }
        },
        "response.ListAllCustomTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Token"
                    }
                }
            }
        },
        "response.ListAllNFTCollectionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.NFTCollection"
                    }
                }
            }
        },
        "response.ListConfigNotifyResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ConfigNotifyResponse"
                    }
                }
            }
        },
        "response.ListGuildGroupNFTRolesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ListGuildNFTRoleConfigsResponse"
                    }
                }
            }
        },
        "response.ListGuildNFTRoleConfigsResponse": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "nft_collection_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NFTCollectionConfig"
                    }
                },
                "number_of_tokens": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "string"
                },
                "role_name": {
                    "type": "string"
                }
            }
        },
        "response.ListMyGuildsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DiscordGuildResponse"
                    }
                }
            }
        },
        "response.ListRoleReactionResponse": {
            "type": "object",
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.RoleReactionByMessage"
                    }
                },
                "guild_id": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "response.LogoutResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "response.MarketData": {
            "type": "object",
            "properties": {
                "current_price": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "market_cap": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "price_change_percentage_1h_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "price_change_percentage_24h_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "price_change_percentage_7d_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                }
            }
        },
        "response.Metric": {
            "type": "object",
            "properties": {
                "nft_collections": {
                    "type": "integer"
                },
                "server_active_users": {
                    "type": "integer"
                },
                "server_command_usage": {
                    "type": "integer"
                },
                "server_token": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "server_token_supported": {
                    "type": "integer"
                },
                "server_verified_wallets": {
                    "type": "integer"
                },
                "total_active_users": {
                    "type": "integer"
                },
                "total_command_usage": {
                    "type": "integer"
                },
                "total_servers": {
                    "type": "integer"
                },
                "total_token": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "total_token_supported": {
                    "type": "integer"
                },
                "total_verified_wallets": {
                    "type": "integer"
                }
            }
        },
        "response.MonikerConfigData": {
            "type": "object",
            "properties": {
                "moniker": {
                    "$ref": "#/definitions/model.MonikerConfig"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "response.MonikerConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.MonikerConfigData"
                    }
                }
            }
        },
        "response.NFTChainCollectionCount": {
            "type": "object",
            "properties": {
                "chain": {
                    "$ref": "#/definitions/model.Chain"
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "response.NFTCollectionConfig": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "chain_name": {
                    "type": "string"
                },
                "collection_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "erc_format": {
                    "type": "string"
                },
                "explorer_url": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.NFTCollectionCount": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NFTChainCollectionCount"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.NFTCollectionsData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.NFTCollection"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/util.Pagination"
                }
            }
        },
        "response.NFTCollectionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.NFTCollectionsData"
                }
            }
        },
        "response.NFTNewListed": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.NewListedNFTCollection"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/util.Pagination"
                }
            }
        },
        "response.NFTNewListedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.NFTNewListed"
                }
            }
        },
        "response.NFTSalesTrackerResponse": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "contract_address": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                }
            }
        },
        "response.NFTTradingVolume": {
            "type": "object",
            "properties": {
                "collection_address": {
                    "type": "string"
                },
                "collection_chain_id": {
                    "type": "number"
                },
                "collection_name": {
                    "type": "string"
                },
                "collection_symbol": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "trading_volume": {
                    "type": "number"
                }
            }
        },
        "response.NFTTradingVolumeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NFTTradingVolume"
                    }
                }
            }
        },
        "response.NewGuildConfigWalletVerificationMessageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigWalletVerificationMessage"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "response.NewGuildGroupNFTRoleResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.ConfigGroupNFTRoleResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.NftListingMarketplace": {
            "type": "object",
            "properties": {
                "contract_address": {
                    "type": "string"
                },
                "floor_price": {
                    "type": "string"
                },
                "item_url": {
                    "type": "string"
                },
                "listing_price": {
                    "type": "string"
                },
                "listing_status": {
                    "type": "string"
                },
                "payment_token": {
                    "type": "string"
                },
                "payment_token_decimals": {
                    "type": "string"
                },
                "platform_id": {
                    "type": "integer"
                },
                "platform_name": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "response.NftMetadataAttrIcon": {
            "type": "object",
            "properties": {
                "discord_icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "trait_type": {
                    "type": "string"
                },
                "unicode_icon": {
                    "type": "string"
                }
            }
        },
        "response.NftMetadataAttrIconResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NftMetadataAttrIcon"
                    }
                }
            }
        },
        "response.NftSales": {
            "type": "object",
            "properties": {
                "buyer": {
                    "type": "string"
                },
                "nft_collection_address": {
                    "type": "string"
                },
                "nft_name": {
                    "type": "string"
                },
                "nft_price": {
                    "type": "number"
                },
                "nft_price_token": {
                    "type": "string"
                },
                "nft_status": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "seller": {
                    "type": "string"
                }
            }
        },
        "response.NftSalesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NftSales"
                    }
                }
            }
        },
        "response.NftWatchlistSuggest": {
            "type": "object",
            "properties": {
                "default_symbol": {
                    "$ref": "#/definitions/response.CollectionSuggestions"
                },
                "suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.CollectionSuggestions"
                    }
                }
            }
        },
        "response.NftWatchlistSuggestResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.NftWatchlistSuggest"
                }
            }
        },
        "response.OffchainTipBotTransferToken": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "amount_in_usd": {
                    "type": "number"
                },
                "recipient_id": {
                    "type": "string"
                },
                "sender_id": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.OffchainTipBotTransferTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.OffchainTipBotTransferToken"
                    }
                }
            }
        },
        "response.OffchainTipBotWithdraw": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "to_address": {
                    "type": "string"
                },
                "transaction_fee": {
                    "type": "number"
                },
                "tx_hash": {
                    "type": "string"
                },
                "tx_url": {
                    "type": "string"
                },
                "user_discord_id": {
                    "type": "string"
                },
                "withdraw_amount": {
                    "$ref": "#/definitions/big.Float"
                }
            }
        },
        "response.OffchainTipBotWithdrawResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.OffchainTipBotWithdraw"
                }
            }
        },
        "response.PaginationResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "description": "page index",
                    "type": "integer"
                },
                "size": {
                    "description": "page size",
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.ResponseDataMessage": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.ResponseMessage"
                }
            }
        },
        "response.ResponseMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "response.ResponseStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "response.ResponseSucess": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "response.Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "reaction": {
                    "type": "string"
                }
            }
        },
        "response.RoleReactionByMessage": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Role"
                    }
                }
            }
        },
        "response.RoleReactionConfigResponse": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Role"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "response.RoleReactionResponse": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/response.Role"
                }
            }
        },
        "response.SearchCoinResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoingeckoSupportedTokens"
                    }
                }
            }
        },
        "response.SparkLineIn7d": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            }
        },
        "response.TickerData": {
            "type": "object",
            "properties": {
                "base": {
                    "type": "string"
                },
                "coin_id": {
                    "type": "string"
                },
                "last": {
                    "type": "number"
                },
                "target": {
                    "type": "string"
                },
                "target_coin_id": {
                    "type": "string"
                }
            }
        },
        "response.ToggleActivityConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigActivity"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.TransactionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.OffchainTipBotTransferHistory"
                    }
                }
            }
        },
        "response.TwitterHashtag": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "from_twitter": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "guild_id": {
                    "type": "string"
                },
                "hashtag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rule_id": {
                    "type": "string"
                },
                "twitter_username": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "response.UpdateUserFeedbackResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.UserFeedback"
                }
            }
        },
        "response.User": {
            "type": "object",
            "properties": {
                "guild_users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetGuildUserResponse"
                    }
                },
                "id": {
                    "type": "string"
                },
                "in_discord_wallet_address": {
                    "type": "string"
                },
                "in_discord_wallet_number": {
                    "type": "integer"
                },
                "nr_of_join": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.UserDeviceResponse": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string"
                },
                "ios_noti_token": {
                    "type": "string"
                }
            }
        },
        "response.UserFeedbackResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UserFeedback"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.UserInvitesAggregation": {
            "type": "object",
            "properties": {
                "fake": {
                    "type": "integer"
                },
                "inviter_id": {
                    "type": "string"
                },
                "left": {
                    "type": "integer"
                },
                "regular": {
                    "type": "integer"
                }
            }
        },
        "response.UserTransactionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.OffchainTipBotTransferHistory"
                    }
                }
            }
        },
        "util.Pagination": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "uuid.NullUUID": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if UUID is not NULL",
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "access_token",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Swagger API",
	Description:      "This is a swagger for mochi api.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
