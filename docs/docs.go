// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api-key/binance": {
            "post": {
                "description": "Integrate binance key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ApiKey"
                ],
                "summary": "Integrate binance key",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProfileApiKeyResponse"
                        }
                    }
                }
            }
        },
        "/api-key/me": {
            "post": {
                "description": "Create apiKey",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ApiKey"
                ],
                "summary": "Create apiKey",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProfileApiKeyResponse"
                        }
                    }
                }
            }
        },
        "/api-key/unlink-binance": {
            "post": {
                "description": "Unlink binance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ApiKey"
                ],
                "summary": "Unlink binance",
                "parameters": [
                    {
                        "description": "Unlink Binance request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UnlinkBinance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UnlinkBinance"
                        }
                    }
                }
            }
        },
        "/community/feedback": {
            "get": {
                "description": "Get users' feedbacks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get users' feedbacks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "profile id",
                        "name": "profile_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "none, completed, confirmed",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserFeedbackResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update users' feedbacks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Update users' feedbacks",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateUserFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UpdateUserFeedbackResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Post users' feedbacks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Post users' feedbacks",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/invites/": {
            "get": {
                "description": "Get invites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get invites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Member ID",
                        "name": "member_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/community/quests": {
            "get": {
                "description": "Get user quest list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get user quest list",
                "parameters": [
                    {
                        "type": "string",
                        "name": "routine",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserQuestListResponse"
                        }
                    }
                }
            }
        },
        "/community/quests/claim": {
            "post": {
                "description": "Claim user quests' rewards",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Claim user quests' rewards",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ClaimQuestsRewardsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ClaimQuestsRewardsResponse"
                        }
                    }
                }
            }
        },
        "/community/quests/progress": {
            "post": {
                "description": "Update user's quest progress",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Update user's quest progress",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateQuestProgressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/community/repost-reactions/message-repost": {
            "put": {
                "description": "edit message repost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "edit message repost",
                "parameters": [
                    {
                        "description": "edit message repost request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.EditMessageRepostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/community/tagme": {
            "get": {
                "description": "Get tagme",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get tagme",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Upsert user tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Upsert user tag",
                "parameters": [
                    {
                        "description": "Upsert user tag request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertUserTag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-channels/gm": {
            "get": {
                "description": "Get GM config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Get GM config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGmConfigResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Update or insert GM config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Update or insert GM config",
                "parameters": [
                    {
                        "description": "Upsert GM Config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertGmConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-channels/tip-notify": {
            "get": {
                "description": "API get list config notify channel for token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "OffChain Tip Bot - Config notify",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild id",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListConfigNotifyResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API config notify channel for token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "OffChain Tip Bot - Config notify",
                "parameters": [
                    {
                        "description": "config notify request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateTipConfigNotify"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-channels/tip-notify/{id}": {
            "delete": {
                "description": "API delete config notify channel for token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "OffChain Tip Bot - Config notify",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of config notify",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-channels/welcome": {
            "get": {
                "description": "Get welcome channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Get welcome channel config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetWelcomeChannelConfigResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Update or insert welcome channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Update or insert welcome channel config",
                "parameters": [
                    {
                        "description": "Upsert welcome channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertWelcomeConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetWelcomeChannelConfigResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete welcome channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Delete welcome channel config",
                "parameters": [
                    {
                        "description": "Delete welcome channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteWelcomeConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-channels/{guild_id}/proposal": {
            "get": {
                "description": "Get dao proposal channel config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Get dao proposal channel config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildConfigDaoProposal"
                        }
                    }
                }
            },
            "post": {
                "description": "Create proposal channel config for dao voting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Create proposal channel config",
                "parameters": [
                    {
                        "description": "Create proposal channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateProposalChannelConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateProposalChannelConfigResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete dao proposal config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigChannel"
                ],
                "summary": "Delete dao proposal channel config",
                "parameters": [
                    {
                        "description": "Delete dao proposal channel config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteGuildConfigDaoProposal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/custom-tokens": {
            "post": {
                "description": "Guild custom token config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Guild custom token config",
                "parameters": [
                    {
                        "description": "Custom guild custom token config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertCustomTokenConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/default-currency": {
            "get": {
                "description": "Get default currency by guild id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get default currency by guild id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GuildConfigDefaultCurrencyResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Upsert default currency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Upsert default currency",
                "parameters": [
                    {
                        "description": "Upsert default currency config",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertGuildDefaultCurrencyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete default currency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Delete default currency",
                "parameters": [
                    {
                        "description": "Delete default currency config",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GuildIDRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/default-symbol": {
            "post": {
                "description": "Create default collection symbol",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Create default collection symbol",
                "parameters": [
                    {
                        "description": "Config Default Collection Symbol request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigDefaultCollection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/default-ticker": {
            "get": {
                "description": "Get guild default ticker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get guild default ticker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ticker query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildDefaultTickerResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Set guild default ticker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Set guild default ticker",
                "parameters": [
                    {
                        "description": "Set guild default ticker request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GuildConfigDefaultTickerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/default-ticker/{guild_id}": {
            "get": {
                "description": "Get list default ticker of a guild.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get list default ticker of a guild.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetListGuildDefaultTickerResponse"
                        }
                    }
                }
            }
        },
        "/config-defi/monikers": {
            "post": {
                "description": "Upsert moniker config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Upsert moniker config",
                "parameters": [
                    {
                        "description": "Upsert moniker config",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertMonikerConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete moniker config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Delete moniker config",
                "parameters": [
                    {
                        "description": "Delete moinker config",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteMonikerConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/monikers/default": {
            "get": {
                "description": "Get default moniker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get default moniker",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MonikerConfigResponse"
                        }
                    }
                }
            }
        },
        "/config-defi/monikers/{guild_id}": {
            "get": {
                "description": "Get moniker configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get moniker configs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MonikerConfigResponse"
                        }
                    }
                }
            }
        },
        "/config-defi/tip-range": {
            "post": {
                "description": "Upsert config tip range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Upsert config tip range",
                "parameters": [
                    {
                        "description": "Upsert config tip range",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertGuildConfigTipRangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GuildConfigTipRangeResponse"
                        }
                    }
                }
            }
        },
        "/config-defi/tip-range/{guild_id}": {
            "get": {
                "description": "Get config tip range by guild id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get config tip range by guild id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GuildConfigTipRangeResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove config tip range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Remove config tip range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/tokens": {
            "get": {
                "description": "Get guild tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get guild tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildTokensResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Update or insert guild token config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Update or insert guild token config",
                "parameters": [
                    {
                        "description": "Upsert Guild Token Config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertGuildTokenConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-defi/tokens/default": {
            "get": {
                "description": "Get Default token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Get Default token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetDefaultTokenResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Config Default token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Config Default token",
                "parameters": [
                    {
                        "description": "Config default token request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigDefaultTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove Default token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigDefi"
                ],
                "summary": "Remove Default token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config-roles/reaction-roles/filter": {
            "post": {
                "description": "Filter config by reaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Filter config by reaction",
                "parameters": [
                    {
                        "description": "Filter config by reaction request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RoleReactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DataFilterConfigByReaction"
                        }
                    }
                }
            }
        },
        "/config/role/{guild_id}/admin": {
            "get": {
                "description": "Get list admin role config of guild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Get list admin role config of guild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListGuildAdminRoles"
                        }
                    }
                }
            },
            "post": {
                "description": "Create guild admin role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Create guild admin role config",
                "parameters": [
                    {
                        "description": "Create guild admin role config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateGuildAdminRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config/role/{guild_id}/admin/{id}": {
            "delete": {
                "description": "Remove guild admin role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Remove guild admin role config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Config ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config/role/{guild_id}/default": {
            "get": {
                "description": "Get default roles by guild id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Get default roles by guild id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DefaultRoleResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create default role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Create default role",
                "parameters": [
                    {
                        "description": "Create default role request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateDefaultRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DefaultRoleResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete default role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Delete default role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseSucess"
                        }
                    }
                }
            }
        },
        "/config/role/{guild_id}/level": {
            "get": {
                "description": "Get level role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Get level role config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetLevelRoleConfigsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Config level role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Config Level role",
                "parameters": [
                    {
                        "description": "Config level role request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigLevelRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove level role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Remove level role config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config/role/{guild_id}/nft": {
            "get": {
                "description": "List guild nft roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "List guild nft roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListGuildGroupNFTRolesResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "New guild nft role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "New guild nft role",
                "parameters": [
                    {
                        "description": "New NFT role request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigGroupNFTRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NewGuildGroupNFTRoleResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove guild nft role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Remove guild nft role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "32951e68-9959-4e1d-88ca-22b442e19efe|45d06941-468b-4e5e-8b8f-d20c77c87805",
                        "name": "config_ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config/role/{guild_id}/nft/group": {
            "delete": {
                "description": "Remove guild group nft role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Remove guild group nft role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group config ID",
                        "name": "group_config_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/config/role/{guild_id}/reaction": {
            "get": {
                "description": "Get all role reaction configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Get all role reaction configs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DataListRoleReactionResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add reaction role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Add reaction role config",
                "parameters": [
                    {
                        "description": "Add reaction role config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RoleReactionUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.RoleReactionConfigResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove reaction role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Remove reaction role config",
                "parameters": [
                    {
                        "description": "Remove reaction role config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RoleReactionUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseSucess"
                        }
                    }
                }
            }
        },
        "/config/role/{guild_id}/token": {
            "get": {
                "description": "Get list token role config of guild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Get list token role config of guild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListGuildTokenRoles"
                        }
                    }
                }
            },
            "post": {
                "description": "Create guild token role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Create guild token role config",
                "parameters": [
                    {
                        "description": "Create guild token role config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateGuildTokenRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateGuildTokenRole"
                        }
                    }
                }
            }
        },
        "/config/role/{guild_id}/token/{id}": {
            "delete": {
                "description": "Remove guild token role config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigRole"
                ],
                "summary": "Remove guild token role config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Config ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/configs/nft-roles/group": {
            "delete": {
                "description": "Remove guild group nft role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Remove guild group nft role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group config ID",
                        "name": "group_config_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/configs/sales-tracker": {
            "get": {
                "description": "Get sales tracker config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Get sales tracker config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSalesTrackerConfigResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create sales tracker config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Create sales tracker config",
                "parameters": [
                    {
                        "description": "Create sales tracker config request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateSalesTrackerConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/dao-voting/proposals": {
            "get": {
                "description": "Get dao proposals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO-Voting"
                ],
                "summary": "Get dao proposals",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discord ID",
                        "name": "user_discord_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetAllDaoProposals"
                        }
                    }
                }
            },
            "post": {
                "description": "Create dao proposal and then create a discussion channel for users to discuss about the proposal.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO Proposal"
                ],
                "summary": "Dao Proposal",
                "parameters": [
                    {
                        "description": "Create dao proposal request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateDaoProposalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateDaoProposalResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Detele DAO proposal and then remove its discussion channel.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO Proposal"
                ],
                "summary": "Delete DAO Proposal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Proposal ID",
                        "name": "proposal_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/dao-voting/proposals/vote": {
            "post": {
                "description": "Create dao vote",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dao-voting"
                ],
                "summary": "Create dao vote",
                "parameters": [
                    {
                        "description": "Create dao vote request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateDaoVoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/dao-voting/proposals/votes/{vote_id}": {
            "put": {
                "description": "Update dao vote",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dao-voting"
                ],
                "summary": "Update dao vote",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DAO Vote ID",
                        "name": "vote_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update dao vote request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateDaoVoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UpdateVote"
                        }
                    }
                }
            }
        },
        "/dao-voting/token-holder/status": {
            "get": {
                "description": "Check token holder connect wallet yet? And have enough amount based on criteria (has 10 icy, 3 neko, havent connected walelt, …)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO-Voting"
                ],
                "summary": "Get status of token holder for creating proposal and voting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discord ID",
                        "name": "user-discord-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TokenHolderStatus"
                        }
                    }
                }
            }
        },
        "/dao-voting/user-votes": {
            "get": {
                "description": "Get dao votes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO-Voting"
                ],
                "summary": "Get dao votes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discord ID",
                        "name": "user_discord_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Proposal ID",
                        "name": "proposal-id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetAllDaoProposalVotes"
                        }
                    }
                }
            }
        },
        "/dao-voting/votes": {
            "get": {
                "description": "Get dao proposal vote of user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO-Voting"
                ],
                "summary": "Get dao proposal vote of user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Proposal ID",
                        "name": "proposal_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Discord ID",
                        "name": "user_discord_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetVote"
                        }
                    }
                }
            }
        },
        "/data/configs/activities/{activity}": {
            "post": {
                "description": "Toggle activity config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data"
                ],
                "summary": "Toggle activity config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity name",
                        "name": "activity",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ToggleActivityConfigResponse"
                        }
                    }
                }
            }
        },
        "/defi/chains": {
            "get": {
                "description": "List All Chain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "List All Chain",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetListAllChainsResponse"
                        }
                    }
                }
            }
        },
        "/defi/coins": {
            "get": {
                "description": "Search coin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Search coin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "coin query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SearchCoinResponse"
                        }
                    }
                }
            }
        },
        "/defi/coins/binance/{symbol}": {
            "get": {
                "description": "Get coin data from Binance Exchange",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Get coin data from Binance Exchange",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coin ID",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetCoinResponseWrapper"
                        }
                    }
                }
            }
        },
        "/defi/coins/compare": {
            "get": {
                "description": "Compare token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Compare token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "base token",
                        "name": "base",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "target token",
                        "name": "target",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "compare interval",
                        "name": "interval",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CompareTokenResponse"
                        }
                    }
                }
            }
        },
        "/defi/coins/{id}": {
            "get": {
                "description": "Get coin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Get coin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetCoinResponseWrapper"
                        }
                    }
                }
            }
        },
        "/defi/custom-tokens": {
            "get": {
                "description": "Find token by contract address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Find token by contract address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chain ID",
                        "name": "chain_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contract address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.FindTokenByContractAddressResponse"
                        }
                    }
                }
            }
        },
        "/defi/gas-tracker": {
            "get": {
                "description": "Get gas tracker of all chain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Get gas tracker of all chain",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GasTrackerResponseData"
                        }
                    }
                }
            }
        },
        "/defi/gas-tracker/{chain}": {
            "get": {
                "description": "Get gas tracker of one chain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Get gas tracker of one chain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "chain",
                        "name": "chain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ChainGasTrackerResponseData"
                        }
                    }
                }
            }
        },
        "/defi/keys": {
            "get": {
                "description": "Search coin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Search coin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "coin query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.FriendTechKeysResponse"
                        }
                    }
                }
            }
        },
        "/defi/market-chart": {
            "get": {
                "description": "Get historical market chart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Get historical market chart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coin ID",
                        "name": "coin_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Day",
                        "name": "day",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "usd",
                        "description": "Currency",
                        "name": "currency",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetHistoricalMarketChartResponse"
                        }
                    }
                }
            }
        },
        "/defi/market-data": {
            "get": {
                "description": "Get coins market data of top coins",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Get coins market data of top coins",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page_size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "accepted values: price_change_percentage_7d_asc, price_change_percentage_7d_desc, price_change_percentage_1h_asc, price_change_percentage_1h_desc, price_change_percentage_24h_asc, price_change_percentage_24h_desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetCoinsMarketDataResponse"
                        }
                    }
                }
            }
        },
        "/defi/price-alert": {
            "get": {
                "description": "Get user's price alerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Get user's price alerts",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "user_discord_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListTokenPriceAlertResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add to user's price alert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Add to user's price alert",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddTokenPriceAlertRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AddTokenPriceAlertResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove from user's price alerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Remove from user's price alerts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/defi/token": {
            "get": {
                "description": "Get supported token by address and chain id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Get supported token by address and chain id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token chain",
                        "name": "chain",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSupportedTokenResponse"
                        }
                    }
                }
            }
        },
        "/defi/token-support": {
            "get": {
                "description": "Get tokens requested by user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Get tokens requested by user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSupportedTokensResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Request support token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Request support token",
                "parameters": [
                    {
                        "description": "Create user token support request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateUserTokenSupportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateUserTokenSupportRequest"
                        }
                    }
                }
            }
        },
        "/defi/token-support/{id}/approve": {
            "put": {
                "description": "Approve support token request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Approve support token request",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Support Token Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateUserTokenSupportRequest"
                        }
                    }
                }
            }
        },
        "/defi/token-support/{id}/reject": {
            "put": {
                "description": "Reject support token request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Reject support token request",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Support Token Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateUserTokenSupportRequest"
                        }
                    }
                }
            }
        },
        "/defi/tokens": {
            "get": {
                "description": "Get supported tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Get supported tokens",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSupportedTokensResponse"
                        }
                    }
                }
            }
        },
        "/defi/tokens/info/{id}": {
            "get": {
                "description": "Get token info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi",
                    "Public"
                ],
                "summary": "Get token info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TokenInfoResponse"
                        }
                    }
                }
            }
        },
        "/defi/top-gainer-loser": {
            "get": {
                "description": "Get top 300 gainer and loser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Get top 300 gainer and loser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "default: 24h, accepted value: 1h, 24h, 7d, 14d, 30d, 60d, 1y",
                        "name": "duration",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTopGainerLoser"
                        }
                    }
                }
            }
        },
        "/defi/tracking-keys": {
            "get": {
                "description": "Get user's friend tech key watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Get user's friend tech key watchlist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile_id",
                        "name": "profile_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TrackFriendTechKeyResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Track a specific friend tech key by adding to user's watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Track a specific friend tech key by adding to user's watchlist",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TrackFriendTechKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TrackFriendTechKeyResponse"
                        }
                    }
                }
            }
        },
        "/defi/tracking-keys/{id}": {
            "put": {
                "description": "Update friend tech key track config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Update friend tech key track config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateFriendTechKeyTrackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TrackFriendTechKeyResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Untrack a specific friend tech key by removing from user's watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Untrack a specific friend tech key by removing from user's watchlist",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/defi/trending": {
            "get": {
                "description": "Get trending search of coins",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Defi"
                ],
                "summary": "Get trending search of coins",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTrendingSearch"
                        }
                    }
                }
            }
        },
        "/dexes/search": {
            "get": {
                "description": "Search dex pair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dex"
                ],
                "summary": "Search dex pair",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dex query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SearchDexPairResponse"
                        }
                    }
                }
            }
        },
        "/earns/airdrop-campaigns": {
            "get": {
                "description": "Get Airdrop Campaign List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airdrop-campaigns"
                ],
                "summary": "Get Airdrop Campaign List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "keyword",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "profile id",
                        "name": "profile_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AirdropCampaignsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create airdrop campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airdrop-campaigns"
                ],
                "summary": "Create airdrop campaign",
                "parameters": [
                    {
                        "description": "Create airdrop campaign request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateAirdropCampaignRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AirdropCampaignResponse"
                        }
                    }
                }
            }
        },
        "/earns/airdrop-campaigns/stats": {
            "get": {
                "description": "Get Airdrop Campaign List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airdrop-campaigns"
                ],
                "summary": "Get Airdrop Campaign List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile_id",
                        "name": "profile_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AirdropCampaignStatResponse"
                        }
                    }
                }
            }
        },
        "/earns/airdrop-campaigns/{id}": {
            "get": {
                "description": "Get Airdrop Campaign By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airdrop-campaigns"
                ],
                "summary": "Get Airdrop Campaign By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "airdrop campaign id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "profile id",
                        "name": "profile_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AirdropCampaignResponse"
                        }
                    }
                }
            }
        },
        "/emojis": {
            "get": {
                "description": "list emojis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Emojis"
                ],
                "summary": "list emojis",
                "parameters": [
                    {
                        "type": "string",
                        "description": "codes",
                        "name": "codes",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListEmojisResponse"
                        }
                    }
                }
            }
        },
        "/fiat/historical-exchange-rates": {
            "get": {
                "description": "Remove from user's watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fiat"
                ],
                "summary": "Get historical market chart",
                "parameters": [
                    {
                        "type": "string",
                        "name": "base",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 365,
                        "minimum": 7,
                        "type": "integer",
                        "name": "days",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "target",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetFiatHistoricalExchangeRatesResponse"
                        }
                    }
                }
            }
        },
        "/guilds": {
            "get": {
                "description": "Get guilds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Get guilds",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildsResponse"
                        }
                    }
                }
            }
        },
        "/guilds/user-managed": {
            "get": {
                "description": "Get my guild list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Get my guilds list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListMyGuildsResponse"
                        }
                    }
                }
            }
        },
        "/guilds/{guild_id}": {
            "get": {
                "description": "Get guild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Get guild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update guild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Update guild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update guild request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateGuildRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/guilds/{guild_id}/custom-tokens": {
            "get": {
                "description": "List all guild custom token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "List all guild custom token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListAllCustomTokenResponse"
                        }
                    }
                }
            }
        },
        "/guilds/{guild_id}/roles": {
            "get": {
                "description": "Update guild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guild"
                ],
                "summary": "Update guild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.DiscordGuildRole"
                            }
                        }
                    }
                }
            }
        },
        "/invests": {
            "get": {
                "description": "Get invest list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invest"
                ],
                "summary": "Get invest list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the filterd chain ids, split by comma",
                        "name": "chainIds",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the filterd platforms (aave_v2, aave_v3), split by comma",
                        "name": "platforms",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the filterd types (stake, lend), split by comma",
                        "name": "types",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the filtered token address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the filtered status (active, inactive)",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetInvestListResponse"
                        }
                    }
                }
            }
        },
        "/nfts": {
            "get": {
                "description": "List all nft collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "List all nft collections",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListAllNFTCollectionsResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections": {
            "get": {
                "description": "Get NFT trading volume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT trading volume",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NFTCollectionsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create NFT Collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Create NFT Collection",
                "parameters": [
                    {
                        "description": "Create nft collection request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateNFTCollectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateNFTCollectionResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections/address/{address}": {
            "get": {
                "description": "Get NFT collection by address chain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT collection by address chain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Chain",
                        "name": "chain",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetNFTCollectionByAddressChainResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections/stats": {
            "get": {
                "description": "Get collection count",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get collection count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetCollectionCountResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections/suggestion": {
            "get": {
                "description": "Get guild suggest nft collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get guild suggest nft collections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "symbol collection query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSuggestionNFTCollectionsResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections/tickers": {
            "get": {
                "description": "Get NFT collection tickers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT collection tickers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CollectionAddress",
                        "name": "collection_address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "to",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.IndexerNFTCollectionTickersResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections/{address}": {
            "patch": {
                "description": "Update NFT Collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Update NFT Collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/nfts/collections/{symbol}": {
            "get": {
                "description": "Get NFT Tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT Tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.IndexerGetNFTTokensResponse"
                        }
                    }
                }
            }
        },
        "/nfts/collections/{symbol}/detail": {
            "get": {
                "description": "Get detail nft collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get detail nft collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Query by collection address",
                        "name": "query_address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetDetailNftCollectionResponse"
                        }
                    }
                }
            }
        },
        "/nfts/default-nft-ticker": {
            "get": {
                "description": "Get guild default nft ticker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get guild default nft ticker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ticker query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGuildDefaultNftTickerResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Set guild default nft ticker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Set guild default nft ticker",
                "parameters": [
                    {
                        "description": "Set guild default ticker request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GuildConfigDefaultNftTickerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseDataMessage"
                        }
                    }
                }
            }
        },
        "/nfts/icons": {
            "get": {
                "description": "Get NFT metadata attribute icon",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT metadata attribute icon",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NftMetadataAttrIconResponse"
                        }
                    }
                }
            }
        },
        "/nfts/new-listed": {
            "get": {
                "description": "Get new listed nft collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get new listed nft collection",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 7,
                        "description": "Interval",
                        "name": "interval",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NFTNewListedResponse"
                        }
                    }
                }
            }
        },
        "/nfts/sales": {
            "get": {
                "description": "Get NFT sales",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT sales",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection address",
                        "name": "collection-address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Platform",
                        "name": "platform",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NftSalesResponse"
                        }
                    }
                }
            }
        },
        "/nfts/supported-chains": {
            "post": {
                "description": "Get supported chains",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get supported chains",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSupportedChains"
                        }
                    }
                }
            }
        },
        "/nfts/tickers": {
            "get": {
                "description": "Get NFT token tickers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT token tickers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CollectionAddress",
                        "name": "collection_address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token ID",
                        "name": "token_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "to",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.IndexerGetNFTTokenTickersResponse"
                        }
                    }
                }
            }
        },
        "/nfts/trading-volume": {
            "get": {
                "description": "Get NFT trading volume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT trading volume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NFTTradingVolumeResponse"
                        }
                    }
                }
            }
        },
        "/nfts/{symbol}/{id}": {
            "get": {
                "description": "Get NFT Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Query by using Collection Address",
                        "name": "query_address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.IndexerGetNFTTokenDetailResponseWithSuggestions"
                        }
                    }
                }
            }
        },
        "/nfts/{symbol}/{id}/activity": {
            "get": {
                "description": "Get NFT Activity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT Activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection address | Symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetNFTActivityResponse"
                        }
                    }
                }
            }
        },
        "/onboarding/start": {
            "post": {
                "description": "User did start onboarding",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Onboarding"
                ],
                "summary": "User did start onboarding",
                "parameters": [
                    {
                        "description": "onboarding start request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OnboardingStartRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.OnboardingStartResponse"
                        }
                    }
                }
            }
        },
        "/onchain/invest-stake-data": {
            "get": {
                "description": "Get onchain invest stake data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invest"
                ],
                "summary": "Get onchain invest stake data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "chain id",
                        "name": "chainID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the earning platform (aave_v2, aave_v3)",
                        "name": "platform",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the earning type (stake, lend)",
                        "name": "type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token address want to invest",
                        "name": "tokenAddress",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the user address",
                        "name": "userAddress",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the token amount want to invest (in wei)",
                        "name": "tokenAmount",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.OnchainInvestDataResponse"
                        }
                    }
                }
            }
        },
        "/onchain/invest-unstake-data": {
            "get": {
                "description": "Get onchain invest unstake data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invest"
                ],
                "summary": "Get onchain invest unstake data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "chain id",
                        "name": "chainID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the earning platform (aave_v2, aave_v3)",
                        "name": "platform",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the earning type (stake, lend)",
                        "name": "type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token address want to invest",
                        "name": "tokenAddress",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the user address",
                        "name": "userAddress",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the token amount want to invest (in wei)",
                        "name": "tokenAmount",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.OnchainInvestDataResponse"
                        }
                    }
                }
            }
        },
        "/product-metadata/changelogs": {
            "get": {
                "description": "Get product changelogs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProductMetadata"
                ],
                "summary": "Get product changelogs",
                "parameters": [
                    {
                        "type": "string",
                        "name": "product",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProductChangelogs"
                        }
                    }
                }
            }
        },
        "/product-metadata/changelogs/view": {
            "get": {
                "description": "Get product changelogs viewed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProductMetadata"
                ],
                "summary": "Get product changelogs viewed",
                "parameters": [
                    {
                        "type": "string",
                        "name": "changelogName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "key",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetProductChangelogsViewed"
                        }
                    }
                }
            },
            "post": {
                "description": "Created product changelogs viewed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProductMetadata"
                ],
                "summary": "Created product changelogs viewed",
                "parameters": [
                    {
                        "description": "create product changelogs viewed request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateProductChangelogsViewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateProductChangelogsViewed"
                        }
                    }
                }
            }
        },
        "/product-metadata/commands": {
            "get": {
                "description": "Get product bot commands",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProductMetadata"
                ],
                "summary": "Get product bot commands",
                "parameters": [
                    {
                        "type": "string",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "scope",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProductBotCommand"
                        }
                    }
                }
            }
        },
        "/swap": {
            "post": {
                "description": "Execute swap token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Swap"
                ],
                "summary": "Execute swap token",
                "parameters": [
                    {
                        "description": "swap request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SwapRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/swap/route": {
            "get": {
                "description": "Get swap route for token pairs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Swap"
                ],
                "summary": "Get swap route for token pairs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "from token symbol",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "to token symbol",
                        "name": "to",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from amount value",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "profile ID",
                        "name": "profileId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SwapRouteResponseData"
                        }
                    }
                }
            }
        },
        "/tip/transfer": {
            "post": {
                "description": "API transfer token for tip, airdrop, ...",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tip"
                ],
                "summary": "OffChain Tip Bot - Transfer token",
                "parameters": [
                    {
                        "description": "Transfer token request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OffchainTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.OffchainTipBotTransferTokenResponse"
                        }
                    }
                }
            }
        },
        "/tip/transfer-v2": {
            "post": {
                "description": "API transfer token for tip, airdrop, ...",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tip"
                ],
                "summary": "OffChain Tip Bot - Transfer token v2",
                "parameters": [
                    {
                        "description": "Transfer token request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TransferV2Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TransferTokenV2Response"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Create User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "Create user request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/users/:id/wallets": {
            "get": {
                "description": "Get user's wallets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wallet"
                ],
                "summary": "Get user's wallets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "req",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetTrackingWalletsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTrackingWalletsResponse"
                        }
                    }
                }
            }
        },
        "/users/:id/wallets/:query": {
            "get": {
                "description": "Find one user's trackng wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wallet"
                ],
                "summary": "Find one user's trackng wallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "alias or address query",
                        "name": "query",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetOneWalletResponse"
                        }
                    }
                }
            }
        },
        "/users/gmstreak": {
            "get": {
                "description": "Get user current GM streak",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user current GM streak",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discord ID",
                        "name": "discord_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserCurrentGMStreakResponse"
                        }
                    }
                }
            }
        },
        "/users/profiles/": {
            "get": {
                "description": "Get user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user profile",
                "parameters": [
                    {
                        "type": "string",
                        "name": "guildID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "profileID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetDataUserProfileResponse"
                        }
                    }
                }
            }
        },
        "/users/top": {
            "get": {
                "description": "Get top users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get top users",
                "parameters": [
                    {
                        "type": "string",
                        "name": "guildID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "profileID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TopUser"
                        }
                    }
                }
            }
        },
        "/users/xp": {
            "post": {
                "description": "Send User XP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Send User XP",
                "parameters": [
                    {
                        "description": "Send user XP request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SendUserXPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/users/{id}/cexs/binance/positions": {
            "get": {
                "description": "Get user's future account balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Binance"
                ],
                "summary": "Get user's future account balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BinanceFutureAccountPositionResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/earns/airdrop-campaigns": {
            "get": {
                "description": "Get user earn list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airdrop-campaigns"
                ],
                "summary": "Get user earn list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "is_favorite",
                        "name": "is_favorite",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProfileAirdropCampaignsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create profile airdrop campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airdrop-campaigns"
                ],
                "summary": "Create profile airdrop campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create profile airdrop campaign request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateProfileAirdropCampaignRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProfileAirdropCampaignResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/earns/airdrop-campaigns/{airdrop_campaign_id}": {
            "delete": {
                "description": "Delete profile airdrop campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airdrop-campaigns"
                ],
                "summary": "Delete profile airdrop campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "airdrop campaign id",
                        "name": "airdrop_campaign_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/users/{id}/watchlists/nfts": {
            "get": {
                "description": "Get user's nft watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WatchList"
                ],
                "summary": "Get user's nft watchlist",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "profileID",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetNftWatchlistResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/watchlists/nfts/track": {
            "post": {
                "description": "Add to user's nft watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WatchList"
                ],
                "summary": "Add to user's nft watchlist",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddNftWatchlistRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NftWatchlistSuggestResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/watchlists/nfts/untrack": {
            "post": {
                "description": "Remove from user's nft watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WatchList"
                ],
                "summary": "Remove from user's nft watchlist",
                "parameters": [
                    {
                        "type": "string",
                        "name": "profileID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "symbol",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{id}/watchlists/tokens": {
            "get": {
                "description": "Get user's watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WatchList"
                ],
                "summary": "Get user's watchlist",
                "parameters": [
                    {
                        "type": "string",
                        "name": "coin_gecko_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "profileID",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetWatchlistResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/watchlists/tokens/track": {
            "post": {
                "description": "Add to user's watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WatchList"
                ],
                "summary": "Add to user's watchlist",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddToWatchlistRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AddToWatchlistResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/watchlists/tokens/untrack": {
            "post": {
                "description": "Remove from user's watchlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WatchList"
                ],
                "summary": "Remove from user's watchlist",
                "parameters": [
                    {
                        "type": "string",
                        "name": "symbol",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{id}/watchlists/wallets": {
            "get": {
                "description": "Get user's tracking wallets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WatchList"
                ],
                "summary": "Get user's tracking wallets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTrackingWalletsResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/watchlists/wallets/track": {
            "post": {
                "description": "Track new wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WatchList"
                ],
                "summary": "Track new wallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "req",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TrackWalletRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/users/{id}/watchlists/wallets/untrack": {
            "post": {
                "description": "Untrack a wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WatchList"
                ],
                "summary": "Untrack a wallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "alias",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/users/{id}/watchlists/wallets/{address}": {
            "put": {
                "description": "Update tracked wallet's info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WatchList"
                ],
                "summary": "Update tracked wallet's info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address or current alias of tracked wallet",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "req",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateTrackingInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetOneWalletResponse"
                        }
                    }
                }
            }
        },
        "/users/{user_id}": {
            "get": {
                "description": "Get user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserResponse"
                        }
                    }
                }
            }
        },
        "/vault": {
            "get": {
                "description": "Get vault",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vault"
                ],
                "summary": "Get vault",
                "parameters": [
                    {
                        "type": "string",
                        "default": "false",
                        "name": "noFetchAmount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "vaultId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetVaultResponse"
                        }
                    }
                }
            }
        },
        "/verify/assign-role": {
            "post": {
                "description": "Assign verified role if user has verified wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Assign verified role if user has verified wallet address",
                "parameters": [
                    {
                        "description": "Assign verified role request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AssignVerifiedRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseStatus"
                        }
                    }
                }
            }
        },
        "/verify/config": {
            "put": {
                "description": "Update guild config wallet verification message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Update guild config wallet verification message",
                "parameters": [
                    {
                        "description": "Update guild config wallet verification message request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NewGuildConfigWalletVerificationMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NewGuildConfigWalletVerificationMessageResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Config wallet verification message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Config wallet verification message",
                "parameters": [
                    {
                        "description": "New guild config wallet verification message request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NewGuildConfigWalletVerificationMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NewGuildConfigWalletVerificationMessageResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete guild config wallet verification message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Delete guild config wallet verification message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseStatus"
                        }
                    }
                }
            }
        },
        "/verify/config/{guild_id}": {
            "get": {
                "description": "Get guild config wallet verification message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Get guild config wallet verification message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guild_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NewGuildConfigWalletVerificationMessageResponse"
                        }
                    }
                }
            }
        },
        "/watchlists/wallets": {
            "get": {
                "description": "Get tracking wallets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WatchList"
                ],
                "summary": "Get tracking wallets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "with balance",
                        "name": "with_balance",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTrackingWalletsResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Activity": {
            "type": "object",
            "properties": {
                "guild_default": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "xp": {
                    "type": "integer"
                }
            }
        },
        "model.AirdropCampaign": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deadline_at": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "prev_airdrop_campaign_id": {
                    "type": "integer"
                },
                "profile_campaign_status": {
                    "type": "string"
                },
                "reward_amount": {
                    "type": "integer"
                },
                "reward_token_symbol": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.AirdropStatusCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.Chain": {
            "type": "object",
            "properties": {
                "coin_gecko_id": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "short_name": {
                    "type": "string"
                }
            }
        },
        "model.CoingeckoSupportedTokens": {
            "type": "object",
            "properties": {
                "current_price": {
                    "type": "number"
                },
                "detail_platforms": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "string"
                },
                "is_native": {
                    "type": "boolean"
                },
                "is_not_supported": {
                    "type": "boolean"
                },
                "is_popular": {
                    "type": "boolean"
                },
                "most_popular": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "model.ConfigXpLevel": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "integer"
                },
                "min_xp": {
                    "type": "integer"
                }
            }
        },
        "model.DaoProposal": {
            "type": "object",
            "properties": {
                "closed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "creator_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discussion_channel_id": {
                    "type": "string"
                },
                "guild_config_dao_proposal_id": {
                    "type": "integer"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "voting_channel_id": {
                    "type": "string"
                }
            }
        },
        "model.DaoProposalVoteCount": {
            "type": "object",
            "properties": {
                "choice": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "proposal_id": {
                    "type": "string"
                },
                "sum": {
                    "type": "integer"
                }
            }
        },
        "model.DaoProposalVoteOption": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "proposal_id": {
                    "type": "integer"
                },
                "required_amount": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "vote_option": {
                    "$ref": "#/definitions/model.DaoVoteOption"
                },
                "vote_option_id": {
                    "type": "integer"
                }
            }
        },
        "model.DaoVote": {
            "type": "object",
            "properties": {
                "choice": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "point": {
                    "type": "number"
                },
                "proposal_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.DaoVoteOption": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.DiscordGuild": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "alias": {
                    "type": "string"
                },
                "bot_scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "global_xp": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "log_channel": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildRole"
                    }
                }
            }
        },
        "model.DiscordUserGMStreak": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "last_streak_date": {
                    "type": "string"
                },
                "streak_count": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigActivity": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "activity": {
                    "$ref": "#/definitions/model.Activity"
                },
                "activity_id": {
                    "type": "integer"
                },
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigAdminRole": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigDaoProposal": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "authority": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "guideline_channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "proposal_channel_id": {
                    "type": "string"
                },
                "required_amount": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigDefaultCollection": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigDefaultTicker": {
            "type": "object",
            "properties": {
                "default_ticker": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigGmGn": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "emoji": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "sticker": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigLevelRole": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "level_config": {
                    "$ref": "#/definitions/model.ConfigXpLevel"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigSalesTracker": {
            "type": "object",
            "properties": {
                "chain": {
                    "type": "string"
                },
                "channel_id": {
                    "type": "string"
                },
                "contract_address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigTokenRole": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "required_amount": {
                    "type": "number"
                },
                "role_id": {
                    "type": "string"
                },
                "token": {
                    "$ref": "#/definitions/model.Token"
                },
                "token_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigWalletVerificationMessage": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "discord_message_id": {
                    "type": "string"
                },
                "embedded_message": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "guild_id": {
                    "type": "string"
                },
                "verify_channel_id": {
                    "type": "string"
                },
                "verify_role_id": {
                    "type": "string"
                }
            }
        },
        "model.GuildConfigWelcomeChannel": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "welcome_message": {
                    "type": "string"
                }
            }
        },
        "model.GuildRole": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "model.GuildUser": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "invited_by": {
                    "type": "string"
                },
                "joined_at": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.GuildUserXP": {
            "type": "object",
            "properties": {
                "current_level_role": {
                    "$ref": "#/definitions/model.GuildConfigLevelRole"
                },
                "guild": {
                    "$ref": "#/definitions/model.DiscordGuild"
                },
                "guild_id": {
                    "type": "string"
                },
                "guild_rank": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "next_level_role": {
                    "$ref": "#/definitions/model.GuildConfigLevelRole"
                },
                "nr_of_actions": {
                    "type": "integer"
                },
                "profile_id": {
                    "type": "string"
                },
                "progress": {
                    "type": "number"
                },
                "total_xp": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.MonikerConfig": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "moniker": {
                    "type": "string"
                },
                "plural": {
                    "type": "string"
                },
                "token": {
                    "$ref": "#/definitions/model.OffchainTipBotToken"
                },
                "token_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.NFTCollection": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "erc_format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "model.NFTCollectionDetail": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "chain": {
                    "$ref": "#/definitions/model.Chain"
                },
                "chain_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "erc_format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "model.NewListedNFTCollection": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "chain": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "erc_format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "model.OffchainTipBotToken": {
            "type": "object",
            "properties": {
                "coin_gecko_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "service_fee": {
                    "type": "number"
                },
                "status": {
                    "type": "integer"
                },
                "token_id": {
                    "type": "string"
                },
                "token_name": {
                    "type": "string"
                },
                "token_symbol": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.ProductBotCommand": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discord_alias": {
                    "type": "string"
                },
                "discord_command": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "scope": {
                    "type": "integer"
                },
                "telegram_alias": {
                    "type": "string"
                },
                "telegram_command": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.ProductChangelogView": {
            "type": "object",
            "properties": {
                "changelog_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.ProductChangelogs": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "file_name": {
                    "type": "string"
                },
                "github_url": {
                    "type": "string"
                },
                "is_expired": {
                    "type": "boolean"
                },
                "product": {
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.ProductMetadataEmojis": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "telegram_id": {
                    "type": "string"
                },
                "twitter_id": {
                    "type": "string"
                }
            }
        },
        "model.ProfileAirdropCampaign": {
            "type": "object",
            "properties": {
                "airdrop_campaign": {
                    "$ref": "#/definitions/model.AirdropCampaign"
                },
                "airdrop_campaign_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_favorite": {
                    "type": "boolean"
                },
                "profile_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.Quest": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "frequency": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "rewards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.QuestReward"
                    }
                },
                "routine": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.QuestReward": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "pass_id": {
                    "type": "string"
                },
                "quest_id": {
                    "type": "string"
                },
                "reward_amount": {
                    "type": "integer"
                },
                "reward_type": {
                    "$ref": "#/definitions/model.QuestRewardType"
                },
                "reward_type_id": {
                    "type": "string"
                }
            }
        },
        "model.QuestRewardType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.QuestUserList": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "current": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_claimed": {
                    "type": "boolean"
                },
                "is_completed": {
                    "type": "boolean"
                },
                "multiplier": {
                    "type": "number"
                },
                "quest": {
                    "$ref": "#/definitions/model.Quest"
                },
                "quest_id": {
                    "type": "string"
                },
                "routine": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "target": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.QuestUserReward": {
            "type": "object",
            "properties": {
                "claimed_at": {
                    "type": "string"
                },
                "pass_id": {
                    "type": "string"
                },
                "quest_id": {
                    "type": "string"
                },
                "reward": {
                    "$ref": "#/definitions/model.QuestReward"
                },
                "reward_amount": {
                    "type": "integer"
                },
                "reward_id": {
                    "type": "string"
                },
                "reward_type_id": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.Token": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain": {
                    "$ref": "#/definitions/model.Chain"
                },
                "chain_id": {
                    "type": "integer"
                },
                "coin_gecko_id": {
                    "type": "string"
                },
                "decimal": {
                    "type": "integer"
                },
                "discord_bot_supported": {
                    "type": "boolean"
                },
                "guild_default": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "is_native": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "discriminator": {
                    "type": "string"
                },
                "guild_users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildUser"
                    }
                },
                "id": {
                    "type": "string"
                },
                "nr_of_join": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.UserFeedback": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "completed_at": {
                    "type": "string"
                },
                "confirmed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "feedback": {
                    "type": "string"
                },
                "id": {
                    "$ref": "#/definitions/uuid.NullUUID"
                },
                "message_id": {
                    "type": "string"
                },
                "profile_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.UserTokenSupportRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "coin_gecko_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "decimal": {
                    "type": "integer"
                },
                "guild_id": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "token_address": {
                    "type": "string"
                },
                "token_chain_id": {
                    "type": "integer"
                },
                "token_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_discord_id": {
                    "type": "string"
                }
            }
        },
        "model.UserWalletWatchlist": {
            "type": "object",
            "properties": {
                "copying": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UserWalletWatchlistItem"
                    }
                },
                "following": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UserWalletWatchlistItem"
                    }
                },
                "tracking": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UserWalletWatchlistItem"
                    }
                }
            }
        },
        "model.UserWalletWatchlistItem": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "chain_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "fetched_data": {
                    "type": "boolean"
                },
                "is_owner": {
                    "type": "boolean"
                },
                "net_worth": {
                    "type": "number"
                },
                "profile_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.Vault": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "discord_guild": {
                    "$ref": "#/definitions/model.DiscordGuild"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "solana_wallet_address": {
                    "type": "string"
                },
                "threshold": {
                    "type": "string"
                },
                "total_amount_evm": {
                    "type": "string"
                },
                "total_amount_solana": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "vault_treasurers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.VaultTreasurer"
                    }
                },
                "wallet_address": {
                    "type": "string"
                },
                "wallet_number": {
                    "type": "integer"
                }
            }
        },
        "model.VaultTreasurer": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_discord_id": {
                    "type": "string"
                },
                "user_profile_id": {
                    "type": "string"
                },
                "vault": {
                    "$ref": "#/definitions/model.Vault"
                },
                "vault_id": {
                    "type": "integer"
                }
            }
        },
        "request.AddNftWatchlistRequest": {
            "type": "object",
            "properties": {
                "chain": {
                    "type": "string"
                },
                "collection_address": {
                    "type": "string"
                },
                "collection_symbol": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.AddToWatchlistRequest": {
            "type": "object",
            "properties": {
                "coin_gecko_id": {
                    "type": "string"
                },
                "is_fiat": {
                    "type": "boolean"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "request.AddTokenPriceAlertRequest": {
            "type": "object",
            "properties": {
                "alert_type": {
                    "type": "string",
                    "enum": [
                        "price_reaches",
                        "price_rises_above",
                        "price_drops_to",
                        "change_is_over",
                        "change_is_under"
                    ]
                },
                "frequency": {
                    "type": "string",
                    "enum": [
                        "only_once",
                        "once_a_day",
                        "always"
                    ]
                },
                "price_by_percent": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "user_discord_id": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "request.AssignVerifiedRoleRequest": {
            "type": "object",
            "required": [
                "guild_id",
                "user_discord_id"
            ],
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "user_discord_id": {
                    "type": "string"
                }
            }
        },
        "request.ClaimQuestsRewardsRequest": {
            "type": "object",
            "properties": {
                "quest_id": {
                    "type": "string"
                },
                "routine": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.ConfigDefaultCollection": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "request.ConfigDefaultTokenRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "request.ConfigGroupNFTRoleRequest": {
            "type": "object",
            "properties": {
                "collection_address": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "group_name": {
                    "type": "string"
                },
                "guildID": {
                    "type": "string"
                },
                "number_of_tokens": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "request.ConfigLevelRoleRequest": {
            "type": "object",
            "required": [
                "guildID"
            ],
            "properties": {
                "guildID": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateAirdropCampaignRequest": {
            "type": "object",
            "properties": {
                "deadline_at": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "prev_airdrop_campaign_id": {
                    "type": "integer"
                },
                "reward_amount": {
                    "type": "integer"
                },
                "reward_token_symbol": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "request.CreateDaoProposalRequest": {
            "type": "object",
            "properties": {
                "creator_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "vote_option": {
                    "$ref": "#/definitions/request.VoteOptionRequest"
                },
                "voting_channel_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateDaoVoteRequest": {
            "type": "object",
            "required": [
                "choice",
                "proposal_id",
                "user_id"
            ],
            "properties": {
                "choice": {
                    "type": "string"
                },
                "proposal_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateDefaultRoleRequest": {
            "type": "object",
            "required": [
                "guildID"
            ],
            "properties": {
                "guildID": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateGuildAdminRoleRequest": {
            "type": "object",
            "properties": {
                "guildID": {
                    "type": "string"
                },
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.CreateGuildTokenRole": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "chain": {
                    "type": "string"
                },
                "guildID": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateNFTCollectionRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "chain": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "priority_flag": {
                    "type": "boolean"
                }
            }
        },
        "request.CreateProductChangelogsViewRequest": {
            "type": "object",
            "properties": {
                "changelog_name": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "request.CreateProfileAirdropCampaignRequest": {
            "type": "object",
            "properties": {
                "airdrop_campaign_id": {
                    "type": "integer"
                },
                "is_favorite": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "request.CreateProposalChannelConfig": {
            "type": "object",
            "required": [
                "authority",
                "channel_id",
                "guild_id"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "authority": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "token_holder"
                    ]
                },
                "chain": {
                    "type": "string"
                },
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "required_amount": {
                    "type": "number"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "nft_collection",
                        "crypto_token"
                    ]
                }
            }
        },
        "request.CreateSalesTrackerConfigRequest": {
            "type": "object",
            "properties": {
                "chain": {
                    "type": "string"
                },
                "channel_id": {
                    "type": "string"
                },
                "contract_address": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateTipConfigNotify": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "request.CreateUserRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "invited_by": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.CreateUserTokenSupportRequest": {
            "type": "object",
            "required": [
                "channel_id",
                "guild_id",
                "message_id",
                "token_address",
                "token_chain",
                "user_discord_id"
            ],
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "token_address": {
                    "type": "string"
                },
                "token_chain": {
                    "type": "string"
                },
                "user_discord_id": {
                    "type": "string"
                }
            }
        },
        "request.DeleteGuildConfigDaoProposal": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "request.DeleteMonikerConfigRequest": {
            "type": "object",
            "required": [
                "guild_id",
                "moniker"
            ],
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "moniker": {
                    "type": "string"
                }
            }
        },
        "request.DeleteWelcomeConfigRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.EditMessageRepostRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "origin_channel_id": {
                    "type": "string"
                },
                "origin_message_id": {
                    "type": "string"
                },
                "repost_channel_id": {
                    "type": "string"
                },
                "repost_message_id": {
                    "type": "string"
                }
            }
        },
        "request.GetTrackingWalletsRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "profileID": {
                    "type": "string"
                },
                "withBalance": {
                    "type": "boolean"
                }
            }
        },
        "request.GuildConfigDefaultNftTickerRequest": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "collection_address": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "request.GuildConfigDefaultTickerRequest": {
            "type": "object",
            "properties": {
                "default_ticker": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "request.GuildIDRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                }
            }
        },
        "request.NewGuildConfigWalletVerificationMessageRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "discord_message_id": {
                    "type": "string"
                },
                "embedded_message": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "guild_id": {
                    "type": "string"
                },
                "verify_channel_id": {
                    "type": "string"
                },
                "verify_role_id": {
                    "type": "string"
                }
            }
        },
        "request.OffchainTransferRequest": {
            "type": "object",
            "properties": {
                "all": {
                    "type": "boolean"
                },
                "amount": {
                    "type": "number"
                },
                "chain_id": {
                    "type": "string"
                },
                "channel_id": {
                    "type": "string"
                },
                "each": {
                    "type": "boolean"
                },
                "guild_id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sender": {
                    "type": "string"
                },
                "token": {
                    "description": "AmountString string   ` + "`" + `json:\"amount_string\"` + "`" + `",
                    "type": "string"
                },
                "transfer_type": {
                    "type": "string"
                }
            }
        },
        "request.OnboardingStartRequest": {
            "type": "object",
            "required": [
                "platform",
                "profile_id"
            ],
            "properties": {
                "platform": {
                    "type": "string",
                    "enum": [
                        "discord",
                        "telegram"
                    ]
                },
                "profile_id": {
                    "type": "string"
                }
            }
        },
        "request.RoleReactionRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "reaction": {
                    "type": "string"
                }
            }
        },
        "request.RoleReactionUpdateRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guildID": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "reaction": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "request.SendUserXPRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "each": {
                    "type": "boolean"
                },
                "guild_id": {
                    "type": "string"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.SwapRequest": {
            "type": "object",
            "required": [
                "chainName",
                "userDiscordId"
            ],
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "chainName": {
                    "type": "string"
                },
                "routeSummary": {},
                "swapData": {},
                "userDiscordId": {
                    "type": "string"
                }
            }
        },
        "request.TrackFriendTechKeyRequest": {
            "type": "object",
            "required": [
                "key_address",
                "profile_id"
            ],
            "properties": {
                "decrease_alert_at": {
                    "type": "integer"
                },
                "increase_alert_at": {
                    "type": "integer"
                },
                "key_address": {
                    "type": "string"
                },
                "profile_id": {
                    "type": "string"
                }
            }
        },
        "request.TrackWalletRequest": {
            "type": "object",
            "required": [
                "address",
                "chain_type",
                "type"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "chain_type": {
                    "type": "string"
                },
                "channel_id": {
                    "type": "string"
                },
                "is_owner": {
                    "type": "boolean"
                },
                "message_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.TransferV2Request": {
            "type": "object",
            "properties": {
                "all": {
                    "type": "boolean"
                },
                "amount": {
                    "type": "number"
                },
                "chain_id": {
                    "type": "string"
                },
                "channel_id": {
                    "type": "string"
                },
                "channel_name": {
                    "type": "string"
                },
                "each": {
                    "type": "boolean"
                },
                "guild_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "moniker": {
                    "type": "string"
                },
                "original_amount": {
                    "type": "number"
                },
                "original_tx_id": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sender": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "transfer_type": {
                    "type": "string",
                    "enum": [
                        "transfer",
                        "airdrop"
                    ]
                }
            }
        },
        "request.UnlinkBinance": {
            "type": "object",
            "properties": {
                "discord_user_id": {
                    "type": "string"
                }
            }
        },
        "request.UpdateDaoVoteRequest": {
            "type": "object",
            "required": [
                "choice",
                "user_id"
            ],
            "properties": {
                "choice": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.UpdateFriendTechKeyTrackRequest": {
            "type": "object",
            "properties": {
                "decrease_alert_at": {
                    "type": "integer"
                },
                "increase_alert_at": {
                    "type": "integer"
                }
            }
        },
        "request.UpdateGuildRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "global_xp": {
                    "type": "boolean"
                },
                "left_at": {
                    "type": "string"
                },
                "log_channel": {
                    "type": "string"
                }
            }
        },
        "request.UpdateQuestProgressRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.UpdateTrackingInfoRequest": {
            "type": "object",
            "properties": {
                "alias": {
                    "description": "Request body, only update the following fields",
                    "type": "string"
                }
            }
        },
        "request.UpdateUserFeedbackRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "request.UpsertCustomTokenConfigRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "address": {
                    "type": "string"
                },
                "chain": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "coin_gecko_id": {
                    "type": "string"
                },
                "decimals": {
                    "type": "integer"
                },
                "discord_bot_supported": {
                    "type": "boolean"
                },
                "guild_default": {
                    "type": "boolean"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "request.UpsertGmConfigRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "emoji": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "sticker": {
                    "type": "string"
                }
            }
        },
        "request.UpsertGuildConfigTipRangeRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "max": {
                    "type": "number"
                },
                "min": {
                    "type": "number"
                }
            }
        },
        "request.UpsertGuildDefaultCurrencyRequest": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "request.UpsertGuildTokenConfigRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "guild_id": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "request.UpsertMonikerConfigRequest": {
            "type": "object",
            "required": [
                "amount",
                "guild_id",
                "moniker",
                "token"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "guild_id": {
                    "type": "string"
                },
                "moniker": {
                    "type": "string"
                },
                "plural": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "request.UpsertUserTag": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.UpsertWelcomeConfigRequest": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "welcome_message": {
                    "type": "string"
                }
            }
        },
        "request.UserFeedbackRequest": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "command": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "feedback": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "profile_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.VoteOptionRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "required_amount": {
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.AddToWatchlistResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.AddToWatchlistResponseData"
                }
            }
        },
        "response.AddToWatchlistResponseData": {
            "type": "object",
            "properties": {
                "base_coin": {
                    "$ref": "#/definitions/response.GetCoinResponse"
                },
                "base_suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoingeckoSupportedTokens"
                    }
                },
                "target_coin": {
                    "$ref": "#/definitions/response.GetCoinResponse"
                },
                "target_suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoingeckoSupportedTokens"
                    }
                }
            }
        },
        "response.AddTokenPriceAlertResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.TokenPriceAlertResponseData"
                }
            }
        },
        "response.AirdropCampaignResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.AirdropCampaign"
                }
            }
        },
        "response.AirdropCampaignStatResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AirdropStatusCount"
                    }
                }
            }
        },
        "response.AirdropCampaignsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AirdropCampaign"
                    }
                }
            }
        },
        "response.AssetPlatformResponseData": {
            "type": "object",
            "properties": {
                "chain_identifier": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "shortname": {
                    "type": "string"
                }
            }
        },
        "response.BinanceFutureAccountPositionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.BinanceFuturePositionInformation"
                    }
                }
            }
        },
        "response.BinanceFuturePositionInfo": {
            "type": "object",
            "properties": {
                "entryPrice": {
                    "type": "string"
                },
                "isAutoAddMargin": {
                    "type": "string"
                },
                "isolatedMargin": {
                    "type": "string"
                },
                "isolatedWallet": {
                    "type": "string"
                },
                "leverage": {
                    "type": "string"
                },
                "liquidationPrice": {
                    "type": "string"
                },
                "marginType": {
                    "type": "string"
                },
                "markPrice": {
                    "type": "string"
                },
                "maxNotionalValue": {
                    "type": "string"
                },
                "notional": {
                    "type": "string"
                },
                "positionAmt": {
                    "type": "string"
                },
                "positionSide": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "unRealizedProfit": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "integer"
                }
            }
        },
        "response.BinanceFuturePositionInformation": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "positions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.BinanceFuturePositionInfo"
                    }
                }
            }
        },
        "response.ChainGasTrackerResponseData": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GasTrackerResponse"
                }
            }
        },
        "response.ClaimQuestsRewardsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.ClaimQuestsRewardsResponseData"
                }
            }
        },
        "response.ClaimQuestsRewardsResponseData": {
            "type": "object",
            "properties": {
                "rewards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.QuestUserReward"
                    }
                }
            }
        },
        "response.Coin": {
            "type": "object",
            "properties": {
                "coin_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "large": {
                    "type": "string"
                },
                "market_cap_rank": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price_btc": {
                    "type": "number"
                },
                "score": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "small": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "thumb": {
                    "type": "string"
                }
            }
        },
        "response.CoinImage": {
            "type": "object",
            "properties": {
                "large": {
                    "type": "string"
                },
                "small": {
                    "type": "string"
                },
                "thumb": {
                    "type": "string"
                }
            }
        },
        "response.CoinMarketItemData": {
            "type": "object",
            "properties": {
                "current_price": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_default": {
                    "type": "boolean"
                },
                "is_pair": {
                    "type": "boolean"
                },
                "market_cap": {
                    "type": "number"
                },
                "market_cap_rank": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price_change_percentage_1h_in_currency": {
                    "type": "number"
                },
                "price_change_percentage_24h": {
                    "type": "number"
                },
                "price_change_percentage_24h_in_currency": {
                    "type": "number"
                },
                "price_change_percentage_7d_in_currency": {
                    "type": "number"
                },
                "sparkline_in_7d": {
                    "type": "object",
                    "properties": {
                        "price": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    }
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.CoinPlatformDetailData": {
            "type": "object",
            "properties": {
                "contract_address": {
                    "type": "string"
                },
                "decimal_place": {
                    "type": "integer"
                }
            }
        },
        "response.CoinPriceHistoryResponse": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "times": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timestamps": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "response.CollectionSuggestions": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.CompareTokenReponseData": {
            "type": "object",
            "properties": {
                "base_coin": {
                    "$ref": "#/definitions/response.GetCoinResponse"
                },
                "base_coin_suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoingeckoSupportedTokens"
                    }
                },
                "from": {
                    "type": "string"
                },
                "ratios": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "target_coin": {
                    "$ref": "#/definitions/response.GetCoinResponse"
                },
                "target_coin_suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoingeckoSupportedTokens"
                    }
                },
                "times": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "response.CompareTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.CompareTokenReponseData"
                }
            }
        },
        "response.ConfigGroupNFTRoleResponse": {
            "type": "object",
            "properties": {
                "group_name": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "nft_collection_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NFTCollectionConfig"
                    }
                },
                "number_of_tokens": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "response.ConfigNotifyResponse": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "total_transaction": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.CreateDaoProposalResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.DaoProposal"
                }
            }
        },
        "response.CreateGuildTokenRole": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigTokenRole"
                }
            }
        },
        "response.CreateNFTCollectionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.NFTCollection"
                }
            }
        },
        "response.CreateProductChangelogsViewed": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.ProductChangelogView"
                }
            }
        },
        "response.CreateProposalChannelConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigDaoProposal"
                }
            }
        },
        "response.CreateUserTokenSupportRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.UserTokenSupportRequest"
                }
            }
        },
        "response.DataFilterConfigByReaction": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.RoleReactionResponse"
                },
                "page": {
                    "description": "page index",
                    "type": "integer"
                },
                "size": {
                    "description": "page size",
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.DataListRoleReactionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.ListRoleReactionResponse"
                },
                "page": {
                    "description": "page index",
                    "type": "integer"
                },
                "size": {
                    "description": "page size",
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.DefaultRole": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "response.DefaultRoleResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.DefaultRole"
                }
            }
        },
        "response.DexPair": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "base_token": {
                    "$ref": "#/definitions/response.DexToken"
                },
                "chain_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "dex_id": {
                    "type": "string"
                },
                "fdv": {
                    "type": "number"
                },
                "holders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DexTokenHolder"
                    }
                },
                "id": {
                    "type": "string"
                },
                "liquidity_usd": {
                    "type": "number"
                },
                "market_cap_usd": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "price_percent_change_24h": {
                    "type": "number"
                },
                "price_usd": {
                    "type": "number"
                },
                "quote_token": {
                    "$ref": "#/definitions/response.DexToken"
                },
                "txn_24h_buy": {
                    "type": "integer"
                },
                "txn_24h_sell": {
                    "type": "integer"
                },
                "url": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "volume_usd_24h": {
                    "type": "number"
                }
            }
        },
        "response.DexToken": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.DexTokenHolder": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                },
                "percent": {
                    "type": "number"
                }
            }
        },
        "response.DiscordGuildResponse": {
            "type": "object",
            "properties": {
                "bot_addable": {
                    "type": "boolean"
                },
                "bot_arrived": {
                    "type": "boolean"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "boolean"
                },
                "permissions": {
                    "type": "string",
                    "example": "0"
                }
            }
        },
        "response.DiscordGuildRole": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "integer"
                },
                "hoist": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "managed": {
                    "type": "boolean"
                },
                "mentionable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "unicode_emoji": {
                    "type": "string"
                }
            }
        },
        "response.FindTokenByContractAddressResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.Token"
                }
            }
        },
        "response.FriendTechKey": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "holders": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "price_change_percentage": {
                    "type": "number"
                },
                "profile_checked": {
                    "type": "boolean"
                },
                "supply": {
                    "type": "integer"
                },
                "twitter_pfp_url": {
                    "type": "string"
                },
                "twitter_username": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.FriendTechKeyWatchlistItemResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "decrease_alert_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "increase_alert_at": {
                    "type": "integer"
                },
                "key_address": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/response.FriendTechKey"
                },
                "profile_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.FriendTechKeysResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.FriendTechKey"
                    }
                }
            }
        },
        "response.GasTrackerResponse": {
            "type": "object",
            "properties": {
                "chain": {
                    "type": "string"
                },
                "est_fast_time": {
                    "type": "string"
                },
                "est_propose_time": {
                    "type": "string"
                },
                "est_safe_time": {
                    "type": "string"
                },
                "fast_gas_price": {
                    "type": "string"
                },
                "propose_gas_price": {
                    "type": "string"
                },
                "safe_gas_price": {
                    "type": "string"
                }
            }
        },
        "response.GasTrackerResponseData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GasTrackerResponse"
                    }
                }
            }
        },
        "response.GetAllDaoProposalVotes": {
            "type": "object",
            "properties": {
                "proposal": {
                    "$ref": "#/definitions/response.GetDaoProposalData"
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DaoVote"
                    }
                }
            }
        },
        "response.GetAllDaoProposals": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DaoProposal"
                    }
                }
            }
        },
        "response.GetCoinResponse": {
            "type": "object",
            "properties": {
                "asset_platform": {
                    "$ref": "#/definitions/response.AssetPlatformResponseData"
                },
                "asset_platform_id": {
                    "type": "string"
                },
                "block_time_in_minutes": {
                    "type": "integer"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "coingecko_id": {
                    "type": "string"
                },
                "coingecko_rank": {
                    "type": "integer"
                },
                "coingecko_score": {
                    "type": "number"
                },
                "community_data": {},
                "contract_address": {
                    "type": "string"
                },
                "description": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "detail_platforms": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/response.CoinPlatformDetailData"
                    }
                },
                "developer_data": {},
                "genesis_date": {},
                "hashing_algorithm": {},
                "id": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#/definitions/response.CoinImage"
                },
                "links": {},
                "localization": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "market_cap_rank": {
                    "type": "integer"
                },
                "market_data": {
                    "$ref": "#/definitions/response.MarketData"
                },
                "name": {
                    "type": "string"
                },
                "platforms": {},
                "sentiment_votes_down_percentage": {
                    "type": "number"
                },
                "sentiment_votes_up_percentage": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "tickers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TickerData"
                    }
                },
                "watchlist_users": {
                    "type": "integer"
                }
            }
        },
        "response.GetCoinResponseWrapper": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetCoinResponse"
                }
            }
        },
        "response.GetCoinsMarketDataResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.CoinMarketItemData"
                    }
                }
            }
        },
        "response.GetCollectionCountResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.NFTCollectionCount"
                }
            }
        },
        "response.GetDaoProposalData": {
            "type": "object",
            "properties": {
                "closed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "creator_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discussion_channel_id": {
                    "type": "string"
                },
                "guild_config_dao_proposal_id": {
                    "type": "integer"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DaoProposalVoteCount"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "voting_channel_id": {
                    "type": "string"
                }
            }
        },
        "response.GetDataUserProfileResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetUserProfileResponse"
                }
            }
        },
        "response.GetDefaultTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Token"
                }
            }
        },
        "response.GetDetailNftCollectionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.NFTCollectionDetail"
                }
            }
        },
        "response.GetFiatHistoricalExchangeRatesResponse": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "latest_rate": {
                    "type": "number"
                },
                "rates": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "times": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "response.GetGmConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigGmGn"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GetGuildConfigDaoProposal": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetGuildConfigDaoProposalData"
                }
            }
        },
        "response.GetGuildConfigDaoProposalData": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "authority": {
                    "type": "string"
                },
                "chain": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "guideline_channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "proposal_channel_id": {
                    "type": "string"
                },
                "required_amount": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.GetGuildDefaultNftTickerResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigDefaultCollection"
                }
            }
        },
        "response.GetGuildDefaultTickerResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigDefaultTicker"
                }
            }
        },
        "response.GetGuildResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "alias": {
                    "type": "string"
                },
                "bot_scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "global_xp": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "log_channel": {
                    "type": "string"
                },
                "log_channel_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.GetGuildTokensResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Token"
                    }
                }
            }
        },
        "response.GetGuildUserResponse": {
            "type": "object",
            "properties": {
                "guild_id": {
                    "type": "string"
                },
                "invited_by": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "response.GetGuildsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetGuildResponse"
                    }
                }
            }
        },
        "response.GetHistoricalMarketChartResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.CoinPriceHistoryResponse"
                }
            }
        },
        "response.GetInvestListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.InvestItem"
                    }
                }
            }
        },
        "response.GetLevelRoleConfigsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildConfigLevelRole"
                    }
                },
                "page": {
                    "description": "page index",
                    "type": "integer"
                },
                "size": {
                    "description": "page size",
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.GetListAllChainsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Chain"
                    }
                }
            }
        },
        "response.GetListGuildDefaultTickerResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildConfigDefaultTicker"
                    }
                }
            }
        },
        "response.GetNFTActivityData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.IndexerNFTActivityData"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/util.Pagination"
                }
            }
        },
        "response.GetNFTActivityResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetNFTActivityData"
                }
            }
        },
        "response.GetNFTCollectionByAddressChain": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discord": {
                    "type": "string"
                },
                "erc_format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "marketplaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "response.GetNFTCollectionByAddressChainResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.GetNFTCollectionByAddressChain"
                }
            }
        },
        "response.GetNftWatchlist": {
            "type": "object",
            "properties": {
                "floor_price": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_pair": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price_change_percentage_24h": {
                    "type": "number"
                },
                "price_change_percentage_7d_in_currency": {
                    "type": "number"
                },
                "sparkline_in_7d": {
                    "$ref": "#/definitions/response.SparkLineIn7d"
                },
                "symbol": {
                    "type": "string"
                },
                "token": {
                    "$ref": "#/definitions/response.IndexerToken"
                }
            }
        },
        "response.GetNftWatchlistResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetNftWatchlist"
                    }
                }
            }
        },
        "response.GetOneWalletResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.UserWalletWatchlistItem"
                }
            }
        },
        "response.GetProductChangelogsViewed": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ProductChangelogView"
                    }
                }
            }
        },
        "response.GetSalesTrackerConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildConfigSalesTracker"
                    }
                }
            }
        },
        "response.GetSuggestionNFTCollectionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.CollectionSuggestions"
                    }
                }
            }
        },
        "response.GetSupportedChains": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.GetSupportedTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Token"
                }
            }
        },
        "response.GetSupportedTokensResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Token"
                    }
                }
            }
        },
        "response.GetTopGainerLoser": {
            "type": "object",
            "properties": {
                "top_gainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetTopGainerLoserCoin"
                    }
                },
                "top_losers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetTopGainerLoserCoin"
                    }
                }
            }
        },
        "response.GetTopGainerLoserCoin": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "market_cap_rank": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "usd": {
                    "type": "number"
                },
                "usd_14d_change": {
                    "type": "number"
                },
                "usd_1h_change": {
                    "type": "number"
                },
                "usd_1y_change": {
                    "type": "number"
                },
                "usd_24h_change": {
                    "type": "number"
                },
                "usd_24h_vol": {
                    "type": "number"
                },
                "usd_30d_change": {
                    "type": "number"
                },
                "usd_60d_change": {
                    "type": "number"
                },
                "usd_7d_change": {
                    "type": "number"
                }
            }
        },
        "response.GetTrackingWalletsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.UserWalletWatchlist"
                }
            }
        },
        "response.GetTrendingSearch": {
            "type": "object",
            "properties": {
                "coins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetTrendingSearchCoin"
                    }
                },
                "exchanges": {
                    "description": "this field coingecko return empty"
                }
            }
        },
        "response.GetTrendingSearchCoin": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/definitions/response.Coin"
                }
            }
        },
        "response.GetUserCurrentGMStreakResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.DiscordUserGMStreak"
                }
            }
        },
        "response.GetUserProfileResponse": {
            "type": "object",
            "properties": {
                "current_level": {
                    "$ref": "#/definitions/model.ConfigXpLevel"
                },
                "guild_rank": {
                    "type": "integer"
                },
                "guild_xp": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "next_level": {
                    "$ref": "#/definitions/model.ConfigXpLevel"
                },
                "nr_of_actions": {
                    "type": "integer"
                },
                "progress": {
                    "type": "number"
                }
            }
        },
        "response.GetUserQuestListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.QuestUserList"
                    }
                }
            }
        },
        "response.GetUserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.User"
                }
            }
        },
        "response.GetVaultResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Vault"
                }
            }
        },
        "response.GetVaultsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Vault"
                    }
                }
            }
        },
        "response.GetVote": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.DaoVote"
                }
            }
        },
        "response.GetWatchlistResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.CoinMarketItemData"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/response.PaginationResponse"
                }
            }
        },
        "response.GetWelcomeChannelConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigWelcomeChannel"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GuildConfigDefaultCurrencyResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "tip_bot_token": {
                    "$ref": "#/definitions/model.OffchainTipBotToken"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.GuildConfigTipRangeResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "max": {
                    "type": "number"
                },
                "min": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.IndexerChain": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "is_evm": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.IndexerGetNFTTokenDetailResponseWithSuggestions": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.IndexerNFTTokenDetailData"
                },
                "default_symbol": {
                    "$ref": "#/definitions/response.CollectionSuggestions"
                },
                "suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.CollectionSuggestions"
                    }
                }
            }
        },
        "response.IndexerGetNFTTokenTickersResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.IndexerNFTTokenTickersData"
                }
            }
        },
        "response.IndexerGetNFTTokensResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.IndexerNFTTokenDetailData"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.IndexerNFTActivityData": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "contract_address": {
                    "type": "string"
                },
                "created_time": {
                    "type": "string"
                },
                "event_type": {
                    "type": "string"
                },
                "from_address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_update_time": {
                    "type": "string"
                },
                "listing_price": {
                    "type": "string"
                },
                "listing_price_obj": {
                    "$ref": "#/definitions/response.IndexerPrice"
                },
                "listing_status": {
                    "type": "string"
                },
                "listing_type": {
                    "type": "string"
                },
                "payment_token": {
                    "type": "integer"
                },
                "platform_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "string"
                },
                "sold_price": {
                    "type": "string"
                },
                "sold_price_obj": {
                    "$ref": "#/definitions/response.IndexerPrice"
                },
                "to_address": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "transaction_hash": {
                    "type": "string"
                }
            }
        },
        "response.IndexerNFTCollectionTickersData": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain": {
                    "$ref": "#/definitions/response.IndexerChain"
                },
                "collection_image": {
                    "type": "string"
                },
                "floor_price": {
                    "$ref": "#/definitions/response.IndexerPrice"
                },
                "items": {
                    "type": "integer"
                },
                "last_sale_price": {
                    "$ref": "#/definitions/response.IndexerPrice"
                },
                "marketplaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "owners": {
                    "type": "integer"
                },
                "price_change_1d": {
                    "type": "string"
                },
                "price_change_30d": {
                    "type": "string"
                },
                "price_change_7d": {
                    "type": "string"
                },
                "tickers": {
                    "$ref": "#/definitions/response.IndexerTickers"
                },
                "total_volume": {
                    "$ref": "#/definitions/response.IndexerPrice"
                }
            }
        },
        "response.IndexerNFTCollectionTickersResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.IndexerNFTCollectionTickersData"
                }
            }
        },
        "response.IndexerNFTTokenAttribute": {
            "type": "object",
            "properties": {
                "collection_address": {
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                },
                "frequency": {
                    "type": "string"
                },
                "rarity": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "trait_type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "response.IndexerNFTTokenDetailData": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.IndexerNFTTokenAttribute"
                    }
                },
                "collection_address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "image_cdn": {
                    "type": "string"
                },
                "image_content_type": {
                    "type": "string"
                },
                "marketplace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NftListingMarketplace"
                    }
                },
                "metadata_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/response.IndexerNftTokenOwner"
                },
                "rarity": {
                    "$ref": "#/definitions/response.IndexerNFTTokenRarity"
                },
                "rarity_rank": {
                    "type": "integer"
                },
                "rarity_score": {
                    "type": "string"
                },
                "rarity_tier": {
                    "type": "string"
                },
                "thumbnail_cdn": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "response.IndexerNFTTokenRarity": {
            "type": "object",
            "properties": {
                "rank": {
                    "type": "integer"
                },
                "rarity": {
                    "type": "string"
                },
                "score": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.IndexerNFTTokenTickersData": {
            "type": "object",
            "properties": {
                "collection_address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "floor_price": {
                    "$ref": "#/definitions/response.IndexerPrice"
                },
                "image": {
                    "type": "string"
                },
                "image_cdn": {
                    "type": "string"
                },
                "last_sale_at": {
                    "type": "string"
                },
                "last_sale_price": {
                    "$ref": "#/definitions/response.IndexerPrice"
                },
                "name": {
                    "type": "string"
                },
                "price_change_30d": {
                    "type": "string"
                },
                "price_change_365d": {
                    "type": "string"
                },
                "price_change_90d": {
                    "type": "string"
                },
                "price_change_percentage_30d": {
                    "type": "string"
                },
                "price_change_percentage_365d": {
                    "type": "string"
                },
                "price_change_percentage_90d": {
                    "type": "string"
                },
                "rarity_rank": {
                    "type": "integer"
                },
                "rarity_score": {
                    "type": "string"
                },
                "rarity_tier": {
                    "type": "string"
                },
                "tickers": {
                    "$ref": "#/definitions/response.IndexerTickers"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "response.IndexerNftTokenOwner": {
            "type": "object",
            "properties": {
                "collection_address": {
                    "type": "string"
                },
                "owner_address": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "response.IndexerPrice": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "token": {
                    "$ref": "#/definitions/response.IndexerToken"
                }
            }
        },
        "response.IndexerTickers": {
            "type": "object",
            "properties": {
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.IndexerPrice"
                    }
                },
                "times": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timestamps": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "response.IndexerToken": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "decimals": {
                    "type": "integer"
                },
                "is_native": {
                    "type": "boolean"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.InvestChain": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.InvestItem": {
            "type": "object",
            "properties": {
                "apy": {
                    "type": "number"
                },
                "chain": {
                    "$ref": "#/definitions/response.InvestChain"
                },
                "platforms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.InvestPlatforms"
                    }
                },
                "token": {
                    "$ref": "#/definitions/response.InvestToken"
                },
                "tvl": {
                    "type": "number"
                }
            }
        },
        "response.InvestPlatforms": {
            "type": "object",
            "properties": {
                "apy": {
                    "type": "number"
                },
                "desc": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "reward_apy": {
                    "type": "number"
                },
                "status": {
                    "$ref": "#/definitions/response.InvestStatus"
                },
                "tvl": {
                    "type": "number"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "response.InvestStatus": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "response.InvestToken": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "decimals": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.ListAllCustomTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Token"
                    }
                }
            }
        },
        "response.ListAllNFTCollectionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.NFTCollection"
                    }
                }
            }
        },
        "response.ListConfigNotifyResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ConfigNotifyResponse"
                    }
                }
            }
        },
        "response.ListEmojisResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ProductMetadataEmojis"
                    }
                }
            }
        },
        "response.ListGuildAdminRoles": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildConfigAdminRole"
                    }
                }
            }
        },
        "response.ListGuildGroupNFTRolesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ListGuildNFTRoleConfigsResponse"
                    }
                }
            }
        },
        "response.ListGuildNFTRoleConfigsResponse": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "nft_collection_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NFTCollectionConfig"
                    }
                },
                "number_of_tokens": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "string"
                },
                "role_name": {
                    "type": "string"
                }
            }
        },
        "response.ListGuildTokenRoles": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildConfigTokenRole"
                    }
                },
                "meta": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "response.ListMyGuildsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DiscordGuildResponse"
                    }
                }
            }
        },
        "response.ListRoleReactionResponse": {
            "type": "object",
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.RoleReactionByMessage"
                    }
                },
                "guild_id": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "response.ListTokenPriceAlertResponse": {
            "type": "object",
            "properties": {
                "alert_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "frequency": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "snoozed_to": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_discord_id": {
                    "type": "string"
                }
            }
        },
        "response.MarketData": {
            "type": "object",
            "properties": {
                "ath": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "ath_change_percentage": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "ath_date": {},
                "atl": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "circulating_supply": {
                    "type": "number"
                },
                "current_price": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "fdv_to_tvl_ratio": {},
                "fully_diluted_valuation": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "high_24h": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "low_24h": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "market_cap": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "market_cap_change_24h_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "market_cap_change_percentage_24h_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "market_cap_rank": {
                    "type": "integer"
                },
                "max_supply": {
                    "type": "number"
                },
                "mcap_to_tvl_ratio": {},
                "price_change_24h": {
                    "type": "number"
                },
                "price_change_24h_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "price_change_percentage_14d": {
                    "type": "number"
                },
                "price_change_percentage_14d_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "price_change_percentage_1h": {
                    "type": "number"
                },
                "price_change_percentage_1h_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "price_change_percentage_1y": {
                    "type": "number"
                },
                "price_change_percentage_1y_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "price_change_percentage_200d": {
                    "type": "number"
                },
                "price_change_percentage_200d_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "price_change_percentage_24h": {
                    "type": "number"
                },
                "price_change_percentage_24h_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "price_change_percentage_30d": {
                    "type": "number"
                },
                "price_change_percentage_30d_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "price_change_percentage_60d": {
                    "type": "number"
                },
                "price_change_percentage_60d_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "price_change_percentage_7d": {
                    "type": "number"
                },
                "price_change_percentage_7d_in_currency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "roi": {},
                "total_market_cap": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "total_supply": {
                    "type": "number"
                },
                "total_value_locked": {},
                "total_volume": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                }
            }
        },
        "response.MonikerConfigData": {
            "type": "object",
            "properties": {
                "moniker": {
                    "$ref": "#/definitions/model.MonikerConfig"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "response.MonikerConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.MonikerConfigData"
                    }
                }
            }
        },
        "response.NFTChainCollectionCount": {
            "type": "object",
            "properties": {
                "chain": {
                    "$ref": "#/definitions/model.Chain"
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "response.NFTCollectionConfig": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "chain_name": {
                    "type": "string"
                },
                "collection_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "erc_format": {
                    "type": "string"
                },
                "explorer_url": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.NFTCollectionCount": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NFTChainCollectionCount"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.NFTCollectionsData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.NFTCollection"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/util.Pagination"
                }
            }
        },
        "response.NFTCollectionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.NFTCollectionsData"
                }
            }
        },
        "response.NFTNewListed": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.NewListedNFTCollection"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/util.Pagination"
                }
            }
        },
        "response.NFTNewListedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.NFTNewListed"
                }
            }
        },
        "response.NFTTradingVolume": {
            "type": "object",
            "properties": {
                "collection_address": {
                    "type": "string"
                },
                "collection_chain_id": {
                    "type": "number"
                },
                "collection_name": {
                    "type": "string"
                },
                "collection_symbol": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "trading_volume": {
                    "type": "number"
                }
            }
        },
        "response.NFTTradingVolumeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NFTTradingVolume"
                    }
                }
            }
        },
        "response.NewGuildConfigWalletVerificationMessageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigWalletVerificationMessage"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "response.NewGuildGroupNFTRoleResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.ConfigGroupNFTRoleResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.NftListingMarketplace": {
            "type": "object",
            "properties": {
                "contract_address": {
                    "type": "string"
                },
                "floor_price": {
                    "type": "string"
                },
                "item_url": {
                    "type": "string"
                },
                "listing_price": {
                    "type": "string"
                },
                "listing_status": {
                    "type": "string"
                },
                "payment_token": {
                    "type": "string"
                },
                "payment_token_decimals": {
                    "type": "string"
                },
                "platform_id": {
                    "type": "integer"
                },
                "platform_name": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "response.NftMetadataAttrIcon": {
            "type": "object",
            "properties": {
                "discord_icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "trait_type": {
                    "type": "string"
                },
                "unicode_icon": {
                    "type": "string"
                }
            }
        },
        "response.NftMetadataAttrIconResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NftMetadataAttrIcon"
                    }
                }
            }
        },
        "response.NftSales": {
            "type": "object",
            "properties": {
                "buyer": {
                    "type": "string"
                },
                "nft_collection_address": {
                    "type": "string"
                },
                "nft_name": {
                    "type": "string"
                },
                "nft_price": {
                    "type": "number"
                },
                "nft_price_token": {
                    "type": "string"
                },
                "nft_status": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "seller": {
                    "type": "string"
                }
            }
        },
        "response.NftSalesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NftSales"
                    }
                }
            }
        },
        "response.NftWatchlistSuggest": {
            "type": "object",
            "properties": {
                "default_symbol": {
                    "$ref": "#/definitions/response.CollectionSuggestions"
                },
                "suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.CollectionSuggestions"
                    }
                }
            }
        },
        "response.NftWatchlistSuggestResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.NftWatchlistSuggest"
                }
            }
        },
        "response.OffchainTipBotTransferToken": {
            "type": "object",
            "properties": {
                "amount_each": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "total_amount": {
                    "type": "number"
                },
                "tx_id": {
                    "type": "integer"
                }
            }
        },
        "response.OffchainTipBotTransferTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.OffchainTipBotTransferToken"
                    }
                }
            }
        },
        "response.OnboardingStartData": {
            "type": "object",
            "properties": {
                "reward": {
                    "$ref": "#/definitions/response.OnboardingStartReward"
                },
                "user_already_started": {
                    "type": "boolean"
                }
            }
        },
        "response.OnboardingStartResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.OnboardingStartData"
                }
            }
        },
        "response.OnboardingStartReward": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "response.OnchainInvestData": {
            "type": "object",
            "properties": {
                "tx_object": {
                    "$ref": "#/definitions/response.TxObject"
                }
            }
        },
        "response.OnchainInvestDataResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.OnchainInvestData"
                }
            }
        },
        "response.PaginationResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "description": "page index",
                    "type": "integer"
                },
                "size": {
                    "description": "page size",
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.ProductBotCommand": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ProductBotCommand"
                    }
                }
            }
        },
        "response.ProductChangelogs": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ProductChangelogs"
                    }
                }
            }
        },
        "response.ProfileAirdropCampaignResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.ProfileAirdropCampaign"
                }
            }
        },
        "response.ProfileAirdropCampaignsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ProfileAirdropCampaign"
                    }
                }
            }
        },
        "response.ProfileApiKeyResponse": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "profile_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.ResponseDataMessage": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.ResponseMessage"
                }
            }
        },
        "response.ResponseMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "response.ResponseStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "response.ResponseSucess": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "response.Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "reaction": {
                    "type": "string"
                }
            }
        },
        "response.RoleReactionByMessage": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Role"
                    }
                }
            }
        },
        "response.RoleReactionConfigResponse": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Role"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "response.RoleReactionResponse": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "guild_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/response.Role"
                }
            }
        },
        "response.RouteToken": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "chain_name": {
                    "type": "string"
                },
                "coingecko_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "decimals": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "logo_uri": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.SearchCoinResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoingeckoSupportedTokens"
                    }
                }
            }
        },
        "response.SearchDexPairResponse": {
            "type": "object",
            "properties": {
                "pairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DexPair"
                    }
                }
            }
        },
        "response.SparkLineIn7d": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            }
        },
        "response.SwapRoute": {
            "type": "object",
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "routeSummary": {},
                "routerAddress": {
                    "type": "string"
                },
                "swapData": {},
                "tokenIn": {
                    "$ref": "#/definitions/response.RouteToken"
                },
                "tokenOut": {
                    "$ref": "#/definitions/response.RouteToken"
                }
            }
        },
        "response.SwapRouteResponse": {
            "type": "object",
            "properties": {
                "chainName": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/response.SwapRoute"
                },
                "message": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                }
            }
        },
        "response.SwapRouteResponseData": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.SwapRouteResponse"
                }
            }
        },
        "response.TickerData": {
            "type": "object",
            "properties": {
                "base": {
                    "type": "string"
                },
                "coin_id": {
                    "type": "string"
                },
                "last": {
                    "type": "number"
                },
                "target": {
                    "type": "string"
                },
                "target_coin_id": {
                    "type": "string"
                }
            }
        },
        "response.ToggleActivityConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GuildConfigActivity"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.Token": {
            "type": "object",
            "properties": {
                "decimal": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.TokenHolderStatus": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.TokenHolderStatusData"
                }
            }
        },
        "response.TokenHolderStatusData": {
            "type": "object",
            "properties": {
                "guild_config": {
                    "$ref": "#/definitions/model.GuildConfigDaoProposal"
                },
                "is_qualified": {
                    "type": "boolean"
                },
                "is_wallet_connected": {
                    "type": "boolean"
                },
                "user_holding_amount": {
                    "type": "string"
                },
                "vote_config": {
                    "$ref": "#/definitions/model.DaoProposalVoteOption"
                }
            }
        },
        "response.TokenInfoKeyValue": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "response.TokenInfoResponse": {
            "type": "object",
            "properties": {
                "asset_platform": {
                    "$ref": "#/definitions/response.AssetPlatformResponseData"
                },
                "coingecko_id": {
                    "type": "string"
                },
                "communities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TokenInfoKeyValue"
                    }
                },
                "contracts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TokenInfoKeyValue"
                    }
                },
                "description_lines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "explorers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TokenInfoKeyValue"
                    }
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#/definitions/response.CoinImage"
                },
                "market_data": {
                    "$ref": "#/definitions/response.MarketData"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TokenInfoKeyValue"
                    }
                },
                "wallets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TokenInfoKeyValue"
                    }
                },
                "websites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TokenInfoKeyValue"
                    }
                }
            }
        },
        "response.TokenPriceAlertResponseData": {
            "type": "object",
            "properties": {
                "alert_type": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "frequency": {
                    "type": "string"
                },
                "price_by_percent": {
                    "type": "number"
                },
                "snoozed_to": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "user_discord_id": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "response.TopUser": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/model.GuildUserXP"
                },
                "leaderboard": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GuildUserXP"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/response.PaginationResponse"
                }
            }
        },
        "response.TrackFriendTechKeyResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.FriendTechKeyWatchlistItemResponse"
                }
            }
        },
        "response.TransferTokenV2Data": {
            "type": "object",
            "properties": {
                "amount_each": {
                    "type": "number"
                },
                "external_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "total_amount": {
                    "type": "number"
                },
                "tx_id": {
                    "type": "integer"
                }
            }
        },
        "response.TransferTokenV2Response": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.TransferTokenV2Data"
                }
            }
        },
        "response.TxObject": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "gas_limit": {
                    "type": "string"
                },
                "gas_price": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "response.UnlinkBinance": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "response.UpdateUserFeedbackResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.UserFeedback"
                }
            }
        },
        "response.UpdateVote": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.DaoVote"
                }
            }
        },
        "response.User": {
            "type": "object",
            "properties": {
                "discriminator": {
                    "type": "string"
                },
                "guild_users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetGuildUserResponse"
                    }
                },
                "id": {
                    "type": "string"
                },
                "nr_of_join": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.UserFeedbackResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UserFeedback"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "util.Pagination": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "uuid.NullUUID": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if UUID is not NULL",
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "access_token",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Swagger API",
	Description:      "This is a swagger for mochi api.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
